   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"system_stm32f4xx.c"
  23              	.Ltext0:
  24              		.file 1 "../src/system_stm32f4xx.c"
 24593              		.align	2
 24596              	SystemCoreClock:
 24597 0000 007A030A 		.word	168000000
 24598              		.global	AHBPrescTable
 24599              		.section	.data.AHBPrescTable,"aw",%progbits
 24600              		.align	2
 24603              	AHBPrescTable:
 24604 0000 00       		.byte	0
 24605 0001 00       		.byte	0
 24606 0002 00       		.byte	0
 24607 0003 00       		.byte	0
 24608 0004 00       		.byte	0
 24609 0005 00       		.byte	0
 24610 0006 00       		.byte	0
 24611 0007 00       		.byte	0
 24612 0008 01       		.byte	1
 24613 0009 02       		.byte	2
 24614 000a 03       		.byte	3
 24615 000b 04       		.byte	4
 24616 000c 06       		.byte	6
 24617 000d 07       		.byte	7
 24618 000e 08       		.byte	8
 24619 000f 09       		.byte	9
 24620              		.section	.text.SystemInit,"ax",%progbits
 24621              		.align	2
 24622              		.global	SystemInit
 24623              		.thumb
 24624              		.thumb_func
 24626              	SystemInit:
 24627              	.LFB110:
   1:../src/system_stm32f4xx.c **** /**
   2:../src/system_stm32f4xx.c ****   ******************************************************************************
   3:../src/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../src/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../src/system_stm32f4xx.c ****   * @version V1.0.0
   6:../src/system_stm32f4xx.c ****   * @date    19-September-2011
   7:../src/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../src/system_stm32f4xx.c ****   *          This file contains the system clock configuration for STM32F4xx devices,
   9:../src/system_stm32f4xx.c ****   *          and is generated by the clock configuration tool
  10:../src/system_stm32f4xx.c ****   *          stm32f4xx_Clock_Configuration_V1.0.0.xls
  11:../src/system_stm32f4xx.c ****   *             
  12:../src/system_stm32f4xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:../src/system_stm32f4xx.c ****   *     user application:
  14:../src/system_stm32f4xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../src/system_stm32f4xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../src/system_stm32f4xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:../src/system_stm32f4xx.c ****   *                      This function is called at startup just after reset and 
  18:../src/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  19:../src/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  20:../src/system_stm32f4xx.c ****   *
  21:../src/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../src/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  23:../src/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  24:../src/system_stm32f4xx.c ****   *                                     
  25:../src/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../src/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  27:../src/system_stm32f4xx.c ****   *                                 during program execution.
  28:../src/system_stm32f4xx.c ****   *
  29:../src/system_stm32f4xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:../src/system_stm32f4xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  31:../src/system_stm32f4xx.c ****   *    configure the system clock before to branch to main program.
  32:../src/system_stm32f4xx.c ****   *
  33:../src/system_stm32f4xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../src/system_stm32f4xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:../src/system_stm32f4xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../src/system_stm32f4xx.c ****   *
  37:../src/system_stm32f4xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz, refer to "HSE_VALUE" define
  38:../src/system_stm32f4xx.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
  39:../src/system_stm32f4xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../src/system_stm32f4xx.c ****   *    value to your own configuration.
  41:../src/system_stm32f4xx.c ****   *
  42:../src/system_stm32f4xx.c ****   * 5. This file configures the system clock as follows:
  43:../src/system_stm32f4xx.c ****   *=============================================================================
  44:../src/system_stm32f4xx.c ****   *=============================================================================
  45:../src/system_stm32f4xx.c ****   *        Supported STM32F4xx device revision    | Rev A
  46:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  47:../src/system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
  48:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  49:../src/system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 168000000
  50:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  51:../src/system_stm32f4xx.c ****   *        HCLK(Hz)                               | 168000000
  52:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  53:../src/system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  54:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  55:../src/system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
  56:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  57:../src/system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
  58:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  59:../src/system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 8000000
  60:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  61:../src/system_stm32f4xx.c ****   *        PLL_M                                  | 8
  62:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  63:../src/system_stm32f4xx.c ****   *        PLL_N                                  | 336
  64:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  65:../src/system_stm32f4xx.c ****   *        PLL_P                                  | 2
  66:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  67:../src/system_stm32f4xx.c ****   *        PLL_Q                                  | 7
  68:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  69:../src/system_stm32f4xx.c ****   *        PLLI2S_N                               | 192
  70:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  71:../src/system_stm32f4xx.c ****   *        PLLI2S_R                               | 5
  72:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  73:../src/system_stm32f4xx.c ****   *        I2S input clock(Hz)                    | 38400000
  74:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  75:../src/system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
  76:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  77:../src/system_stm32f4xx.c ****   *        High Performance mode                  | Enabled
  78:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  79:../src/system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
  80:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  81:../src/system_stm32f4xx.c ****   *        Prefetch Buffer                        | OFF
  82:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  83:../src/system_stm32f4xx.c ****   *        Instruction cache                      | ON
  84:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  85:../src/system_stm32f4xx.c ****   *        Data cache                             | ON
  86:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  87:../src/system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Enabled
  88:../src/system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
  89:../src/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  90:../src/system_stm32f4xx.c ****   *=============================================================================
  91:../src/system_stm32f4xx.c ****   ****************************************************************************** 
  92:../src/system_stm32f4xx.c ****   * @attention
  93:../src/system_stm32f4xx.c ****   *
  94:../src/system_stm32f4xx.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  95:../src/system_stm32f4xx.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  96:../src/system_stm32f4xx.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  97:../src/system_stm32f4xx.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  98:../src/system_stm32f4xx.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  99:../src/system_stm32f4xx.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 100:../src/system_stm32f4xx.c ****   *
 101:../src/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 102:../src/system_stm32f4xx.c ****   ******************************************************************************
 103:../src/system_stm32f4xx.c ****   */
 104:../src/system_stm32f4xx.c **** 
 105:../src/system_stm32f4xx.c **** /** @addtogroup CMSIS
 106:../src/system_stm32f4xx.c ****   * @{
 107:../src/system_stm32f4xx.c ****   */
 108:../src/system_stm32f4xx.c **** 
 109:../src/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
 110:../src/system_stm32f4xx.c ****   * @{
 111:../src/system_stm32f4xx.c ****   */  
 112:../src/system_stm32f4xx.c ****   
 113:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 114:../src/system_stm32f4xx.c ****   * @{
 115:../src/system_stm32f4xx.c ****   */
 116:../src/system_stm32f4xx.c **** 
 117:../src/system_stm32f4xx.c **** #include "stm32f4xx.h"
 118:../src/system_stm32f4xx.c **** 
 119:../src/system_stm32f4xx.c **** /**
 120:../src/system_stm32f4xx.c ****   * @}
 121:../src/system_stm32f4xx.c ****   */
 122:../src/system_stm32f4xx.c **** 
 123:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 124:../src/system_stm32f4xx.c ****   * @{
 125:../src/system_stm32f4xx.c ****   */
 126:../src/system_stm32f4xx.c **** 
 127:../src/system_stm32f4xx.c **** /**
 128:../src/system_stm32f4xx.c ****   * @}
 129:../src/system_stm32f4xx.c ****   */
 130:../src/system_stm32f4xx.c **** 
 131:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 132:../src/system_stm32f4xx.c ****   * @{
 133:../src/system_stm32f4xx.c ****   */
 134:../src/system_stm32f4xx.c **** 
 135:../src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 136:../src/system_stm32f4xx.c ****      on STM324xG_EVAL board as data memory  */
 137:../src/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
 138:../src/system_stm32f4xx.c **** 
 139:../src/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 140:../src/system_stm32f4xx.c ****      Internal SRAM. */
 141:../src/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 142:../src/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 143:../src/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 144:../src/system_stm32f4xx.c **** 
 145:../src/system_stm32f4xx.c **** 
 146:../src/system_stm32f4xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 147:../src/system_stm32f4xx.c **** #define PLL_M      8
 148:../src/system_stm32f4xx.c **** #define PLL_N      336
 149:../src/system_stm32f4xx.c **** 
 150:../src/system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 151:../src/system_stm32f4xx.c **** #define PLL_P      2
 152:../src/system_stm32f4xx.c **** 
 153:../src/system_stm32f4xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 154:../src/system_stm32f4xx.c **** #define PLL_Q      7
 155:../src/system_stm32f4xx.c **** 
 156:../src/system_stm32f4xx.c **** /* PLLI2S_VCO = (HSE_VALUE Or HSI_VALUE / PLL_M) * PLLI2S_N
 157:../src/system_stm32f4xx.c ****    I2SCLK = PLLI2S_VCO / PLLI2S_R */
 158:../src/system_stm32f4xx.c **** #define PLLI2S_N   192
 159:../src/system_stm32f4xx.c **** #define PLLI2S_R   5
 160:../src/system_stm32f4xx.c **** 
 161:../src/system_stm32f4xx.c **** /**
 162:../src/system_stm32f4xx.c ****   * @}
 163:../src/system_stm32f4xx.c ****   */
 164:../src/system_stm32f4xx.c **** 
 165:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 166:../src/system_stm32f4xx.c ****   * @{
 167:../src/system_stm32f4xx.c ****   */
 168:../src/system_stm32f4xx.c **** 
 169:../src/system_stm32f4xx.c **** /**
 170:../src/system_stm32f4xx.c ****   * @}
 171:../src/system_stm32f4xx.c ****   */
 172:../src/system_stm32f4xx.c **** 
 173:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 174:../src/system_stm32f4xx.c ****   * @{
 175:../src/system_stm32f4xx.c ****   */
 176:../src/system_stm32f4xx.c **** 
 177:../src/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 168000000;
 178:../src/system_stm32f4xx.c **** 
 179:../src/system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 180:../src/system_stm32f4xx.c **** 
 181:../src/system_stm32f4xx.c **** /**
 182:../src/system_stm32f4xx.c ****   * @}
 183:../src/system_stm32f4xx.c ****   */
 184:../src/system_stm32f4xx.c **** 
 185:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 186:../src/system_stm32f4xx.c ****   * @{
 187:../src/system_stm32f4xx.c ****   */
 188:../src/system_stm32f4xx.c **** 
 189:../src/system_stm32f4xx.c **** static void SetSysClock(void);
 190:../src/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 191:../src/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 192:../src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 193:../src/system_stm32f4xx.c **** 
 194:../src/system_stm32f4xx.c **** /**
 195:../src/system_stm32f4xx.c ****   * @}
 196:../src/system_stm32f4xx.c ****   */
 197:../src/system_stm32f4xx.c **** 
 198:../src/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 199:../src/system_stm32f4xx.c ****   * @{
 200:../src/system_stm32f4xx.c ****   */
 201:../src/system_stm32f4xx.c **** 
 202:../src/system_stm32f4xx.c **** /**
 203:../src/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 204:../src/system_stm32f4xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 205:../src/system_stm32f4xx.c ****   *         SystemFrequency variable.
 206:../src/system_stm32f4xx.c ****   * @param  None
 207:../src/system_stm32f4xx.c ****   * @retval None
 208:../src/system_stm32f4xx.c ****   */
 209:../src/system_stm32f4xx.c **** void SystemInit(void)
 210:../src/system_stm32f4xx.c **** {
 24628              		.loc 1 210 0
 24629              		.cfi_startproc
 24630              		@ args = 0, pretend = 0, frame = 0
 24631              		@ frame_needed = 1, uses_anonymous_args = 0
 24632 0000 80B5     		push	{r7, lr}
 24633              	.LCFI0:
 24634              		.cfi_def_cfa_offset 8
 24635 0002 00AF     		add	r7, sp, #0
 24636              		.cfi_offset 14, -4
 24637              		.cfi_offset 7, -8
 24638              	.LCFI1:
 24639              		.cfi_def_cfa_register 7
 211:../src/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 212:../src/system_stm32f4xx.c ****   /* Set HSION bit */
 213:../src/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 24640              		.loc 1 213 0
 24641 0004 124B     		ldr	r3, .L2
 24642 0006 124A     		ldr	r2, .L2
 24643 0008 1268     		ldr	r2, [r2, #0]
 24644 000a 42F00102 		orr	r2, r2, #1
 24645 000e 1A60     		str	r2, [r3, #0]
 214:../src/system_stm32f4xx.c **** 
 215:../src/system_stm32f4xx.c ****   /* Reset CFGR register */
 216:../src/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 24646              		.loc 1 216 0
 24647 0010 0F4B     		ldr	r3, .L2
 24648 0012 4FF00002 		mov	r2, #0
 24649 0016 9A60     		str	r2, [r3, #8]
 217:../src/system_stm32f4xx.c **** 
 218:../src/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 219:../src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 24650              		.loc 1 219 0
 24651 0018 0D4A     		ldr	r2, .L2
 24652 001a 0D4B     		ldr	r3, .L2
 24653 001c 1B68     		ldr	r3, [r3, #0]
 24654 001e 23F08473 		bic	r3, r3, #17301504
 24655 0022 23F48033 		bic	r3, r3, #65536
 24656 0026 1360     		str	r3, [r2, #0]
 220:../src/system_stm32f4xx.c **** 
 221:../src/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 222:../src/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 24657              		.loc 1 222 0
 24658 0028 094B     		ldr	r3, .L2
 24659 002a 0A4A     		ldr	r2, .L2+4
 24660 002c 5A60     		str	r2, [r3, #4]
 223:../src/system_stm32f4xx.c **** 
 224:../src/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 225:../src/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 24661              		.loc 1 225 0
 24662 002e 084B     		ldr	r3, .L2
 24663 0030 074A     		ldr	r2, .L2
 24664 0032 1268     		ldr	r2, [r2, #0]
 24665 0034 22F48022 		bic	r2, r2, #262144
 24666 0038 1A60     		str	r2, [r3, #0]
 226:../src/system_stm32f4xx.c **** 
 227:../src/system_stm32f4xx.c ****   /* Disable all interrupts */
 228:../src/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 24667              		.loc 1 228 0
 24668 003a 054B     		ldr	r3, .L2
 24669 003c 4FF00002 		mov	r2, #0
 24670 0040 DA60     		str	r2, [r3, #12]
 229:../src/system_stm32f4xx.c **** 
 230:../src/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 231:../src/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 232:../src/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 233:../src/system_stm32f4xx.c ****          
 234:../src/system_stm32f4xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 235:../src/system_stm32f4xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 236:../src/system_stm32f4xx.c ****   SetSysClock();
 24671              		.loc 1 236 0
 24672 0042 FFF7FEFF 		bl	SetSysClock
 237:../src/system_stm32f4xx.c **** 
 238:../src/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 239:../src/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 240:../src/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 241:../src/system_stm32f4xx.c **** #else
 242:../src/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 24673              		.loc 1 242 0
 24674 0046 044B     		ldr	r3, .L2+8
 24675 0048 4FF00062 		mov	r2, #134217728
 24676 004c 9A60     		str	r2, [r3, #8]
 243:../src/system_stm32f4xx.c **** #endif
 244:../src/system_stm32f4xx.c **** }
 24677              		.loc 1 244 0
 24678 004e 80BD     		pop	{r7, pc}
 24679              	.L3:
 24680              		.align	2
 24681              	.L2:
 24682 0050 00380240 		.word	1073887232
 24683 0054 10300024 		.word	603992080
 24684 0058 00ED00E0 		.word	-536810240
 24685              		.cfi_endproc
 24686              	.LFE110:
 24688              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 24689              		.align	2
 24690              		.global	SystemCoreClockUpdate
 24691              		.thumb
 24692              		.thumb_func
 24694              	SystemCoreClockUpdate:
 24695              	.LFB111:
 245:../src/system_stm32f4xx.c **** 
 246:../src/system_stm32f4xx.c **** /**
 247:../src/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 248:../src/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 249:../src/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 250:../src/system_stm32f4xx.c ****   *         other parameters.
 251:../src/system_stm32f4xx.c ****   *           
 252:../src/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 253:../src/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 254:../src/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 255:../src/system_stm32f4xx.c ****   *     
 256:../src/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 257:../src/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 258:../src/system_stm32f4xx.c ****   *           constant and the selected clock source:
 259:../src/system_stm32f4xx.c ****   *             
 260:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 261:../src/system_stm32f4xx.c ****   *                                              
 262:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 263:../src/system_stm32f4xx.c ****   *                          
 264:../src/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 265:../src/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 266:../src/system_stm32f4xx.c ****   *         
 267:../src/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 268:../src/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 269:../src/system_stm32f4xx.c ****   *             in voltage and temperature.   
 270:../src/system_stm32f4xx.c ****   *    
 271:../src/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 272:../src/system_stm32f4xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 273:../src/system_stm32f4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 274:../src/system_stm32f4xx.c ****   *              have wrong result.
 275:../src/system_stm32f4xx.c ****   *                
 276:../src/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 277:../src/system_stm32f4xx.c ****   *           value for HSE crystal.
 278:../src/system_stm32f4xx.c ****   *     
 279:../src/system_stm32f4xx.c ****   * @param  None
 280:../src/system_stm32f4xx.c ****   * @retval None
 281:../src/system_stm32f4xx.c ****   */
 282:../src/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 283:../src/system_stm32f4xx.c **** {
 24696              		.loc 1 283 0
 24697              		.cfi_startproc
 24698              		@ args = 0, pretend = 0, frame = 24
 24699              		@ frame_needed = 1, uses_anonymous_args = 0
 24700              		@ link register save eliminated.
 24701 0000 80B4     		push	{r7}
 24702              	.LCFI2:
 24703              		.cfi_def_cfa_offset 4
 24704 0002 87B0     		sub	sp, sp, #28
 24705              	.LCFI3:
 24706              		.cfi_def_cfa_offset 32
 24707 0004 00AF     		add	r7, sp, #0
 24708              		.cfi_offset 7, -4
 24709              	.LCFI4:
 24710              		.cfi_def_cfa_register 7
 284:../src/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 24711              		.loc 1 284 0
 24712 0006 4FF00003 		mov	r3, #0
 24713 000a 3B61     		str	r3, [r7, #16]
 24714 000c 4FF00003 		mov	r3, #0
 24715 0010 7B61     		str	r3, [r7, #20]
 24716 0012 4FF00203 		mov	r3, #2
 24717 0016 FB60     		str	r3, [r7, #12]
 24718 0018 4FF00003 		mov	r3, #0
 24719 001c BB60     		str	r3, [r7, #8]
 24720 001e 4FF00203 		mov	r3, #2
 24721 0022 7B60     		str	r3, [r7, #4]
 285:../src/system_stm32f4xx.c ****   
 286:../src/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 287:../src/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 24722              		.loc 1 287 0
 24723 0024 364B     		ldr	r3, .L13
 24724 0026 9B68     		ldr	r3, [r3, #8]
 24725 0028 03F00C03 		and	r3, r3, #12
 24726 002c 3B61     		str	r3, [r7, #16]
 288:../src/system_stm32f4xx.c **** 
 289:../src/system_stm32f4xx.c ****   switch (tmp)
 24727              		.loc 1 289 0
 24728 002e 3B69     		ldr	r3, [r7, #16]
 24729 0030 042B     		cmp	r3, #4
 24730 0032 07D0     		beq	.L7
 24731 0034 082B     		cmp	r3, #8
 24732 0036 09D0     		beq	.L8
 24733 0038 002B     		cmp	r3, #0
 24734 003a 47D1     		bne	.L12
 24735              	.L6:
 290:../src/system_stm32f4xx.c ****   {
 291:../src/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 292:../src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 24736              		.loc 1 292 0
 24737 003c 314B     		ldr	r3, .L13+4
 24738 003e 324A     		ldr	r2, .L13+8
 24739 0040 1A60     		str	r2, [r3, #0]
 293:../src/system_stm32f4xx.c ****       break;
 24740              		.loc 1 293 0
 24741 0042 47E0     		b	.L9
 24742              	.L7:
 294:../src/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 295:../src/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 24743              		.loc 1 295 0
 24744 0044 2F4B     		ldr	r3, .L13+4
 24745 0046 314A     		ldr	r2, .L13+12
 24746 0048 1A60     		str	r2, [r3, #0]
 296:../src/system_stm32f4xx.c ****       break;
 24747              		.loc 1 296 0
 24748 004a 43E0     		b	.L9
 24749              	.L8:
 297:../src/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 298:../src/system_stm32f4xx.c **** 
 299:../src/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 300:../src/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 301:../src/system_stm32f4xx.c ****          */    
 302:../src/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 24750              		.loc 1 302 0
 24751 004c 2C4B     		ldr	r3, .L13
 24752 004e 5B68     		ldr	r3, [r3, #4]
 24753 0050 03F48003 		and	r3, r3, #4194304
 24754 0054 4FEA9353 		lsr	r3, r3, #22
 24755 0058 BB60     		str	r3, [r7, #8]
 303:../src/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 24756              		.loc 1 303 0
 24757 005a 294B     		ldr	r3, .L13
 24758 005c 5B68     		ldr	r3, [r3, #4]
 24759 005e 03F03F03 		and	r3, r3, #63
 24760 0062 7B60     		str	r3, [r7, #4]
 304:../src/system_stm32f4xx.c ****       
 305:../src/system_stm32f4xx.c ****       if (pllsource != 0)
 24761              		.loc 1 305 0
 24762 0064 BB68     		ldr	r3, [r7, #8]
 24763 0066 002B     		cmp	r3, #0
 24764 0068 0FD0     		beq	.L10
 306:../src/system_stm32f4xx.c ****       {
 307:../src/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 308:../src/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 24765              		.loc 1 308 0
 24766 006a 284A     		ldr	r2, .L13+12
 24767 006c 7B68     		ldr	r3, [r7, #4]
 24768 006e B2FBF3F2 		udiv	r2, r2, r3
 24769 0072 234B     		ldr	r3, .L13
 24770 0074 5968     		ldr	r1, [r3, #4]
 24771 0076 47F6C073 		movw	r3, #32704
 24772 007a 01EA0303 		and	r3, r1, r3
 24773 007e 4FEA9313 		lsr	r3, r3, #6
 24774 0082 03FB02F3 		mul	r3, r3, r2
 24775 0086 7B61     		str	r3, [r7, #20]
 24776 0088 0EE0     		b	.L11
 24777              	.L10:
 309:../src/system_stm32f4xx.c ****       }
 310:../src/system_stm32f4xx.c ****       else
 311:../src/system_stm32f4xx.c ****       {
 312:../src/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 313:../src/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 24778              		.loc 1 313 0
 24779 008a 1F4A     		ldr	r2, .L13+8
 24780 008c 7B68     		ldr	r3, [r7, #4]
 24781 008e B2FBF3F2 		udiv	r2, r2, r3
 24782 0092 1B4B     		ldr	r3, .L13
 24783 0094 5968     		ldr	r1, [r3, #4]
 24784 0096 47F6C073 		movw	r3, #32704
 24785 009a 01EA0303 		and	r3, r1, r3
 24786 009e 4FEA9313 		lsr	r3, r3, #6
 24787 00a2 03FB02F3 		mul	r3, r3, r2
 24788 00a6 7B61     		str	r3, [r7, #20]
 24789              	.L11:
 314:../src/system_stm32f4xx.c ****       }
 315:../src/system_stm32f4xx.c **** 
 316:../src/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 24790              		.loc 1 316 0
 24791 00a8 154B     		ldr	r3, .L13
 24792 00aa 5B68     		ldr	r3, [r3, #4]
 24793 00ac 03F44033 		and	r3, r3, #196608
 24794 00b0 4FEA1343 		lsr	r3, r3, #16
 24795 00b4 03F10103 		add	r3, r3, #1
 24796 00b8 4FEA4303 		lsl	r3, r3, #1
 24797 00bc FB60     		str	r3, [r7, #12]
 317:../src/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 24798              		.loc 1 317 0
 24799 00be 7A69     		ldr	r2, [r7, #20]
 24800 00c0 FB68     		ldr	r3, [r7, #12]
 24801 00c2 B2FBF3F2 		udiv	r2, r2, r3
 24802 00c6 0F4B     		ldr	r3, .L13+4
 24803 00c8 1A60     		str	r2, [r3, #0]
 318:../src/system_stm32f4xx.c ****       break;
 24804              		.loc 1 318 0
 24805 00ca 03E0     		b	.L9
 24806              	.L12:
 319:../src/system_stm32f4xx.c ****     default:
 320:../src/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 24807              		.loc 1 320 0
 24808 00cc 0D4B     		ldr	r3, .L13+4
 24809 00ce 0E4A     		ldr	r2, .L13+8
 24810 00d0 1A60     		str	r2, [r3, #0]
 321:../src/system_stm32f4xx.c ****       break;
 24811              		.loc 1 321 0
 24812 00d2 00BF     		nop
 24813              	.L9:
 322:../src/system_stm32f4xx.c ****   }
 323:../src/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 324:../src/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 325:../src/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 24814              		.loc 1 325 0
 24815 00d4 0A4B     		ldr	r3, .L13
 24816 00d6 9B68     		ldr	r3, [r3, #8]
 24817 00d8 03F0F003 		and	r3, r3, #240
 24818 00dc 4FEA1313 		lsr	r3, r3, #4
 24819 00e0 0B4A     		ldr	r2, .L13+16
 24820 00e2 D35C     		ldrb	r3, [r2, r3]
 24821 00e4 DBB2     		uxtb	r3, r3
 24822 00e6 3B61     		str	r3, [r7, #16]
 326:../src/system_stm32f4xx.c ****   /* HCLK frequency */
 327:../src/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 24823              		.loc 1 327 0
 24824 00e8 064B     		ldr	r3, .L13+4
 24825 00ea 1A68     		ldr	r2, [r3, #0]
 24826 00ec 3B69     		ldr	r3, [r7, #16]
 24827 00ee 22FA03F2 		lsr	r2, r2, r3
 24828 00f2 044B     		ldr	r3, .L13+4
 24829 00f4 1A60     		str	r2, [r3, #0]
 328:../src/system_stm32f4xx.c **** }
 24830              		.loc 1 328 0
 24831 00f6 07F11C07 		add	r7, r7, #28
 24832 00fa BD46     		mov	sp, r7
 24833 00fc 80BC     		pop	{r7}
 24834 00fe 7047     		bx	lr
 24835              	.L14:
 24836              		.align	2
 24837              	.L13:
 24838 0100 00380240 		.word	1073887232
 24839 0104 00000000 		.word	SystemCoreClock
 24840 0108 0024F400 		.word	16000000
 24841 010c 00127A00 		.word	8000000
 24842 0110 00000000 		.word	AHBPrescTable
 24843              		.cfi_endproc
 24844              	.LFE111:
 24846              		.section	.text.SetSysClock,"ax",%progbits
 24847              		.align	2
 24848              		.thumb
 24849              		.thumb_func
 24851              	SetSysClock:
 24852              	.LFB112:
 329:../src/system_stm32f4xx.c **** 
 330:../src/system_stm32f4xx.c **** /**
 331:../src/system_stm32f4xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 332:../src/system_stm32f4xx.c ****   *         AHB/APBx prescalers and Flash settings
 333:../src/system_stm32f4xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 334:../src/system_stm32f4xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 335:../src/system_stm32f4xx.c ****   * @param  None
 336:../src/system_stm32f4xx.c ****   * @retval None
 337:../src/system_stm32f4xx.c ****   */
 338:../src/system_stm32f4xx.c **** static void SetSysClock(void)
 339:../src/system_stm32f4xx.c **** {
 24853              		.loc 1 339 0
 24854              		.cfi_startproc
 24855              		@ args = 0, pretend = 0, frame = 8
 24856              		@ frame_needed = 1, uses_anonymous_args = 0
 24857              		@ link register save eliminated.
 24858 0000 80B4     		push	{r7}
 24859              	.LCFI5:
 24860              		.cfi_def_cfa_offset 4
 24861 0002 83B0     		sub	sp, sp, #12
 24862              	.LCFI6:
 24863              		.cfi_def_cfa_offset 16
 24864 0004 00AF     		add	r7, sp, #0
 24865              		.cfi_offset 7, -4
 24866              	.LCFI7:
 24867              		.cfi_def_cfa_register 7
 340:../src/system_stm32f4xx.c **** /******************************************************************************/
 341:../src/system_stm32f4xx.c **** /*            PLL (clocked by HSE) used as System clock source                */
 342:../src/system_stm32f4xx.c **** /******************************************************************************/
 343:../src/system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 24868              		.loc 1 343 0
 24869 0006 4FF00003 		mov	r3, #0
 24870 000a 7B60     		str	r3, [r7, #4]
 24871 000c 4FF00003 		mov	r3, #0
 24872 0010 3B60     		str	r3, [r7, #0]
 344:../src/system_stm32f4xx.c ****   
 345:../src/system_stm32f4xx.c ****   /* Enable HSE */
 346:../src/system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 24873              		.loc 1 346 0
 24874 0012 424B     		ldr	r3, .L24
 24875 0014 414A     		ldr	r2, .L24
 24876 0016 1268     		ldr	r2, [r2, #0]
 24877 0018 42F48032 		orr	r2, r2, #65536
 24878 001c 1A60     		str	r2, [r3, #0]
 24879              	.L17:
 347:../src/system_stm32f4xx.c ****  
 348:../src/system_stm32f4xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 349:../src/system_stm32f4xx.c ****   do
 350:../src/system_stm32f4xx.c ****   {
 351:../src/system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 24880              		.loc 1 351 0 discriminator 1
 24881 001e 3F4B     		ldr	r3, .L24
 24882 0020 1B68     		ldr	r3, [r3, #0]
 24883 0022 03F40033 		and	r3, r3, #131072
 24884 0026 3B60     		str	r3, [r7, #0]
 352:../src/system_stm32f4xx.c ****     StartUpCounter++;
 24885              		.loc 1 352 0 discriminator 1
 24886 0028 7B68     		ldr	r3, [r7, #4]
 24887 002a 03F10103 		add	r3, r3, #1
 24888 002e 7B60     		str	r3, [r7, #4]
 353:../src/system_stm32f4xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 24889              		.loc 1 353 0 discriminator 1
 24890 0030 3B68     		ldr	r3, [r7, #0]
 24891 0032 002B     		cmp	r3, #0
 24892 0034 03D1     		bne	.L16
 24893 0036 7B68     		ldr	r3, [r7, #4]
 24894 0038 B3F5A06F 		cmp	r3, #1280
 24895 003c EFD1     		bne	.L17
 24896              	.L16:
 354:../src/system_stm32f4xx.c **** 
 355:../src/system_stm32f4xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 24897              		.loc 1 355 0
 24898 003e 374B     		ldr	r3, .L24
 24899 0040 1B68     		ldr	r3, [r3, #0]
 24900 0042 03F40033 		and	r3, r3, #131072
 24901 0046 002B     		cmp	r3, #0
 24902 0048 03D0     		beq	.L18
 356:../src/system_stm32f4xx.c ****   {
 357:../src/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x01;
 24903              		.loc 1 357 0
 24904 004a 4FF00103 		mov	r3, #1
 24905 004e 3B60     		str	r3, [r7, #0]
 24906 0050 02E0     		b	.L19
 24907              	.L18:
 358:../src/system_stm32f4xx.c ****   }
 359:../src/system_stm32f4xx.c ****   else
 360:../src/system_stm32f4xx.c ****   {
 361:../src/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x00;
 24908              		.loc 1 361 0
 24909 0052 4FF00003 		mov	r3, #0
 24910 0056 3B60     		str	r3, [r7, #0]
 24911              	.L19:
 362:../src/system_stm32f4xx.c ****   }
 363:../src/system_stm32f4xx.c **** 
 364:../src/system_stm32f4xx.c ****   if (HSEStatus == (uint32_t)0x01)
 24912              		.loc 1 364 0
 24913 0058 3B68     		ldr	r3, [r7, #0]
 24914 005a 012B     		cmp	r3, #1
 24915 005c 42D1     		bne	.L20
 365:../src/system_stm32f4xx.c ****   {
 366:../src/system_stm32f4xx.c ****     /* Enable high performance mode, System frequency up to 168 MHz */
 367:../src/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 24916              		.loc 1 367 0
 24917 005e 2F4B     		ldr	r3, .L24
 24918 0060 2E4A     		ldr	r2, .L24
 24919 0062 126C     		ldr	r2, [r2, #64]
 24920 0064 42F08052 		orr	r2, r2, #268435456
 24921 0068 1A64     		str	r2, [r3, #64]
 368:../src/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_PMODE;  
 24922              		.loc 1 368 0
 24923 006a 2D4B     		ldr	r3, .L24+4
 24924 006c 2C4A     		ldr	r2, .L24+4
 24925 006e 1268     		ldr	r2, [r2, #0]
 24926 0070 42F48042 		orr	r2, r2, #16384
 24927 0074 1A60     		str	r2, [r3, #0]
 369:../src/system_stm32f4xx.c **** 
 370:../src/system_stm32f4xx.c ****     /* HCLK = SYSCLK / 1*/
 371:../src/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 24928              		.loc 1 371 0
 24929 0076 294B     		ldr	r3, .L24
 24930 0078 284A     		ldr	r2, .L24
 24931 007a 9268     		ldr	r2, [r2, #8]
 24932 007c 9A60     		str	r2, [r3, #8]
 372:../src/system_stm32f4xx.c ****       
 373:../src/system_stm32f4xx.c ****     /* PCLK2 = HCLK / 2*/
 374:../src/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 24933              		.loc 1 374 0
 24934 007e 274B     		ldr	r3, .L24
 24935 0080 264A     		ldr	r2, .L24
 24936 0082 9268     		ldr	r2, [r2, #8]
 24937 0084 42F40042 		orr	r2, r2, #32768
 24938 0088 9A60     		str	r2, [r3, #8]
 375:../src/system_stm32f4xx.c ****     
 376:../src/system_stm32f4xx.c ****     /* PCLK1 = HCLK / 4*/
 377:../src/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 24939              		.loc 1 377 0
 24940 008a 244B     		ldr	r3, .L24
 24941 008c 234A     		ldr	r2, .L24
 24942 008e 9268     		ldr	r2, [r2, #8]
 24943 0090 42F4A052 		orr	r2, r2, #5120
 24944 0094 9A60     		str	r2, [r3, #8]
 378:../src/system_stm32f4xx.c **** 
 379:../src/system_stm32f4xx.c ****     /* Configure the main PLL */
 380:../src/system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 24945              		.loc 1 380 0
 24946 0096 214B     		ldr	r3, .L24
 24947 0098 224A     		ldr	r2, .L24+8
 24948 009a 5A60     		str	r2, [r3, #4]
 381:../src/system_stm32f4xx.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 382:../src/system_stm32f4xx.c **** 
 383:../src/system_stm32f4xx.c ****     /* Enable the main PLL */
 384:../src/system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 24949              		.loc 1 384 0
 24950 009c 1F4B     		ldr	r3, .L24
 24951 009e 1F4A     		ldr	r2, .L24
 24952 00a0 1268     		ldr	r2, [r2, #0]
 24953 00a2 42F08072 		orr	r2, r2, #16777216
 24954 00a6 1A60     		str	r2, [r3, #0]
 385:../src/system_stm32f4xx.c **** 
 386:../src/system_stm32f4xx.c ****     /* Wait till the main PLL is ready */
 387:../src/system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 24955              		.loc 1 387 0
 24956 00a8 00BF     		nop
 24957              	.L21:
 24958              		.loc 1 387 0 is_stmt 0 discriminator 1
 24959 00aa 1C4B     		ldr	r3, .L24
 24960 00ac 1B68     		ldr	r3, [r3, #0]
 24961 00ae 03F00073 		and	r3, r3, #33554432
 24962 00b2 002B     		cmp	r3, #0
 24963 00b4 F9D0     		beq	.L21
 388:../src/system_stm32f4xx.c ****     {
 389:../src/system_stm32f4xx.c ****     }
 390:../src/system_stm32f4xx.c ****    
 391:../src/system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 392:../src/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 24964              		.loc 1 392 0 is_stmt 1
 24965 00b6 1C4B     		ldr	r3, .L24+12
 24966 00b8 40F20562 		movw	r2, #1541
 24967 00bc 1A60     		str	r2, [r3, #0]
 393:../src/system_stm32f4xx.c **** 
 394:../src/system_stm32f4xx.c ****     /* Select the main PLL as system clock source */
 395:../src/system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 24968              		.loc 1 395 0
 24969 00be 174B     		ldr	r3, .L24
 24970 00c0 164A     		ldr	r2, .L24
 24971 00c2 9268     		ldr	r2, [r2, #8]
 24972 00c4 22F00302 		bic	r2, r2, #3
 24973 00c8 9A60     		str	r2, [r3, #8]
 396:../src/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 24974              		.loc 1 396 0
 24975 00ca 144B     		ldr	r3, .L24
 24976 00cc 134A     		ldr	r2, .L24
 24977 00ce 9268     		ldr	r2, [r2, #8]
 24978 00d0 42F00202 		orr	r2, r2, #2
 24979 00d4 9A60     		str	r2, [r3, #8]
 397:../src/system_stm32f4xx.c **** 
 398:../src/system_stm32f4xx.c ****     /* Wait till the main PLL is used as system clock source */
 399:../src/system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 24980              		.loc 1 399 0
 24981 00d6 00BF     		nop
 24982              	.L22:
 24983              		.loc 1 399 0 is_stmt 0 discriminator 1
 24984 00d8 104B     		ldr	r3, .L24
 24985 00da 9B68     		ldr	r3, [r3, #8]
 24986 00dc 03F00C03 		and	r3, r3, #12
 24987 00e0 082B     		cmp	r3, #8
 24988 00e2 F9D1     		bne	.L22
 24989              	.L20:
 400:../src/system_stm32f4xx.c ****     {
 401:../src/system_stm32f4xx.c ****     }
 402:../src/system_stm32f4xx.c ****   }
 403:../src/system_stm32f4xx.c ****   else
 404:../src/system_stm32f4xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 405:../src/system_stm32f4xx.c ****          configuration. User can add here some code to deal with this error */
 406:../src/system_stm32f4xx.c ****   }
 407:../src/system_stm32f4xx.c **** 
 408:../src/system_stm32f4xx.c **** /******************************************************************************/
 409:../src/system_stm32f4xx.c **** /*                        I2S clock configuration                             */
 410:../src/system_stm32f4xx.c **** /******************************************************************************/
 411:../src/system_stm32f4xx.c ****   /* PLLI2S clock used as I2S clock source */
 412:../src/system_stm32f4xx.c ****   RCC->CFGR &= ~RCC_CFGR_I2SSRC;
 24990              		.loc 1 412 0 is_stmt 1
 24991 00e4 0D4B     		ldr	r3, .L24
 24992 00e6 0D4A     		ldr	r2, .L24
 24993 00e8 9268     		ldr	r2, [r2, #8]
 24994 00ea 22F40002 		bic	r2, r2, #8388608
 24995 00ee 9A60     		str	r2, [r3, #8]
 413:../src/system_stm32f4xx.c **** 
 414:../src/system_stm32f4xx.c ****   /* Configure PLLI2S */
 415:../src/system_stm32f4xx.c ****   RCC->PLLI2SCFGR = (PLLI2S_N << 6) | (PLLI2S_R << 28);
 24996              		.loc 1 415 0
 24997 00f0 0A4B     		ldr	r3, .L24
 24998 00f2 0E4A     		ldr	r2, .L24+16
 24999 00f4 C3F88420 		str	r2, [r3, #132]
 416:../src/system_stm32f4xx.c **** 
 417:../src/system_stm32f4xx.c ****   /* Enable PLLI2S */
 418:../src/system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_PLLI2SON);
 25000              		.loc 1 418 0
 25001 00f8 084B     		ldr	r3, .L24
 25002 00fa 084A     		ldr	r2, .L24
 25003 00fc 1268     		ldr	r2, [r2, #0]
 25004 00fe 42F08062 		orr	r2, r2, #67108864
 25005 0102 1A60     		str	r2, [r3, #0]
 419:../src/system_stm32f4xx.c **** 
 420:../src/system_stm32f4xx.c ****   /* Wait till PLLI2S is ready */
 421:../src/system_stm32f4xx.c ****   while((RCC->CR & RCC_CR_PLLI2SRDY) == 0)
 25006              		.loc 1 421 0
 25007 0104 00BF     		nop
 25008              	.L23:
 25009              		.loc 1 421 0 is_stmt 0 discriminator 1
 25010 0106 054B     		ldr	r3, .L24
 25011 0108 1B68     		ldr	r3, [r3, #0]
 25012 010a 03F00063 		and	r3, r3, #134217728
 25013 010e 002B     		cmp	r3, #0
 25014 0110 F9D0     		beq	.L23
 422:../src/system_stm32f4xx.c ****   {
 423:../src/system_stm32f4xx.c ****   }
 424:../src/system_stm32f4xx.c **** }
 25015              		.loc 1 424 0 is_stmt 1
 25016 0112 07F10C07 		add	r7, r7, #12
 25017 0116 BD46     		mov	sp, r7
 25018 0118 80BC     		pop	{r7}
 25019 011a 7047     		bx	lr
 25020              	.L25:
 25021              		.align	2
 25022              	.L24:
 25023 011c 00380240 		.word	1073887232
 25024 0120 00700040 		.word	1073770496
 25025 0124 08544007 		.word	121656328
 25026 0128 003C0240 		.word	1073888256
 25027 012c 00300050 		.word	1342189568
 25028              		.cfi_endproc
 25029              	.LFE112:
 25031              		.text
 25032              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32f4xx.c
     /tmp/ccbUGZVT.s:24596  .data.SystemCoreClock:00000000 SystemCoreClock
     /tmp/ccbUGZVT.s:24593  .data.SystemCoreClock:00000000 $d
     /tmp/ccbUGZVT.s:24603  .data.AHBPrescTable:00000000 AHBPrescTable
     /tmp/ccbUGZVT.s:24600  .data.AHBPrescTable:00000000 $d
     /tmp/ccbUGZVT.s:24621  .text.SystemInit:00000000 $t
     /tmp/ccbUGZVT.s:24626  .text.SystemInit:00000000 SystemInit
     /tmp/ccbUGZVT.s:24851  .text.SetSysClock:00000000 SetSysClock
     /tmp/ccbUGZVT.s:24682  .text.SystemInit:00000050 $d
     /tmp/ccbUGZVT.s:24689  .text.SystemCoreClockUpdate:00000000 $t
     /tmp/ccbUGZVT.s:24694  .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
     /tmp/ccbUGZVT.s:24838  .text.SystemCoreClockUpdate:00000100 $d
     /tmp/ccbUGZVT.s:24847  .text.SetSysClock:00000000 $t
     /tmp/ccbUGZVT.s:25023  .text.SetSysClock:0000011c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
