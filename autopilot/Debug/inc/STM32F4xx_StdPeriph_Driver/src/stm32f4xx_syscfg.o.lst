   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_syscfg.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c"
 24598              		.align	2
 24599              		.global	SYSCFG_DeInit
 24600              		.thumb
 24601              		.thumb_func
 24603              	SYSCFG_DeInit:
 24604              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @file    stm32f4xx_syscfg.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief   This file provides firmware functions to manage the SYSCFG peripheral.
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  @verbatim
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          ===================================================================
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *                                 How to use this driver
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          ===================================================================
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *                  
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          This driver provides functions for:
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          1. Remapping the memory accessible in the code area using SYSCFG_MemoryRemapConfig()
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *              
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          2. Manage the EXTI lines connection to the GPIOs using SYSCFG_EXTILineConfig()
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          3. Select the ETHERNET media interface (RMII/RII) using SYSCFG_ETH_MediaInterfaceConfi
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  @note  SYSCFG APB clock must be enabled to get write access to SYSCFG registers,
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *                 
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *  @endverbatim
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *      
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   ******************************************************************************
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @attention
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   ******************************************************************************
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Includes ------------------------------------------------------------------*/
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #include "stm32f4xx_syscfg.h"
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #include "stm32f4xx_rcc.h"
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @{
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /** @defgroup SYSCFG 
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief SYSCFG driver modules
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @{
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */ 
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private typedef -----------------------------------------------------------*/
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private define ------------------------------------------------------------*/
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* ---  PMC Register ---*/ 
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Alias word address of MII_RMII_SEL bit */ 
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define PMC_OFFSET                (SYSCFG_OFFSET + 0x04) 
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define MII_RMII_SEL_BitNumber    ((uint8_t)0x17) 
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define PMC_MII_RMII_SEL_BB       (PERIPH_BB_BASE + (PMC_OFFSET * 32) + (MII_RMII_SEL_BitNumber * 4
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* ---  CMPCR Register ---*/ 
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Alias word address of CMP_PD bit */ 
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20) 
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define CMP_PD_BitNumber          ((uint8_t)0x00) 
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** #define CMPCR_CMP_PD_BB           (PERIPH_BB_BASE + (CMPCR_OFFSET * 32) + (CMP_PD_BitNumber * 4)) 
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private macro -------------------------------------------------------------*/
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private variables ---------------------------------------------------------*/
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private function prototypes -----------------------------------------------*/
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /* Private functions ---------------------------------------------------------*/
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /** @defgroup SYSCFG_Private_Functions
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @{
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */ 
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Deinitializes the Alternate Functions (remap and EXTI configuration)
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *   registers to their default reset values.
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  None
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_DeInit(void)
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
 24605              		.loc 1 87 0
 24606              		.cfi_startproc
 24607              		@ args = 0, pretend = 0, frame = 0
 24608              		@ frame_needed = 1, uses_anonymous_args = 0
 24609 0000 80B5     		push	{r7, lr}
 24610              	.LCFI0:
 24611              		.cfi_def_cfa_offset 8
 24612 0002 00AF     		add	r7, sp, #0
 24613              		.cfi_offset 14, -4
 24614              		.cfi_offset 7, -8
 24615              	.LCFI1:
 24616              		.cfi_def_cfa_register 7
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****    RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
 24617              		.loc 1 88 0
 24618 0004 4FF48040 		mov	r0, #16384
 24619 0008 4FF00101 		mov	r1, #1
 24620 000c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****    RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
 24621              		.loc 1 89 0
 24622 0010 4FF48040 		mov	r0, #16384
 24623 0014 4FF00001 		mov	r1, #0
 24624 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 24625              		.loc 1 90 0
 24626 001c 80BD     		pop	{r7, pc}
 24627              		.cfi_endproc
 24628              	.LFE110:
 24630 001e 00BF     		.section	.text.SYSCFG_MemoryRemapConfig,"ax",%progbits
 24631              		.align	2
 24632              		.global	SYSCFG_MemoryRemapConfig
 24633              		.thumb
 24634              		.thumb_func
 24636              	SYSCFG_MemoryRemapConfig:
 24637              	.LFB111:
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Changes the mapping of the specified pin.
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  SYSCFG_Memory: selects the memory remapping.
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         This parameter can be one of the following values:
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_Flash:       Main Flash memory mapped at 0x00000000  
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_SystemFlash: System Flash memory mapped at 0x00000000
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_FSMC:        FSMC (Bank1 (NOR/PSRAM 1 and 2) mapped at 0x000
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_MemoryRemap_SRAM:        Embedded SRAM (112kB) mapped at 0x00000000
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
 24638              		.loc 1 103 0
 24639              		.cfi_startproc
 24640              		@ args = 0, pretend = 0, frame = 8
 24641              		@ frame_needed = 1, uses_anonymous_args = 0
 24642              		@ link register save eliminated.
 24643 0000 80B4     		push	{r7}
 24644              	.LCFI2:
 24645              		.cfi_def_cfa_offset 4
 24646 0002 83B0     		sub	sp, sp, #12
 24647              	.LCFI3:
 24648              		.cfi_def_cfa_offset 16
 24649 0004 00AF     		add	r7, sp, #0
 24650              		.cfi_offset 7, -4
 24651              	.LCFI4:
 24652              		.cfi_def_cfa_register 7
 24653 0006 0346     		mov	r3, r0
 24654 0008 FB71     		strb	r3, [r7, #7]
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
 24655              		.loc 1 107 0
 24656 000a 044B     		ldr	r3, .L3
 24657 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24658 000e 1A60     		str	r2, [r3, #0]
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 24659              		.loc 1 108 0
 24660 0010 07F10C07 		add	r7, r7, #12
 24661 0014 BD46     		mov	sp, r7
 24662 0016 80BC     		pop	{r7}
 24663 0018 7047     		bx	lr
 24664              	.L4:
 24665 001a 00BF     		.align	2
 24666              	.L3:
 24667 001c 00380140 		.word	1073821696
 24668              		.cfi_endproc
 24669              	.LFE111:
 24671              		.section	.text.SYSCFG_EXTILineConfig,"ax",%progbits
 24672              		.align	2
 24673              		.global	SYSCFG_EXTILineConfig
 24674              		.thumb
 24675              		.thumb_func
 24677              	SYSCFG_EXTILineConfig:
 24678              	.LFB112:
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Selects the GPIO pin used as EXTI Line.
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  EXTI_PortSourceGPIOx : selects the GPIO port to be used as source for
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          EXTI lines where x can be (A..I).
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  EXTI_PinSourcex: specifies the EXTI line to be configured.
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *           This parameter can be EXTI_PinSourcex where x can be (0..15, except
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *           for EXTI_PortSourceGPIOI x can be (0..11).
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
 24679              		.loc 1 120 0
 24680              		.cfi_startproc
 24681              		@ args = 0, pretend = 0, frame = 16
 24682              		@ frame_needed = 1, uses_anonymous_args = 0
 24683              		@ link register save eliminated.
 24684 0000 90B4     		push	{r4, r7}
 24685              	.LCFI5:
 24686              		.cfi_def_cfa_offset 8
 24687 0002 84B0     		sub	sp, sp, #16
 24688              	.LCFI6:
 24689              		.cfi_def_cfa_offset 24
 24690 0004 00AF     		add	r7, sp, #0
 24691              		.cfi_offset 7, -4
 24692              		.cfi_offset 4, -8
 24693              	.LCFI7:
 24694              		.cfi_def_cfa_register 7
 24695 0006 0246     		mov	r2, r0
 24696 0008 0B46     		mov	r3, r1
 24697 000a FA71     		strb	r2, [r7, #7]
 24698 000c BB71     		strb	r3, [r7, #6]
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   uint32_t tmp = 0x00;
 24699              		.loc 1 121 0
 24700 000e 4FF00003 		mov	r3, #0
 24701 0012 FB60     		str	r3, [r7, #12]
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
 24702              		.loc 1 127 0
 24703 0014 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24704 0016 03F00303 		and	r3, r3, #3
 24705 001a 4FEA8303 		lsl	r3, r3, #2
 24706 001e 4FF00F02 		mov	r2, #15
 24707 0022 02FA03F3 		lsl	r3, r2, r3
 24708 0026 FB60     		str	r3, [r7, #12]
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
 24709              		.loc 1 128 0
 24710 0028 1B4B     		ldr	r3, .L6
 24711 002a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24712 002c 4FEA9202 		lsr	r2, r2, #2
 24713 0030 D2B2     		uxtb	r2, r2
 24714 0032 1949     		ldr	r1, .L6
 24715 0034 B879     		ldrb	r0, [r7, #6]	@ zero_extendqisi2
 24716 0036 4FEA9000 		lsr	r0, r0, #2
 24717 003a C0B2     		uxtb	r0, r0
 24718 003c 00F10200 		add	r0, r0, #2
 24719 0040 51F82000 		ldr	r0, [r1, r0, lsl #2]
 24720 0044 F968     		ldr	r1, [r7, #12]
 24721 0046 6FEA0101 		mvn	r1, r1
 24722 004a 00EA0101 		and	r1, r0, r1
 24723 004e 02F10202 		add	r2, r2, #2
 24724 0052 43F82210 		str	r1, [r3, r2, lsl #2]
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_Pin
 24725              		.loc 1 129 0
 24726 0056 104B     		ldr	r3, .L6
 24727 0058 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 24728 005a 4FEA9202 		lsr	r2, r2, #2
 24729 005e D2B2     		uxtb	r2, r2
 24730 0060 0D49     		ldr	r1, .L6
 24731 0062 B879     		ldrb	r0, [r7, #6]	@ zero_extendqisi2
 24732 0064 4FEA9000 		lsr	r0, r0, #2
 24733 0068 C0B2     		uxtb	r0, r0
 24734 006a 00F10200 		add	r0, r0, #2
 24735 006e 51F82000 		ldr	r0, [r1, r0, lsl #2]
 24736 0072 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 24737 0074 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 24738 0076 01F00301 		and	r1, r1, #3
 24739 007a 4FEA8101 		lsl	r1, r1, #2
 24740 007e 04FA01F1 		lsl	r1, r4, r1
 24741 0082 40EA0101 		orr	r1, r0, r1
 24742 0086 02F10202 		add	r2, r2, #2
 24743 008a 43F82210 		str	r1, [r3, r2, lsl #2]
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 24744              		.loc 1 130 0
 24745 008e 07F11007 		add	r7, r7, #16
 24746 0092 BD46     		mov	sp, r7
 24747 0094 90BC     		pop	{r4, r7}
 24748 0096 7047     		bx	lr
 24749              	.L7:
 24750              		.align	2
 24751              	.L6:
 24752 0098 00380140 		.word	1073821696
 24753              		.cfi_endproc
 24754              	.LFE112:
 24756              		.section	.text.SYSCFG_ETH_MediaInterfaceConfig,"ax",%progbits
 24757              		.align	2
 24758              		.global	SYSCFG_ETH_MediaInterfaceConfig
 24759              		.thumb
 24760              		.thumb_func
 24762              	SYSCFG_ETH_MediaInterfaceConfig:
 24763              	.LFB113:
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Selects the ETHERNET media interface 
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  SYSCFG_ETH_MediaInterface: specifies the Media Interface mode. 
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          This parameter can be one of the following values: 
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_ETH_MediaInterface_MII: MII mode selected
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg SYSCFG_ETH_MediaInterface_RMII: RMII mode selected 
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None 
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** { 
 24764              		.loc 1 141 0
 24765              		.cfi_startproc
 24766              		@ args = 0, pretend = 0, frame = 8
 24767              		@ frame_needed = 1, uses_anonymous_args = 0
 24768              		@ link register save eliminated.
 24769 0000 80B4     		push	{r7}
 24770              	.LCFI8:
 24771              		.cfi_def_cfa_offset 4
 24772 0002 83B0     		sub	sp, sp, #12
 24773              	.LCFI9:
 24774              		.cfi_def_cfa_offset 16
 24775 0004 00AF     		add	r7, sp, #0
 24776              		.cfi_offset 7, -4
 24777              	.LCFI10:
 24778              		.cfi_def_cfa_register 7
 24779 0006 7860     		str	r0, [r7, #4]
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Configure MII_RMII selection bit */ 
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
 24780              		.loc 1 144 0
 24781 0008 034B     		ldr	r3, .L9
 24782 000a 7A68     		ldr	r2, [r7, #4]
 24783 000c 1A60     		str	r2, [r3, #0]
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 24784              		.loc 1 145 0
 24785 000e 07F10C07 		add	r7, r7, #12
 24786 0012 BD46     		mov	sp, r7
 24787 0014 80BC     		pop	{r7}
 24788 0016 7047     		bx	lr
 24789              	.L10:
 24790              		.align	2
 24791              	.L9:
 24792 0018 DC002742 		.word	1109852380
 24793              		.cfi_endproc
 24794              	.LFE113:
 24796              		.section	.text.SYSCFG_CompensationCellCmd,"ax",%progbits
 24797              		.align	2
 24798              		.global	SYSCFG_CompensationCellCmd
 24799              		.thumb
 24800              		.thumb_func
 24802              	SYSCFG_CompensationCellCmd:
 24803              	.LFB114:
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Enables or disables the I/O Compensation Cell.
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @note   The I/O compensation cell can be used only when the device supply
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  NewState: new state of the I/O Compensation Cell.
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *          This parameter can be one of the following values:
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg ENABLE: I/O compensation cell enabled  
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *            @arg DISABLE: I/O compensation cell power-down mode  
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval None
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** void SYSCFG_CompensationCellCmd(FunctionalState NewState)
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
 24804              		.loc 1 158 0
 24805              		.cfi_startproc
 24806              		@ args = 0, pretend = 0, frame = 8
 24807              		@ frame_needed = 1, uses_anonymous_args = 0
 24808              		@ link register save eliminated.
 24809 0000 80B4     		push	{r7}
 24810              	.LCFI11:
 24811              		.cfi_def_cfa_offset 4
 24812 0002 83B0     		sub	sp, sp, #12
 24813              	.LCFI12:
 24814              		.cfi_def_cfa_offset 16
 24815 0004 00AF     		add	r7, sp, #0
 24816              		.cfi_offset 7, -4
 24817              	.LCFI13:
 24818              		.cfi_def_cfa_register 7
 24819 0006 0346     		mov	r3, r0
 24820 0008 FB71     		strb	r3, [r7, #7]
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   /* Check the parameters */
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
 24821              		.loc 1 162 0
 24822 000a 044B     		ldr	r3, .L12
 24823 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24824 000e 1A60     		str	r2, [r3, #0]
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 24825              		.loc 1 163 0
 24826 0010 07F10C07 		add	r7, r7, #12
 24827 0014 BD46     		mov	sp, r7
 24828 0016 80BC     		pop	{r7}
 24829 0018 7047     		bx	lr
 24830              	.L13:
 24831 001a 00BF     		.align	2
 24832              	.L12:
 24833 001c 00042742 		.word	1109853184
 24834              		.cfi_endproc
 24835              	.LFE114:
 24837              		.section	.text.SYSCFG_GetCompensationCellStatus,"ax",%progbits
 24838              		.align	2
 24839              		.global	SYSCFG_GetCompensationCellStatus
 24840              		.thumb
 24841              		.thumb_func
 24843              	SYSCFG_GetCompensationCellStatus:
 24844              	.LFB115:
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** 
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** /**
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @brief  Checks whether the I/O Compensation Cell ready flag is set or not.
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @param  None
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   * @retval The new state of the I/O Compensation Cell ready flag (SET or RESET)
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   */
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** FlagStatus SYSCFG_GetCompensationCellStatus(void)
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** {
 24845              		.loc 1 171 0
 24846              		.cfi_startproc
 24847              		@ args = 0, pretend = 0, frame = 8
 24848              		@ frame_needed = 1, uses_anonymous_args = 0
 24849              		@ link register save eliminated.
 24850 0000 80B4     		push	{r7}
 24851              	.LCFI14:
 24852              		.cfi_def_cfa_offset 4
 24853 0002 83B0     		sub	sp, sp, #12
 24854              	.LCFI15:
 24855              		.cfi_def_cfa_offset 16
 24856 0004 00AF     		add	r7, sp, #0
 24857              		.cfi_offset 7, -4
 24858              	.LCFI16:
 24859              		.cfi_def_cfa_register 7
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   FlagStatus bitstatus = RESET;
 24860              		.loc 1 172 0
 24861 0006 4FF00003 		mov	r3, #0
 24862 000a FB71     		strb	r3, [r7, #7]
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****     
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
 24863              		.loc 1 174 0
 24864 000c 094B     		ldr	r3, .L17
 24865 000e 1B6A     		ldr	r3, [r3, #32]
 24866 0010 03F48073 		and	r3, r3, #256
 24867 0014 002B     		cmp	r3, #0
 24868 0016 03D0     		beq	.L15
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   {
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****     bitstatus = SET;
 24869              		.loc 1 176 0
 24870 0018 4FF00103 		mov	r3, #1
 24871 001c FB71     		strb	r3, [r7, #7]
 24872 001e 02E0     		b	.L16
 24873              	.L15:
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   }
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   else
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   {
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****     bitstatus = RESET;
 24874              		.loc 1 180 0
 24875 0020 4FF00003 		mov	r3, #0
 24876 0024 FB71     		strb	r3, [r7, #7]
 24877              	.L16:
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   }
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c ****   return bitstatus;
 24878              		.loc 1 182 0
 24879 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_syscfg.c **** }
 24880              		.loc 1 183 0
 24881 0028 1846     		mov	r0, r3
 24882 002a 07F10C07 		add	r7, r7, #12
 24883 002e BD46     		mov	sp, r7
 24884 0030 80BC     		pop	{r7}
 24885 0032 7047     		bx	lr
 24886              	.L18:
 24887              		.align	2
 24888              	.L17:
 24889 0034 00380140 		.word	1073821696
 24890              		.cfi_endproc
 24891              	.LFE115:
 24893              		.text
 24894              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_syscfg.c
     /tmp/cci7pBk1.s:24598  .text.SYSCFG_DeInit:00000000 $t
     /tmp/cci7pBk1.s:24603  .text.SYSCFG_DeInit:00000000 SYSCFG_DeInit
     /tmp/cci7pBk1.s:24631  .text.SYSCFG_MemoryRemapConfig:00000000 $t
     /tmp/cci7pBk1.s:24636  .text.SYSCFG_MemoryRemapConfig:00000000 SYSCFG_MemoryRemapConfig
     /tmp/cci7pBk1.s:24667  .text.SYSCFG_MemoryRemapConfig:0000001c $d
     /tmp/cci7pBk1.s:24672  .text.SYSCFG_EXTILineConfig:00000000 $t
     /tmp/cci7pBk1.s:24677  .text.SYSCFG_EXTILineConfig:00000000 SYSCFG_EXTILineConfig
     /tmp/cci7pBk1.s:24752  .text.SYSCFG_EXTILineConfig:00000098 $d
     /tmp/cci7pBk1.s:24757  .text.SYSCFG_ETH_MediaInterfaceConfig:00000000 $t
     /tmp/cci7pBk1.s:24762  .text.SYSCFG_ETH_MediaInterfaceConfig:00000000 SYSCFG_ETH_MediaInterfaceConfig
     /tmp/cci7pBk1.s:24792  .text.SYSCFG_ETH_MediaInterfaceConfig:00000018 $d
     /tmp/cci7pBk1.s:24797  .text.SYSCFG_CompensationCellCmd:00000000 $t
     /tmp/cci7pBk1.s:24802  .text.SYSCFG_CompensationCellCmd:00000000 SYSCFG_CompensationCellCmd
     /tmp/cci7pBk1.s:24833  .text.SYSCFG_CompensationCellCmd:0000001c $d
     /tmp/cci7pBk1.s:24838  .text.SYSCFG_GetCompensationCellStatus:00000000 $t
     /tmp/cci7pBk1.s:24843  .text.SYSCFG_GetCompensationCellStatus:00000000 SYSCFG_GetCompensationCellStatus
     /tmp/cci7pBk1.s:24889  .text.SYSCFG_GetCompensationCellStatus:00000034 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
