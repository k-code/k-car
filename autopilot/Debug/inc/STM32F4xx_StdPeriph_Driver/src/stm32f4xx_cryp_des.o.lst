   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_cryp_des.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c"
 24578              		.align	2
 24579              		.global	CRYP_DES_ECB
 24580              		.thumb
 24581              		.thumb_func
 24583              	CRYP_DES_ECB:
 24584              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @file    stm32f4xx_cryp_des.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief   This file provides high level functions to encrypt and decrypt an 
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          input message using DES in ECB/CBC modes.
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          It uses the stm32f4xx_cryp.c/.h drivers to access the STM32F4xx CRYP
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          peripheral.
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *  @verbatim
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          ===================================================================
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *                                   How to use this driver
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          ===================================================================
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          1. Enable The CRYP controller clock using 
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          2. Encrypt and decrypt using DES in ECB Mode using CRYP_DES_ECB()
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *             function.
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          3. Encrypt and decrypt using DES in CBC Mode using CRYP_DES_CBC()
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *             function.
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *  @endverbatim
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @attention
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ******************************************************************************
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Includes ------------------------------------------------------------------*/
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #include "stm32f4xx_cryp.h"
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP 
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief CRYP driver modules
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private typedef -----------------------------------------------------------*/
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private define ------------------------------------------------------------*/
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** #define DESBUSY_TIMEOUT    ((uint32_t) 0x00010000)
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private macro -------------------------------------------------------------*/
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private variables ---------------------------------------------------------*/
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private function prototypes -----------------------------------------------*/
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Private functions ---------------------------------------------------------*/
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Private_Functions
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */ 
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /** @defgroup CRYP_Group8 High Level DES functions
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *  @brief   High Level DES functions 
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  *
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @verbatim   
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                           High Level DES functions
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****  ===============================================================================
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** @endverbatim
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @{
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in ECB Mode
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *           This parameter can be one of the following values:
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_ECB(uint8_t Mode, uint8_t Key[8], uint8_t *Input, 
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint32_t Ilength, uint8_t *Output)
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
 24585              		.loc 1 96 0
 24586              		.cfi_startproc
 24587              		@ args = 4, pretend = 0, frame = 104
 24588              		@ frame_needed = 1, uses_anonymous_args = 0
 24589 0000 90B5     		push	{r4, r7, lr}
 24590              	.LCFI0:
 24591              		.cfi_def_cfa_offset 12
 24592 0002 9BB0     		sub	sp, sp, #108
 24593              	.LCFI1:
 24594              		.cfi_def_cfa_offset 120
 24595 0004 00AF     		add	r7, sp, #0
 24596              		.cfi_offset 14, -4
 24597              		.cfi_offset 7, -8
 24598              		.cfi_offset 4, -12
 24599              	.LCFI2:
 24600              		.cfi_def_cfa_register 7
 24601 0006 B960     		str	r1, [r7, #8]
 24602 0008 7A60     		str	r2, [r7, #4]
 24603 000a 3B60     		str	r3, [r7, #0]
 24604 000c 0346     		mov	r3, r0
 24605 000e FB73     		strb	r3, [r7, #15]
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
 24606              		.loc 1 99 0
 24607 0010 4FF00003 		mov	r3, #0
 24608 0014 7B61     		str	r3, [r7, #20]
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
 24609              		.loc 1 100 0
 24610 0016 4FF00003 		mov	r3, #0
 24611 001a 7B65     		str	r3, [r7, #84]
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
 24612              		.loc 1 101 0
 24613 001c 4FF00103 		mov	r3, #1
 24614 0020 87F86730 		strb	r3, [r7, #103]
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 24615              		.loc 1 102 0
 24616 0024 BB68     		ldr	r3, [r7, #8]
 24617 0026 3B65     		str	r3, [r7, #80]
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
 24618              		.loc 1 103 0
 24619 0028 7B68     		ldr	r3, [r7, #4]
 24620 002a 3B66     		str	r3, [r7, #96]
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
 24621              		.loc 1 104 0
 24622 002c BB6F     		ldr	r3, [r7, #120]
 24623 002e FB65     		str	r3, [r7, #92]
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
 24624              		.loc 1 105 0
 24625 0030 4FF00003 		mov	r3, #0
 24626 0034 BB65     		str	r3, [r7, #88]
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
 24627              		.loc 1 108 0
 24628 0036 07F11803 		add	r3, r7, #24
 24629 003a 1846     		mov	r0, r3
 24630 003c FFF7FEFF 		bl	CRYP_KeyStructInit
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if( Mode == MODE_ENCRYPT ) /* DES encryption */
 24631              		.loc 1 111 0
 24632 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24633 0042 012B     		cmp	r3, #1
 24634 0044 03D1     		bne	.L2
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 24635              		.loc 1 113 0
 24636 0046 4FF00003 		mov	r3, #0
 24637 004a 3B87     		strh	r3, [r7, #56]	@ movhi
 24638 004c 02E0     		b	.L3
 24639              	.L2:
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else/* if( Mode == MODE_DECRYPT )*/ /* DES decryption */
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {      
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
 24640              		.loc 1 117 0
 24641 004e 4FF00403 		mov	r3, #4
 24642 0052 3B87     		strh	r3, [r7, #56]	@ movhi
 24643              	.L3:
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_ECB;
 24644              		.loc 1 120 0
 24645 0054 4FF01003 		mov	r3, #16
 24646 0058 7B87     		strh	r3, [r7, #58]	@ movhi
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 24647              		.loc 1 121 0
 24648 005a 4FF08003 		mov	r3, #128
 24649 005e BB87     		strh	r3, [r7, #60]	@ movhi
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
 24650              		.loc 1 122 0
 24651 0060 07F13803 		add	r3, r7, #56
 24652 0064 1846     		mov	r0, r3
 24653 0066 FFF7FEFF 		bl	CRYP_Init
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 24654              		.loc 1 125 0
 24655 006a 3B6D     		ldr	r3, [r7, #80]
 24656 006c 1B68     		ldr	r3, [r3, #0]
 24657 006e FB64     		str	r3, [r7, #76]
 24658              	.LBB14:
 24659              	.LBB15:
   1:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /**************************************************************************//**
   2:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @version  V2.10
   5:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @date     19. July 2011
   6:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  *
   7:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @note
   8:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  *
  10:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @par
  11:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  *
  15:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @par
  16:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  *
  22:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  ******************************************************************************/
  23:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  24:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  27:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  28:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   Access to dedicated instructions
  31:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   @{
  32:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** */
  33:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  34:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /* ARM armcc specific functions */
  36:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  37:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #endif
  40:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  41:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  42:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  No Operation
  43:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  44:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  46:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __NOP                             __nop
  47:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  48:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  49:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  51:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     until one of a number of events occurs.
  53:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  54:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __WFI                             __wfi
  55:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  56:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  57:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Wait For Event
  58:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  59:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  62:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __WFE                             __wfe
  63:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  64:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  65:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Send Event
  66:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  67:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  69:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __SEV                             __sev
  70:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  71:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  72:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  74:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  78:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  80:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  81:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  83:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  86:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  88:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  89:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  91:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  94:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  96:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  97:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  99:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 101:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 103:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 104:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __REV                             __rev
 105:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 106:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 107:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 109:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 111:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 113:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 114:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 116:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   rev16 r0, r0
 117:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   bx lr
 118:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 119:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 120:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 121:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 123:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 125:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 127:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 128:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 130:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   revsh r0, r0
 131:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   bx lr
 132:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 133:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 134:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 135:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 137:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 139:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 141:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 143:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 144:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __RBIT                            __rbit
 145:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 146:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 147:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 149:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 151:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 154:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 156:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 157:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 159:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 161:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 164:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 166:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 167:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 169:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 171:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 174:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 176:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 177:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 179:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 181:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to store
 182:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          0  Function succeeded
 184:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          1  Function failed
 185:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 186:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 188:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 189:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 191:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 193:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to store
 194:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          0  Function succeeded
 196:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          1  Function failed
 197:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 198:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 200:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 201:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 203:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 205:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to store
 206:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          0  Function succeeded
 208:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          1  Function failed
 209:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 210:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 212:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 213:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 215:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 217:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 218:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __CLREX                           __clrex
 219:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 220:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 221:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Signed Saturate
 222:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 223:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function saturates a signed value.
 224:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 225:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return             Saturated value
 228:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 229:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __SSAT                            __ssat
 230:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 231:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 232:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 234:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function saturates an unsigned value.
 235:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 236:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return             Saturated value
 239:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 240:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __USAT                            __usat
 241:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 242:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 243:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Count leading zeros
 244:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 245:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 247:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return             number of leading zeros in value
 249:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 250:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __CLZ                             __clz 
 251:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 252:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 254:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 255:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 256:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 259:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #include <cmsis_iar.h>
 260:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 261:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 262:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /* GNU gcc specific functions */
 264:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 265:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  No Operation
 266:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 267:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 269:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 271:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("nop");
 272:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 273:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 274:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 275:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 277:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     until one of a number of events occurs.
 279:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 280:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 282:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 284:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 285:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 286:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Wait For Event
 287:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 288:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 291:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 293:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 295:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 296:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 297:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Send Event
 298:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 299:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 301:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 303:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("sev");
 304:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 305:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 306:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 307:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 309:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 313:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 315:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("isb");
 316:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 317:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 318:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 319:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 321:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 324:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 326:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("dsb");
 327:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 328:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 329:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 330:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 332:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 335:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
 336:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 337:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("dmb");
 338:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 339:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 340:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 341:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 343:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 345:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 347:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 348:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 350:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   uint32_t result;
 351:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24660              		.loc 7 352 0
 24661 0070 FB6C     		ldr	r3, [r7, #76]
 24662              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24663 0072 1CBA     		rev r4, r3
 24664              	@ 0 "" 2
 24665              		.thumb
 24666 0074 BC64     		str	r4, [r7, #72]
 353:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   return(result);
 24667              		.loc 7 353 0
 24668 0076 BB6C     		ldr	r3, [r7, #72]
 24669              	.LBE15:
 24670              	.LBE14:
 24671              		.loc 1 125 0
 24672 0078 3B62     		str	r3, [r7, #32]
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
 24673              		.loc 1 126 0
 24674 007a 3B6D     		ldr	r3, [r7, #80]
 24675 007c 03F10403 		add	r3, r3, #4
 24676 0080 3B65     		str	r3, [r7, #80]
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 24677              		.loc 1 127 0
 24678 0082 3B6D     		ldr	r3, [r7, #80]
 24679 0084 1B68     		ldr	r3, [r3, #0]
 24680 0086 7B64     		str	r3, [r7, #68]
 24681              	.LBB16:
 24682              	.LBB17:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24683              		.loc 7 352 0
 24684 0088 7B6C     		ldr	r3, [r7, #68]
 24685              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24686 008a 1CBA     		rev r4, r3
 24687              	@ 0 "" 2
 24688              		.thumb
 24689 008c 3C64     		str	r4, [r7, #64]
 24690              		.loc 7 353 0
 24691 008e 3B6C     		ldr	r3, [r7, #64]
 24692              	.LBE17:
 24693              	.LBE16:
 24694              		.loc 1 127 0
 24695 0090 7B62     		str	r3, [r7, #36]
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 24696              		.loc 1 128 0
 24697 0092 07F11803 		add	r3, r7, #24
 24698 0096 1846     		mov	r0, r3
 24699 0098 FFF7FEFF 		bl	CRYP_KeyInit
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 24700              		.loc 1 131 0
 24701 009c FFF7FEFF 		bl	CRYP_FIFOFlush
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 24702              		.loc 1 134 0
 24703 00a0 4FF00100 		mov	r0, #1
 24704 00a4 FFF7FEFF 		bl	CRYP_Cmd
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 24705              		.loc 1 136 0
 24706 00a8 4FF00003 		mov	r3, #0
 24707 00ac BB65     		str	r3, [r7, #88]
 24708 00ae 43E0     		b	.L4
 24709              	.L10:
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Write the Input block in the Input FIFO */
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 24710              		.loc 1 140 0
 24711 00b0 3B6E     		ldr	r3, [r7, #96]
 24712 00b2 1B68     		ldr	r3, [r3, #0]
 24713 00b4 1846     		mov	r0, r3
 24714 00b6 FFF7FEFF 		bl	CRYP_DataIn
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 24715              		.loc 1 141 0
 24716 00ba 3B6E     		ldr	r3, [r7, #96]
 24717 00bc 03F10403 		add	r3, r3, #4
 24718 00c0 3B66     		str	r3, [r7, #96]
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 24719              		.loc 1 142 0
 24720 00c2 3B6E     		ldr	r3, [r7, #96]
 24721 00c4 1B68     		ldr	r3, [r3, #0]
 24722 00c6 1846     		mov	r0, r3
 24723 00c8 FFF7FEFF 		bl	CRYP_DataIn
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 24724              		.loc 1 143 0
 24725 00cc 3B6E     		ldr	r3, [r7, #96]
 24726 00ce 03F10403 		add	r3, r3, #4
 24727 00d2 3B66     		str	r3, [r7, #96]
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /* Wait until the complete message has been processed */
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     counter = 0;
 24728              		.loc 1 146 0
 24729 00d4 4FF00003 		mov	r3, #0
 24730 00d8 7B61     		str	r3, [r7, #20]
 24731              	.L6:
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 24732              		.loc 1 149 0 discriminator 1
 24733 00da 4FF01000 		mov	r0, #16
 24734 00de FFF7FEFF 		bl	CRYP_GetFlagStatus
 24735 00e2 0346     		mov	r3, r0
 24736 00e4 7B65     		str	r3, [r7, #84]
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 24737              		.loc 1 150 0 discriminator 1
 24738 00e6 7B69     		ldr	r3, [r7, #20]
 24739 00e8 03F10103 		add	r3, r3, #1
 24740 00ec 7B61     		str	r3, [r7, #20]
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 24741              		.loc 1 151 0 discriminator 1
 24742 00ee 7B69     		ldr	r3, [r7, #20]
 24743 00f0 B3F5803F 		cmp	r3, #65536
 24744 00f4 02D0     		beq	.L5
 24745 00f6 7B6D     		ldr	r3, [r7, #84]
 24746 00f8 002B     		cmp	r3, #0
 24747 00fa EED1     		bne	.L6
 24748              	.L5:
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     if (busystatus != RESET)
 24749              		.loc 1 153 0
 24750 00fc 7B6D     		ldr	r3, [r7, #84]
 24751 00fe 002B     		cmp	r3, #0
 24752 0100 04D0     		beq	.L7
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    {
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        status = ERROR;
 24753              		.loc 1 155 0
 24754 0102 4FF00003 		mov	r3, #0
 24755 0106 87F86730 		strb	r3, [r7, #103]
 24756 010a 11E0     		b	.L8
 24757              	.L7:
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     else
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Read the Output block from the Output FIFO */
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 24758              		.loc 1 161 0
 24759 010c FC6D     		ldr	r4, [r7, #92]
 24760 010e FFF7FEFF 		bl	CRYP_DataOut
 24761 0112 0346     		mov	r3, r0
 24762 0114 2360     		str	r3, [r4, #0]
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 24763              		.loc 1 162 0
 24764 0116 FB6D     		ldr	r3, [r7, #92]
 24765 0118 03F10403 		add	r3, r3, #4
 24766 011c FB65     		str	r3, [r7, #92]
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 24767              		.loc 1 163 0
 24768 011e FC6D     		ldr	r4, [r7, #92]
 24769 0120 FFF7FEFF 		bl	CRYP_DataOut
 24770 0124 0346     		mov	r3, r0
 24771 0126 2360     		str	r3, [r4, #0]
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 24772              		.loc 1 164 0
 24773 0128 FB6D     		ldr	r3, [r7, #92]
 24774 012a 03F10403 		add	r3, r3, #4
 24775 012e FB65     		str	r3, [r7, #92]
 24776              	.L8:
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 24777              		.loc 1 136 0
 24778 0130 BB6D     		ldr	r3, [r7, #88]
 24779 0132 03F10803 		add	r3, r3, #8
 24780 0136 BB65     		str	r3, [r7, #88]
 24781              	.L4:
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 24782              		.loc 1 136 0 is_stmt 0 discriminator 1
 24783 0138 BA6D     		ldr	r2, [r7, #88]
 24784 013a 3B68     		ldr	r3, [r7, #0]
 24785 013c 9A42     		cmp	r2, r3
 24786 013e 03D2     		bcs	.L9
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 24787              		.loc 1 136 0 discriminator 2
 24788 0140 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 24789 0144 002B     		cmp	r3, #0
 24790 0146 B3D1     		bne	.L10
 24791              	.L9:
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Disable Crypto */
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(DISABLE);
 24792              		.loc 1 169 0 is_stmt 1
 24793 0148 4FF00000 		mov	r0, #0
 24794 014c FFF7FEFF 		bl	CRYP_Cmd
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
 24795              		.loc 1 171 0
 24796 0150 97F86730 		ldrb	r3, [r7, #103]	@ zero_extendqisi2
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 24797              		.loc 1 172 0
 24798 0154 1846     		mov	r0, r3
 24799 0156 07F16C07 		add	r7, r7, #108
 24800 015a BD46     		mov	sp, r7
 24801 015c 90BD     		pop	{r4, r7, pc}
 24802              		.cfi_endproc
 24803              	.LFE110:
 24805 015e 00BF     		.section	.text.CRYP_DES_CBC,"ax",%progbits
 24806              		.align	2
 24807              		.global	CRYP_DES_CBC
 24808              		.thumb
 24809              		.thumb_func
 24811              	CRYP_DES_CBC:
 24812              	.LFB111:
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** /**
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @brief  Encrypt and decrypt using DES in CBC Mode
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Mode: encryption or decryption Mode.
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          This parameter can be one of the following values:
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_ENCRYPT: Encryption
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *            @arg MODE_DECRYPT: Decryption
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Key: Key used for DES algorithm.
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  InitVectors: Initialisation Vectors used for DES algorithm.
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Ilength: length of the Input buffer, must be a multiple of 8.
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Input: pointer to the Input buffer.
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @param  Output: pointer to the returned buffer.
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   * @retval An ErrorStatus enumeration value:
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - SUCCESS: Operation done
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   *          - ERROR: Operation failed
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   */
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** ErrorStatus CRYP_DES_CBC(uint8_t Mode, uint8_t Key[8], uint8_t InitVectors[8],
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****                          uint8_t *Input, uint32_t Ilength, uint8_t *Output)
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** {
 24813              		.loc 1 191 0
 24814              		.cfi_startproc
 24815              		@ args = 8, pretend = 0, frame = 136
 24816              		@ frame_needed = 1, uses_anonymous_args = 0
 24817 0000 90B5     		push	{r4, r7, lr}
 24818              	.LCFI3:
 24819              		.cfi_def_cfa_offset 12
 24820 0002 A3B0     		sub	sp, sp, #140
 24821              	.LCFI4:
 24822              		.cfi_def_cfa_offset 152
 24823 0004 00AF     		add	r7, sp, #0
 24824              		.cfi_offset 14, -4
 24825              		.cfi_offset 7, -8
 24826              		.cfi_offset 4, -12
 24827              	.LCFI5:
 24828              		.cfi_def_cfa_register 7
 24829 0006 B960     		str	r1, [r7, #8]
 24830 0008 7A60     		str	r2, [r7, #4]
 24831 000a 3B60     		str	r3, [r7, #0]
 24832 000c 0346     		mov	r3, r0
 24833 000e FB73     		strb	r3, [r7, #15]
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_InitTypeDef DES_CRYP_InitStructure;
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInitTypeDef DES_CRYP_KeyInitStructure;
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInitTypeDef DES_CRYP_IVInitStructure;
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   __IO uint32_t counter = 0;
 24834              		.loc 1 195 0
 24835 0010 4FF00003 		mov	r3, #0
 24836 0014 3B61     		str	r3, [r7, #16]
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t busystatus = 0;
 24837              		.loc 1 196 0
 24838 0016 4FF00003 		mov	r3, #0
 24839 001a 7B67     		str	r3, [r7, #116]
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ErrorStatus status = SUCCESS;
 24840              		.loc 1 197 0
 24841 001c 4FF00103 		mov	r3, #1
 24842 0020 87F88730 		strb	r3, [r7, #135]
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t keyaddr    = (uint32_t)Key;
 24843              		.loc 1 198 0
 24844 0024 BB68     		ldr	r3, [r7, #8]
 24845 0026 3B67     		str	r3, [r7, #112]
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t inputaddr  = (uint32_t)Input;
 24846              		.loc 1 199 0
 24847 0028 3B68     		ldr	r3, [r7, #0]
 24848 002a C7F88030 		str	r3, [r7, #128]
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t outputaddr = (uint32_t)Output;
 24849              		.loc 1 200 0
 24850 002e D7F89C30 		ldr	r3, [r7, #156]
 24851 0032 FB67     		str	r3, [r7, #124]
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t ivaddr     = (uint32_t)InitVectors;
 24852              		.loc 1 201 0
 24853 0034 7B68     		ldr	r3, [r7, #4]
 24854 0036 FB66     		str	r3, [r7, #108]
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   uint32_t i = 0;
 24855              		.loc 1 202 0
 24856 0038 4FF00003 		mov	r3, #0
 24857 003c BB67     		str	r3, [r7, #120]
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto structures initialisation*/
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyStructInit(&DES_CRYP_KeyInitStructure);
 24858              		.loc 1 205 0
 24859 003e 07F12403 		add	r3, r7, #36
 24860 0042 1846     		mov	r0, r3
 24861 0044 FFF7FEFF 		bl	CRYP_KeyStructInit
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Crypto Init for Encryption process */
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   if(Mode == MODE_ENCRYPT) /* DES encryption */
 24862              		.loc 1 208 0
 24863 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24864 004a 012B     		cmp	r3, #1
 24865 004c 04D1     		bne	.L12
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Encrypt;
 24866              		.loc 1 210 0
 24867 004e 4FF00003 		mov	r3, #0
 24868 0052 A7F84430 		strh	r3, [r7, #68]	@ movhi
 24869 0056 03E0     		b	.L13
 24870              	.L12:
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   else /*if(Mode == MODE_DECRYPT)*/ /* DES decryption */
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****      DES_CRYP_InitStructure.CRYP_AlgoDir  = CRYP_AlgoDir_Decrypt;
 24871              		.loc 1 214 0
 24872 0058 4FF00403 		mov	r3, #4
 24873 005c A7F84430 		strh	r3, [r7, #68]	@ movhi
 24874              	.L13:
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_AlgoMode = CRYP_AlgoMode_DES_CBC;
 24875              		.loc 1 217 0
 24876 0060 4FF01803 		mov	r3, #24
 24877 0064 A7F84630 		strh	r3, [r7, #70]	@ movhi
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_InitStructure.CRYP_DataType = CRYP_DataType_8b;
 24878              		.loc 1 218 0
 24879 0068 4FF08003 		mov	r3, #128
 24880 006c A7F84830 		strh	r3, [r7, #72]	@ movhi
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Init(&DES_CRYP_InitStructure);
 24881              		.loc 1 219 0
 24882 0070 07F14403 		add	r3, r7, #68
 24883 0074 1846     		mov	r0, r3
 24884 0076 FFF7FEFF 		bl	CRYP_Init
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Key Initialisation */
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Left = __REV(*(uint32_t*)(keyaddr));
 24885              		.loc 1 222 0
 24886 007a 3B6F     		ldr	r3, [r7, #112]
 24887 007c 1B68     		ldr	r3, [r3, #0]
 24888 007e BB66     		str	r3, [r7, #104]
 24889              	.LBB18:
 24890              	.LBB19:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24891              		.loc 7 352 0
 24892 0080 BB6E     		ldr	r3, [r7, #104]
 24893              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24894 0082 1CBA     		rev r4, r3
 24895              	@ 0 "" 2
 24896              		.thumb
 24897 0084 7C66     		str	r4, [r7, #100]
 24898              		.loc 7 353 0
 24899 0086 7B6E     		ldr	r3, [r7, #100]
 24900              	.LBE19:
 24901              	.LBE18:
 24902              		.loc 1 222 0
 24903 0088 FB62     		str	r3, [r7, #44]
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   keyaddr+=4;
 24904              		.loc 1 223 0
 24905 008a 3B6F     		ldr	r3, [r7, #112]
 24906 008c 03F10403 		add	r3, r3, #4
 24907 0090 3B67     		str	r3, [r7, #112]
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_KeyInitStructure.CRYP_Key1Right= __REV(*(uint32_t*)(keyaddr));
 24908              		.loc 1 224 0
 24909 0092 3B6F     		ldr	r3, [r7, #112]
 24910 0094 1B68     		ldr	r3, [r3, #0]
 24911 0096 3B66     		str	r3, [r7, #96]
 24912              	.LBB20:
 24913              	.LBB21:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24914              		.loc 7 352 0
 24915 0098 3B6E     		ldr	r3, [r7, #96]
 24916              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24917 009a 1CBA     		rev r4, r3
 24918              	@ 0 "" 2
 24919              		.thumb
 24920 009c FC65     		str	r4, [r7, #92]
 24921              		.loc 7 353 0
 24922 009e FB6D     		ldr	r3, [r7, #92]
 24923              	.LBE21:
 24924              	.LBE20:
 24925              		.loc 1 224 0
 24926 00a0 3B63     		str	r3, [r7, #48]
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_KeyInit(& DES_CRYP_KeyInitStructure);
 24927              		.loc 1 225 0
 24928 00a2 07F12403 		add	r3, r7, #36
 24929 00a6 1846     		mov	r0, r3
 24930 00a8 FFF7FEFF 		bl	CRYP_KeyInit
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Initialization Vectors */
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Left = __REV(*(uint32_t*)(ivaddr));
 24931              		.loc 1 228 0
 24932 00ac FB6E     		ldr	r3, [r7, #108]
 24933 00ae 1B68     		ldr	r3, [r3, #0]
 24934 00b0 BB65     		str	r3, [r7, #88]
 24935              	.LBB22:
 24936              	.LBB23:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24937              		.loc 7 352 0
 24938 00b2 BB6D     		ldr	r3, [r7, #88]
 24939              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24940 00b4 1CBA     		rev r4, r3
 24941              	@ 0 "" 2
 24942              		.thumb
 24943 00b6 7C65     		str	r4, [r7, #84]
 24944              		.loc 7 353 0
 24945 00b8 7B6D     		ldr	r3, [r7, #84]
 24946              	.LBE23:
 24947              	.LBE22:
 24948              		.loc 1 228 0
 24949 00ba 7B61     		str	r3, [r7, #20]
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   ivaddr+=4;
 24950              		.loc 1 229 0
 24951 00bc FB6E     		ldr	r3, [r7, #108]
 24952 00be 03F10403 		add	r3, r3, #4
 24953 00c2 FB66     		str	r3, [r7, #108]
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   DES_CRYP_IVInitStructure.CRYP_IV0Right= __REV(*(uint32_t*)(ivaddr));
 24954              		.loc 1 230 0
 24955 00c4 FB6E     		ldr	r3, [r7, #108]
 24956 00c6 1B68     		ldr	r3, [r3, #0]
 24957 00c8 3B65     		str	r3, [r7, #80]
 24958              	.LBB24:
 24959              	.LBB25:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24960              		.loc 7 352 0
 24961 00ca 3B6D     		ldr	r3, [r7, #80]
 24962              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24963 00cc 1CBA     		rev r4, r3
 24964              	@ 0 "" 2
 24965              		.thumb
 24966 00ce FC64     		str	r4, [r7, #76]
 24967              		.loc 7 353 0
 24968 00d0 FB6C     		ldr	r3, [r7, #76]
 24969              	.LBE25:
 24970              	.LBE24:
 24971              		.loc 1 230 0
 24972 00d2 BB61     		str	r3, [r7, #24]
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_IVInit(&DES_CRYP_IVInitStructure);
 24973              		.loc 1 231 0
 24974 00d4 07F11403 		add	r3, r7, #20
 24975 00d8 1846     		mov	r0, r3
 24976 00da FFF7FEFF 		bl	CRYP_IVInit
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Flush IN/OUT FIFO */
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_FIFOFlush();
 24977              		.loc 1 234 0
 24978 00de FFF7FEFF 		bl	CRYP_FIFOFlush
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Enable Crypto processor */
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(ENABLE);
 24979              		.loc 1 237 0
 24980 00e2 4FF00100 		mov	r0, #1
 24981 00e6 FFF7FEFF 		bl	CRYP_Cmd
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 24982              		.loc 1 239 0
 24983 00ea 4FF00003 		mov	r3, #0
 24984 00ee BB67     		str	r3, [r7, #120]
 24985 00f0 49E0     		b	.L14
 24986              	.L20:
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   {
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Write the Input block in the Input FIFO */
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 24987              		.loc 1 242 0
 24988 00f2 D7F88030 		ldr	r3, [r7, #128]
 24989 00f6 1B68     		ldr	r3, [r3, #0]
 24990 00f8 1846     		mov	r0, r3
 24991 00fa FFF7FEFF 		bl	CRYP_DataIn
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 24992              		.loc 1 243 0
 24993 00fe D7F88030 		ldr	r3, [r7, #128]
 24994 0102 03F10403 		add	r3, r3, #4
 24995 0106 C7F88030 		str	r3, [r7, #128]
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     CRYP_DataIn(*(uint32_t*)(inputaddr));
 24996              		.loc 1 244 0
 24997 010a D7F88030 		ldr	r3, [r7, #128]
 24998 010e 1B68     		ldr	r3, [r3, #0]
 24999 0110 1846     		mov	r0, r3
 25000 0112 FFF7FEFF 		bl	CRYP_DataIn
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     inputaddr+=4;
 25001              		.loc 1 245 0
 25002 0116 D7F88030 		ldr	r3, [r7, #128]
 25003 011a 03F10403 		add	r3, r3, #4
 25004 011e C7F88030 		str	r3, [r7, #128]
 246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     /* Wait until the complete message has been processed */
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     counter = 0;
 25005              		.loc 1 248 0
 25006 0122 4FF00003 		mov	r3, #0
 25007 0126 3B61     		str	r3, [r7, #16]
 25008              	.L16:
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     do
 250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       busystatus = CRYP_GetFlagStatus(CRYP_FLAG_BUSY);
 25009              		.loc 1 251 0 discriminator 1
 25010 0128 4FF01000 		mov	r0, #16
 25011 012c FFF7FEFF 		bl	CRYP_GetFlagStatus
 25012 0130 0346     		mov	r3, r0
 25013 0132 7B67     		str	r3, [r7, #116]
 252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       counter++;
 25014              		.loc 1 252 0 discriminator 1
 25015 0134 3B69     		ldr	r3, [r7, #16]
 25016 0136 03F10103 		add	r3, r3, #1
 25017 013a 3B61     		str	r3, [r7, #16]
 253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }while ((counter != DESBUSY_TIMEOUT) && (busystatus != RESET));
 25018              		.loc 1 253 0 discriminator 1
 25019 013c 3B69     		ldr	r3, [r7, #16]
 25020 013e B3F5803F 		cmp	r3, #65536
 25021 0142 02D0     		beq	.L15
 25022 0144 7B6F     		ldr	r3, [r7, #116]
 25023 0146 002B     		cmp	r3, #0
 25024 0148 EED1     		bne	.L16
 25025              	.L15:
 254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     if (busystatus != RESET)
 25026              		.loc 1 255 0
 25027 014a 7B6F     		ldr	r3, [r7, #116]
 25028 014c 002B     		cmp	r3, #0
 25029 014e 04D0     		beq	.L17
 256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****    {
 257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****        status = ERROR;
 25030              		.loc 1 257 0
 25031 0150 4FF00003 		mov	r3, #0
 25032 0154 87F88730 		strb	r3, [r7, #135]
 25033 0158 11E0     		b	.L18
 25034              	.L17:
 258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     else
 260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     {
 261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       /* Read the Output block from the Output FIFO */
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 25035              		.loc 1 262 0
 25036 015a FC6F     		ldr	r4, [r7, #124]
 25037 015c FFF7FEFF 		bl	CRYP_DataOut
 25038 0160 0346     		mov	r3, r0
 25039 0162 2360     		str	r3, [r4, #0]
 263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 25040              		.loc 1 263 0
 25041 0164 FB6F     		ldr	r3, [r7, #124]
 25042 0166 03F10403 		add	r3, r3, #4
 25043 016a FB67     		str	r3, [r7, #124]
 264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       *(uint32_t*)(outputaddr) = CRYP_DataOut();
 25044              		.loc 1 264 0
 25045 016c FC6F     		ldr	r4, [r7, #124]
 25046 016e FFF7FEFF 		bl	CRYP_DataOut
 25047 0172 0346     		mov	r3, r0
 25048 0174 2360     		str	r3, [r4, #0]
 265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****       outputaddr+=4;
 25049              		.loc 1 265 0
 25050 0176 FB6F     		ldr	r3, [r7, #124]
 25051 0178 03F10403 		add	r3, r3, #4
 25052 017c FB67     		str	r3, [r7, #124]
 25053              	.L18:
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 25054              		.loc 1 239 0
 25055 017e BB6F     		ldr	r3, [r7, #120]
 25056 0180 03F10803 		add	r3, r3, #8
 25057 0184 BB67     		str	r3, [r7, #120]
 25058              	.L14:
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 25059              		.loc 1 239 0 is_stmt 0 discriminator 1
 25060 0186 BA6F     		ldr	r2, [r7, #120]
 25061 0188 D7F89830 		ldr	r3, [r7, #152]
 25062 018c 9A42     		cmp	r2, r3
 25063 018e 03D2     		bcs	.L19
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   for(i=0; ((i<Ilength) && (status != ERROR)); i+=8)
 25064              		.loc 1 239 0 discriminator 2
 25065 0190 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 25066 0194 002B     		cmp	r3, #0
 25067 0196 ACD1     		bne	.L20
 25068              	.L19:
 266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****     }
 267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   }
 268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   /* Disable Crypto */
 270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   CRYP_Cmd(DISABLE);
 25069              		.loc 1 270 0 is_stmt 1
 25070 0198 4FF00000 		mov	r0, #0
 25071 019c FFF7FEFF 		bl	CRYP_Cmd
 271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** 
 272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c ****   return status; 
 25072              		.loc 1 272 0
 25073 01a0 97F88730 		ldrb	r3, [r7, #135]	@ zero_extendqisi2
 273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp_des.c **** }
 25074              		.loc 1 273 0
 25075 01a4 1846     		mov	r0, r3
 25076 01a6 07F18C07 		add	r7, r7, #140
 25077 01aa BD46     		mov	sp, r7
 25078 01ac 90BD     		pop	{r4, r7, pc}
 25079              		.cfi_endproc
 25080              	.LFE111:
 25082 01ae 00BF     		.text
 25083              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp_des.c
     /tmp/ccWb0M5M.s:24578  .text.CRYP_DES_ECB:00000000 $t
     /tmp/ccWb0M5M.s:24583  .text.CRYP_DES_ECB:00000000 CRYP_DES_ECB
     /tmp/ccWb0M5M.s:24806  .text.CRYP_DES_CBC:00000000 $t
     /tmp/ccWb0M5M.s:24811  .text.CRYP_DES_CBC:00000000 CRYP_DES_CBC
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CRYP_KeyStructInit
CRYP_Init
CRYP_KeyInit
CRYP_FIFOFlush
CRYP_Cmd
CRYP_DataIn
CRYP_GetFlagStatus
CRYP_DataOut
CRYP_IVInit
