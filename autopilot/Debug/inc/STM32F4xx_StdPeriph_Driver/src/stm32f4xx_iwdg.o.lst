   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_iwdg.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c"
 24581              		.align	2
 24582              		.global	IWDG_WriteAccessCmd
 24583              		.thumb
 24584              		.thumb_func
 24586              	IWDG_WriteAccessCmd:
 24587              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @file    stm32f4xx_iwdg.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          functionalities of the Independent watchdog (IWDG) peripheral:           
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Prescaler and Counter configuration
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - IWDG activation
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Flag management
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @verbatim  
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                     IWDG features
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG can be started by either software or hardware (configurable
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          through option byte).
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is clocked by its own dedicated low-speed clock (LSI) and
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          thus stays active even if the main clock fails.
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Once the IWDG is started, the LSI is forced ON and cannot be disabled
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          (LSI cannot be disabled too), and the counter starts counting down from 
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          the reset value of 0xFFF. When it reaches the end of count value (0x000)
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          a system reset is generated.
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG counter should be reloaded at regular intervals to prevent
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          an MCU reset.
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                           
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is implemented in the VDD voltage domain that is still functional
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).          
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          IWDGRST flag in RCC_CSR register can be used to inform when a IWDG
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          reset occurs.
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG timeout may vary due to LSI frequency dispersion. STM32F4xx
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          devices provide the capability to measure the LSI frequency (LSI clock
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          connected internally to TIM5 CH4 input capture). The measured value
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          can be used to have an IWDG timeout with an acceptable accuracy. 
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          For more information, please refer to the STM32F4xx Reference manual
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                            
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                 How to use this driver
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          1. Enable write access to IWDG_PR and IWDG_RLR registers using
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable) function
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *               
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          2. Configure the IWDG prescaler using IWDG_SetPrescaler() function
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          3. Configure the IWDG counter value using IWDG_SetReload() function.
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             This value will be loaded in the IWDG counter each time the counter
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             is reloaded, then the IWDG will start counting down from this value.
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          4. Start the IWDG using IWDG_Enable() function, when the IWDG is used
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             in software mode (no need to enable the LSI, it will be enabled
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             by hardware)
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          5. Then the application program must reload the IWDG counter at regular
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_ReloadCounter() function.      
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @endverbatim
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @attention
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #include "stm32f4xx_iwdg.h"
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG 
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief IWDG driver modules
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */ 
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private define ------------------------------------------------------------*/
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* KR register bit mask */
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_RELOAD    ((uint16_t)0xAAAA)
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_ENABLE    ((uint16_t)0xCCCC)
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private functions ---------------------------------------------------------*/
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Private_Functions
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group1 Prescaler and Counter configuration functions
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   Prescaler and Counter configuration functions
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                   Prescaler and Counter configuration functions
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR register
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 24588              		.loc 1 130 0
 24589              		.cfi_startproc
 24590              		@ args = 0, pretend = 0, frame = 8
 24591              		@ frame_needed = 1, uses_anonymous_args = 0
 24592              		@ link register save eliminated.
 24593 0000 80B4     		push	{r7}
 24594              	.LCFI0:
 24595              		.cfi_def_cfa_offset 4
 24596 0002 83B0     		sub	sp, sp, #12
 24597              	.LCFI1:
 24598              		.cfi_def_cfa_offset 16
 24599 0004 00AF     		add	r7, sp, #0
 24600              		.cfi_offset 7, -4
 24601              	.LCFI2:
 24602              		.cfi_def_cfa_register 7
 24603 0006 0346     		mov	r3, r0
 24604 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
 24605              		.loc 1 133 0
 24606 000a 044B     		ldr	r3, .L2
 24607 000c FA88     		ldrh	r2, [r7, #6]
 24608 000e 1A60     		str	r2, [r3, #0]
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 24609              		.loc 1 134 0
 24610 0010 07F10C07 		add	r7, r7, #12
 24611 0014 BD46     		mov	sp, r7
 24612 0016 80BC     		pop	{r7}
 24613 0018 7047     		bx	lr
 24614              	.L3:
 24615 001a 00BF     		.align	2
 24616              	.L2:
 24617 001c 00300040 		.word	1073754112
 24618              		.cfi_endproc
 24619              	.LFE110:
 24621              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
 24622              		.align	2
 24623              		.global	IWDG_SetPrescaler
 24624              		.thumb
 24625              		.thumb_func
 24627              	IWDG_SetPrescaler:
 24628              	.LFB111:
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 24629              		.loc 1 150 0
 24630              		.cfi_startproc
 24631              		@ args = 0, pretend = 0, frame = 8
 24632              		@ frame_needed = 1, uses_anonymous_args = 0
 24633              		@ link register save eliminated.
 24634 0000 80B4     		push	{r7}
 24635              	.LCFI3:
 24636              		.cfi_def_cfa_offset 4
 24637 0002 83B0     		sub	sp, sp, #12
 24638              	.LCFI4:
 24639              		.cfi_def_cfa_offset 16
 24640 0004 00AF     		add	r7, sp, #0
 24641              		.cfi_offset 7, -4
 24642              	.LCFI5:
 24643              		.cfi_def_cfa_register 7
 24644 0006 0346     		mov	r3, r0
 24645 0008 FB71     		strb	r3, [r7, #7]
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
 24646              		.loc 1 153 0
 24647 000a 044B     		ldr	r3, .L5
 24648 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24649 000e 5A60     		str	r2, [r3, #4]
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 24650              		.loc 1 154 0
 24651 0010 07F10C07 		add	r7, r7, #12
 24652 0014 BD46     		mov	sp, r7
 24653 0016 80BC     		pop	{r7}
 24654 0018 7047     		bx	lr
 24655              	.L6:
 24656 001a 00BF     		.align	2
 24657              	.L5:
 24658 001c 00300040 		.word	1073754112
 24659              		.cfi_endproc
 24660              	.LFE111:
 24662              		.section	.text.IWDG_SetReload,"ax",%progbits
 24663              		.align	2
 24664              		.global	IWDG_SetReload
 24665              		.thumb
 24666              		.thumb_func
 24668              	IWDG_SetReload:
 24669              	.LFB112:
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Reload value.
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter must be a number between 0 and 0x0FFF.
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 24670              		.loc 1 163 0
 24671              		.cfi_startproc
 24672              		@ args = 0, pretend = 0, frame = 8
 24673              		@ frame_needed = 1, uses_anonymous_args = 0
 24674              		@ link register save eliminated.
 24675 0000 80B4     		push	{r7}
 24676              	.LCFI6:
 24677              		.cfi_def_cfa_offset 4
 24678 0002 83B0     		sub	sp, sp, #12
 24679              	.LCFI7:
 24680              		.cfi_def_cfa_offset 16
 24681 0004 00AF     		add	r7, sp, #0
 24682              		.cfi_offset 7, -4
 24683              	.LCFI8:
 24684              		.cfi_def_cfa_register 7
 24685 0006 0346     		mov	r3, r0
 24686 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->RLR = Reload;
 24687              		.loc 1 166 0
 24688 000a 044B     		ldr	r3, .L8
 24689 000c FA88     		ldrh	r2, [r7, #6]
 24690 000e 9A60     		str	r2, [r3, #8]
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 24691              		.loc 1 167 0
 24692 0010 07F10C07 		add	r7, r7, #12
 24693 0014 BD46     		mov	sp, r7
 24694 0016 80BC     		pop	{r7}
 24695 0018 7047     		bx	lr
 24696              	.L9:
 24697 001a 00BF     		.align	2
 24698              	.L8:
 24699 001c 00300040 		.word	1073754112
 24700              		.cfi_endproc
 24701              	.LFE112:
 24703              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
 24704              		.align	2
 24705              		.global	IWDG_ReloadCounter
 24706              		.thumb
 24707              		.thumb_func
 24709              	IWDG_ReloadCounter:
 24710              	.LFB113:
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *         (write access to IWDG_PR and IWDG_RLR registers disabled).
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_ReloadCounter(void)
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 24711              		.loc 1 176 0
 24712              		.cfi_startproc
 24713              		@ args = 0, pretend = 0, frame = 0
 24714              		@ frame_needed = 1, uses_anonymous_args = 0
 24715              		@ link register save eliminated.
 24716 0000 80B4     		push	{r7}
 24717              	.LCFI9:
 24718              		.cfi_def_cfa_offset 4
 24719 0002 00AF     		add	r7, sp, #0
 24720              		.cfi_offset 7, -4
 24721              	.LCFI10:
 24722              		.cfi_def_cfa_register 7
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_RELOAD;
 24723              		.loc 1 177 0
 24724 0004 034B     		ldr	r3, .L11
 24725 0006 4AF6AA22 		movw	r2, #43690
 24726 000a 1A60     		str	r2, [r3, #0]
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 24727              		.loc 1 178 0
 24728 000c BD46     		mov	sp, r7
 24729 000e 80BC     		pop	{r7}
 24730 0010 7047     		bx	lr
 24731              	.L12:
 24732 0012 00BF     		.align	2
 24733              	.L11:
 24734 0014 00300040 		.word	1073754112
 24735              		.cfi_endproc
 24736              	.LFE113:
 24738              		.section	.text.IWDG_Enable,"ax",%progbits
 24739              		.align	2
 24740              		.global	IWDG_Enable
 24741              		.thumb
 24742              		.thumb_func
 24744              	IWDG_Enable:
 24745              	.LFB114:
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group2 IWDG activation function
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   IWDG activation function 
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                           IWDG activation function
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_Enable(void)
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 24746              		.loc 1 202 0
 24747              		.cfi_startproc
 24748              		@ args = 0, pretend = 0, frame = 0
 24749              		@ frame_needed = 1, uses_anonymous_args = 0
 24750              		@ link register save eliminated.
 24751 0000 80B4     		push	{r7}
 24752              	.LCFI11:
 24753              		.cfi_def_cfa_offset 4
 24754 0002 00AF     		add	r7, sp, #0
 24755              		.cfi_offset 7, -4
 24756              	.LCFI12:
 24757              		.cfi_def_cfa_register 7
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_ENABLE;
 24758              		.loc 1 203 0
 24759 0004 034B     		ldr	r3, .L14
 24760 0006 4CF6CC42 		movw	r2, #52428
 24761 000a 1A60     		str	r2, [r3, #0]
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 24762              		.loc 1 204 0
 24763 000c BD46     		mov	sp, r7
 24764 000e 80BC     		pop	{r7}
 24765 0010 7047     		bx	lr
 24766              	.L15:
 24767 0012 00BF     		.align	2
 24768              	.L14:
 24769 0014 00300040 		.word	1073754112
 24770              		.cfi_endproc
 24771              	.LFE114:
 24773              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 24774              		.align	2
 24775              		.global	IWDG_GetFlagStatus
 24776              		.thumb
 24777              		.thumb_func
 24779              	IWDG_GetFlagStatus:
 24780              	.LFB115:
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group3 Flag management function 
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief  Flag management function  
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                             Flag management function 
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_RVU: Reload Value Update on going
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 24781              		.loc 1 231 0
 24782              		.cfi_startproc
 24783              		@ args = 0, pretend = 0, frame = 16
 24784              		@ frame_needed = 1, uses_anonymous_args = 0
 24785              		@ link register save eliminated.
 24786 0000 80B4     		push	{r7}
 24787              	.LCFI13:
 24788              		.cfi_def_cfa_offset 4
 24789 0002 85B0     		sub	sp, sp, #20
 24790              	.LCFI14:
 24791              		.cfi_def_cfa_offset 24
 24792 0004 00AF     		add	r7, sp, #0
 24793              		.cfi_offset 7, -4
 24794              	.LCFI15:
 24795              		.cfi_def_cfa_register 7
 24796 0006 0346     		mov	r3, r0
 24797 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   FlagStatus bitstatus = RESET;
 24798              		.loc 1 232 0
 24799 000a 4FF00003 		mov	r3, #0
 24800 000e FB73     		strb	r3, [r7, #15]
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 24801              		.loc 1 235 0
 24802 0010 0A4B     		ldr	r3, .L19
 24803 0012 DA68     		ldr	r2, [r3, #12]
 24804 0014 FB88     		ldrh	r3, [r7, #6]
 24805 0016 02EA0303 		and	r3, r2, r3
 24806 001a 002B     		cmp	r3, #0
 24807 001c 03D0     		beq	.L17
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = SET;
 24808              		.loc 1 237 0
 24809 001e 4FF00103 		mov	r3, #1
 24810 0022 FB73     		strb	r3, [r7, #15]
 24811 0024 02E0     		b	.L18
 24812              	.L17:
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   else
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = RESET;
 24813              		.loc 1 241 0
 24814 0026 4FF00003 		mov	r3, #0
 24815 002a FB73     		strb	r3, [r7, #15]
 24816              	.L18:
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Return the flag status */
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   return bitstatus;
 24817              		.loc 1 244 0
 24818 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 24819              		.loc 1 245 0
 24820 002e 1846     		mov	r0, r3
 24821 0030 07F11407 		add	r7, r7, #20
 24822 0034 BD46     		mov	sp, r7
 24823 0036 80BC     		pop	{r7}
 24824 0038 7047     		bx	lr
 24825              	.L20:
 24826 003a 00BF     		.align	2
 24827              	.L19:
 24828 003c 00300040 		.word	1073754112
 24829              		.cfi_endproc
 24830              	.LFE115:
 24832              		.text
 24833              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_iwdg.c
     /tmp/ccgM0uvQ.s:24581  .text.IWDG_WriteAccessCmd:00000000 $t
     /tmp/ccgM0uvQ.s:24586  .text.IWDG_WriteAccessCmd:00000000 IWDG_WriteAccessCmd
     /tmp/ccgM0uvQ.s:24617  .text.IWDG_WriteAccessCmd:0000001c $d
     /tmp/ccgM0uvQ.s:24622  .text.IWDG_SetPrescaler:00000000 $t
     /tmp/ccgM0uvQ.s:24627  .text.IWDG_SetPrescaler:00000000 IWDG_SetPrescaler
     /tmp/ccgM0uvQ.s:24658  .text.IWDG_SetPrescaler:0000001c $d
     /tmp/ccgM0uvQ.s:24663  .text.IWDG_SetReload:00000000 $t
     /tmp/ccgM0uvQ.s:24668  .text.IWDG_SetReload:00000000 IWDG_SetReload
     /tmp/ccgM0uvQ.s:24699  .text.IWDG_SetReload:0000001c $d
     /tmp/ccgM0uvQ.s:24704  .text.IWDG_ReloadCounter:00000000 $t
     /tmp/ccgM0uvQ.s:24709  .text.IWDG_ReloadCounter:00000000 IWDG_ReloadCounter
     /tmp/ccgM0uvQ.s:24734  .text.IWDG_ReloadCounter:00000014 $d
     /tmp/ccgM0uvQ.s:24739  .text.IWDG_Enable:00000000 $t
     /tmp/ccgM0uvQ.s:24744  .text.IWDG_Enable:00000000 IWDG_Enable
     /tmp/ccgM0uvQ.s:24769  .text.IWDG_Enable:00000014 $d
     /tmp/ccgM0uvQ.s:24774  .text.IWDG_GetFlagStatus:00000000 $t
     /tmp/ccgM0uvQ.s:24779  .text.IWDG_GetFlagStatus:00000000 IWDG_GetFlagStatus
     /tmp/ccgM0uvQ.s:24828  .text.IWDG_GetFlagStatus:0000003c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
