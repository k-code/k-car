   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_cryp.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c"
 24581              		.align	2
 24582              		.global	CRYP_DeInit
 24583              		.thumb
 24584              		.thumb_func
 24586              	CRYP_DeInit:
 24587              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @file    stm32f4xx_cryp.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          functionalities of the  Cryptographic processor (CRYP) peripheral:           
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Initialization and Configuration functions
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Data treatment functions 
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Context swapping functions     
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - DMA interface function       
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Interrupts and flags management       
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @verbatim
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                               
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================      
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                                 How to use this driver
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          =================================================================== 
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          1. Enable the CRYP controller clock using 
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          2. Initialise the CRYP using CRYP_Init(), CRYP_KeyInit() and if 
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             needed CRYP_IVInit(). 
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          3. Flush the IN and OUT FIFOs by using CRYP_FIFOFlush() function.
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          4. Enable the CRYP controller using the CRYP_Cmd() function. 
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          5. If using DMA for Data input and output transfer, 
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             Activate the needed DMA Requests using CRYP_DMACmd() function 
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          6. If DMA is not used for data transfer, use CRYP_DataIn() and 
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_DataOut() functions to enter data to IN FIFO and get result
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             from OUT FIFO.
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          7. To control CRYP events you can use one of the following 
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              two methods:
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Check on CRYP flags using the CRYP_GetFlagStatus() function.  
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Use CRYP interrupts through the function CRYP_ITConfig() at 
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 initialization phase and CRYP_GetITStatus() function into 
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 interrupt routines in processing phase.
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          8. Save and restore Cryptographic processor context using  
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_SaveContext() and CRYP_RestoreContext() functions.     
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                Procedure to perform an encryption or a decryption
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      Initialization
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      ===============  
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *     1. Initialize the peripheral using CRYP_Init(), CRYP_KeyInit() and 
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        CRYP_IVInit functions:
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the key size (128-, 192- or 256-bit, in the AES only) 
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Enter the symmetric key 
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the data type
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - In case of decryption in AES-ECB or AES-CBC, you must prepare 
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          the key: configure the key preparation mode. Then Enable the CRYP 
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          peripheral using CRYP_Cmd() function: the BUSY flag is set. 
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          Wait until BUSY flag is reset : the key is prepared for decryption
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the algorithm and chaining (the DES/TDES in ECB/CBC, the 
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          AES in ECB/CBC/CTR) 
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the direction (encryption/decryption).
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Write the initialization vectors (in CBC or CTR modes only)
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Flush the IN and OUT FIFOs using the CRYP_FIFOFlush() function
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Basic Processing mode (polling mode) 
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================================  
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the cryptographic processor using CRYP_Cmd() function.
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Write the first blocks in the input FIFO (2 to 8 words) using 
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_DataIn() function.
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. Repeat the following sequence until the complete message has been 
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       processed:
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       a) Wait for flag CRYP_FLAG_OFNE occurs (using CRYP_GetFlagStatus() 
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function), then read the OUT-FIFO using CRYP_DataOut() function
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is empty)
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       b) Wait for flag CRYP_FLAG_IFNF occurs, (using CRYP_GetFlagStatus() 
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function then write the IN FIFO using CRYP_DataIn() function 
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is full)
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. At the end of the processing, CRYP_FLAG_BUSY flag will be reset and 
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        both FIFOs are empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is 
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        reset). You can disable the peripheral using CRYP_Cmd() function.
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Interrupts Processing mode 
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ===========================
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the data are transferred by the 
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    CPU during interrupts.
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the interrupts CRYP_IT_INI and CRYP_IT_OUTI using 
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_ITConfig() function.
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function.
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. In the CRYP_IT_INI interrupt handler : load the input message into the 
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       IN FIFO using CRYP_DataIn() function . You can load 2 or 4 words at a 
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       time, or load data until the IN FIFO is full. When the last word of
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the message has been entered into the IN FIFO, disable the CRYP_IT_INI 
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt (using CRYP_ITConfig() function).
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. In the CRYP_IT_OUTI interrupt handler : read the output message from 
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the OUT FIFO using CRYP_DataOut() function. You can read 1 block (2 or 
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       4 words) at a time or read data until the FIFO is empty.
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       When the last word has been read, INIM=0, BUSY=0 and both FIFOs are 
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is reset). 
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       You can disable the CRYP_IT_OUTI interrupt (using CRYP_ITConfig() 
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       function) and you can disable the peripheral using CRYP_Cmd() function.
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    DMA Processing mode 
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the DMA is used to transfer the 
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    data from/to the memory.
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Configure the DMA controller to transfer the input data from the 
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       memory using DMA_Init() function. 
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       The transfer length is the length of the message. 
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       As message padding is not managed by the peripheral, the message 
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       length must be an entire number of blocks. The data are transferred 
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       in burst mode. The burst length is 4 words in the AES and 2 or 4 
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       words in the DES/TDES. The DMA should be configured to set an 
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt on transfer completion of the output data to indicate that 
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the processing is finished. 
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Refer to DMA peripheral driver for more details.  
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function. 
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Enable the DMA requests CRYP_DMAReq_DataIN and CRYP_DMAReq_DataOUT 
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       using CRYP_DMACmd() function.
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. All the transfers and processing are managed by the DMA and the 
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       cryptographic processor. The DMA transfer complete interrupt indicates 
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       that the processing is complete. Both FIFOs are normally empty and 
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_FLAG_BUSY flag is reset.
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @endverbatim
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @attention
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************  
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Includes ------------------------------------------------------------------*/
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_cryp.h"
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_rcc.h"
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP 
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief CRYP driver modules
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private typedef -----------------------------------------------------------*/
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private define ------------------------------------------------------------*/
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define FLAG_MASK     ((uint8_t)0x20)
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define MAX_TIMEOUT   ((uint16_t)0xFFFF)
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private macro -------------------------------------------------------------*/
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private variables ---------------------------------------------------------*/
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private function prototypes -----------------------------------------------*/
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private functions ---------------------------------------------------------*/
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Private_Functions
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group1 Initialization and Configuration functions
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    Initialization and Configuration functions 
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       Initialization and Configuration functions
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to 
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Initialize the cryptographic Processor using CRYP_Init() function 
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  Encrypt or Decrypt 
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  mode : TDES-ECB, TDES-CBC, 
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 DES-ECB, DES-CBC, 
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 AES-ECB, AES-CBC, AES-CTR, AES-Key 
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - DataType :  32-bit data, 16-bit data, bit data or bit-string
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - Key Size (only in AES modes)
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Encrypt or Decrypt Key using CRYP_KeyInit() function 
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Initialization Vectors(IV) for CBC and CTR modes using 
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      CRYP_IVInit() function.  
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Flushes the IN and OUT FIFOs : using CRYP_FIFOFlush() function.                         
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Enable or disable the CRYP Processor using CRYP_Cmd() function 
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Deinitializes the CRYP peripheral registers to their default reset values
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DeInit(void)
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 24588              		.loc 1 216 0
 24589              		.cfi_startproc
 24590              		@ args = 0, pretend = 0, frame = 0
 24591              		@ frame_needed = 1, uses_anonymous_args = 0
 24592 0000 80B5     		push	{r7, lr}
 24593              	.LCFI0:
 24594              		.cfi_def_cfa_offset 8
 24595 0002 00AF     		add	r7, sp, #0
 24596              		.cfi_offset 14, -4
 24597              		.cfi_offset 7, -8
 24598              	.LCFI1:
 24599              		.cfi_def_cfa_register 7
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable CRYP reset state */
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, ENABLE);
 24600              		.loc 1 218 0
 24601 0004 4FF01000 		mov	r0, #16
 24602 0008 4FF00101 		mov	r1, #1
 24603 000c FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Release CRYP from reset state */
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, DISABLE);
 24604              		.loc 1 221 0
 24605 0010 4FF01000 		mov	r0, #16
 24606 0014 4FF00001 		mov	r1, #0
 24607 0018 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 24608              		.loc 1 222 0
 24609 001c 80BD     		pop	{r7, pc}
 24610              		.cfi_endproc
 24611              	.LFE110:
 24613 001e 00BF     		.section	.text.CRYP_Init,"ax",%progbits
 24614              		.align	2
 24615              		.global	CRYP_Init
 24616              		.thumb
 24617              		.thumb_func
 24619              	CRYP_Init:
 24620              	.LFB111:
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP peripheral according to the specified parameters
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         in the CRYP_InitStruct.
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP peripheral.
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 24621              		.loc 1 232 0
 24622              		.cfi_startproc
 24623              		@ args = 0, pretend = 0, frame = 8
 24624              		@ frame_needed = 1, uses_anonymous_args = 0
 24625              		@ link register save eliminated.
 24626 0000 80B4     		push	{r7}
 24627              	.LCFI2:
 24628              		.cfi_def_cfa_offset 4
 24629 0002 83B0     		sub	sp, sp, #12
 24630              	.LCFI3:
 24631              		.cfi_def_cfa_offset 16
 24632 0004 00AF     		add	r7, sp, #0
 24633              		.cfi_offset 7, -4
 24634              	.LCFI4:
 24635              		.cfi_def_cfa_register 7
 24636 0006 7860     		str	r0, [r7, #4]
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select Algorithm mode*/  
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGOMODE;
 24637              		.loc 1 239 0
 24638 0008 264B     		ldr	r3, .L5
 24639 000a 264A     		ldr	r2, .L5
 24640 000c 1268     		ldr	r2, [r2, #0]
 24641 000e 22F03802 		bic	r2, r2, #56
 24642 0012 1A60     		str	r2, [r3, #0]
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
 24643              		.loc 1 240 0
 24644 0014 234B     		ldr	r3, .L5
 24645 0016 234A     		ldr	r2, .L5
 24646 0018 1168     		ldr	r1, [r2, #0]
 24647 001a 7A68     		ldr	r2, [r7, #4]
 24648 001c 5288     		ldrh	r2, [r2, #2]
 24649 001e 41EA0202 		orr	r2, r1, r2
 24650 0022 1A60     		str	r2, [r3, #0]
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select dataType */ 
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_DATATYPE;
 24651              		.loc 1 243 0
 24652 0024 1F4B     		ldr	r3, .L5
 24653 0026 1F4A     		ldr	r2, .L5
 24654 0028 1268     		ldr	r2, [r2, #0]
 24655 002a 22F0C002 		bic	r2, r2, #192
 24656 002e 1A60     		str	r2, [r3, #0]
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
 24657              		.loc 1 244 0
 24658 0030 1C4B     		ldr	r3, .L5
 24659 0032 1C4A     		ldr	r2, .L5
 24660 0034 1168     		ldr	r1, [r2, #0]
 24661 0036 7A68     		ldr	r2, [r7, #4]
 24662 0038 9288     		ldrh	r2, [r2, #4]
 24663 003a 41EA0202 		orr	r2, r1, r2
 24664 003e 1A60     		str	r2, [r3, #0]
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* select Key size (used only with AES algorithm) */
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
 24665              		.loc 1 247 0
 24666 0040 7B68     		ldr	r3, [r7, #4]
 24667 0042 5B88     		ldrh	r3, [r3, #2]
 24668 0044 202B     		cmp	r3, #32
 24669 0046 0BD0     		beq	.L3
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
 24670              		.loc 1 248 0 discriminator 1
 24671 0048 7B68     		ldr	r3, [r7, #4]
 24672 004a 5B88     		ldrh	r3, [r3, #2]
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
 24673              		.loc 1 247 0 discriminator 1
 24674 004c 282B     		cmp	r3, #40
 24675 004e 07D0     		beq	.L3
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
 24676              		.loc 1 249 0
 24677 0050 7B68     		ldr	r3, [r7, #4]
 24678 0052 5B88     		ldrh	r3, [r3, #2]
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
 24679              		.loc 1 248 0
 24680 0054 302B     		cmp	r3, #48
 24681 0056 03D0     		beq	.L3
 250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_Key))
 24682              		.loc 1 250 0
 24683 0058 7B68     		ldr	r3, [r7, #4]
 24684 005a 5B88     		ldrh	r3, [r3, #2]
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
 24685              		.loc 1 249 0
 24686 005c 382B     		cmp	r3, #56
 24687 005e 0DD1     		bne	.L4
 24688              	.L3:
 251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
 253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_KEYSIZE;
 24689              		.loc 1 253 0
 24690 0060 104B     		ldr	r3, .L5
 24691 0062 104A     		ldr	r2, .L5
 24692 0064 1268     		ldr	r2, [r2, #0]
 24693 0066 22F44072 		bic	r2, r2, #768
 24694 006a 1A60     		str	r2, [r3, #0]
 254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
 24695              		.loc 1 254 0
 24696 006c 0D4B     		ldr	r3, .L5
 24697 006e 0D4A     		ldr	r2, .L5
 24698 0070 1168     		ldr	r1, [r2, #0]
 24699 0072 7A68     		ldr	r2, [r7, #4]
 24700 0074 D288     		ldrh	r2, [r2, #6]
 24701 0076 41EA0202 		orr	r2, r1, r2
 24702 007a 1A60     		str	r2, [r3, #0]
 24703              	.L4:
 255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   configured once the key has 
 256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   been prepared */
 257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select data Direction */ 
 260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGODIR;
 24704              		.loc 1 260 0
 24705 007c 094B     		ldr	r3, .L5
 24706 007e 094A     		ldr	r2, .L5
 24707 0080 1268     		ldr	r2, [r2, #0]
 24708 0082 22F00402 		bic	r2, r2, #4
 24709 0086 1A60     		str	r2, [r3, #0]
 261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 24710              		.loc 1 261 0
 24711 0088 064B     		ldr	r3, .L5
 24712 008a 064A     		ldr	r2, .L5
 24713 008c 1168     		ldr	r1, [r2, #0]
 24714 008e 7A68     		ldr	r2, [r7, #4]
 24715 0090 1288     		ldrh	r2, [r2, #0]
 24716 0092 41EA0202 		orr	r2, r1, r2
 24717 0096 1A60     		str	r2, [r3, #0]
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 24718              		.loc 1 262 0
 24719 0098 07F10C07 		add	r7, r7, #12
 24720 009c BD46     		mov	sp, r7
 24721 009e 80BC     		pop	{r7}
 24722 00a0 7047     		bx	lr
 24723              	.L6:
 24724 00a2 00BF     		.align	2
 24725              	.L5:
 24726 00a4 00000650 		.word	1342570496
 24727              		.cfi_endproc
 24728              	.LFE111:
 24730              		.section	.text.CRYP_StructInit,"ax",%progbits
 24731              		.align	2
 24732              		.global	CRYP_StructInit
 24733              		.thumb
 24734              		.thumb_func
 24736              	CRYP_StructInit:
 24737              	.LFB112:
 263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_InitStruct member with its default value.
 266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure which will
 267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         be initialized.
 268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct)
 271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 24738              		.loc 1 271 0
 24739              		.cfi_startproc
 24740              		@ args = 0, pretend = 0, frame = 8
 24741              		@ frame_needed = 1, uses_anonymous_args = 0
 24742              		@ link register save eliminated.
 24743 0000 80B4     		push	{r7}
 24744              	.LCFI5:
 24745              		.cfi_def_cfa_offset 4
 24746 0002 83B0     		sub	sp, sp, #12
 24747              	.LCFI6:
 24748              		.cfi_def_cfa_offset 16
 24749 0004 00AF     		add	r7, sp, #0
 24750              		.cfi_offset 7, -4
 24751              	.LCFI7:
 24752              		.cfi_def_cfa_register 7
 24753 0006 7860     		str	r0, [r7, #4]
 272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_AlgoDir member */
 273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 24754              		.loc 1 273 0
 24755 0008 7B68     		ldr	r3, [r7, #4]
 24756 000a 4FF00002 		mov	r2, #0
 24757 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_AlgoMode member */
 276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
 24758              		.loc 1 276 0
 24759 0010 7B68     		ldr	r3, [r7, #4]
 24760 0012 4FF00002 		mov	r2, #0
 24761 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_DataType member */
 279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_DataType = CRYP_DataType_32b;
 24762              		.loc 1 279 0
 24763 0018 7B68     		ldr	r3, [r7, #4]
 24764 001a 4FF00002 		mov	r2, #0
 24765 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_KeySize member */
 282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_KeySize = CRYP_KeySize_128b;
 24766              		.loc 1 282 0
 24767 0020 7B68     		ldr	r3, [r7, #4]
 24768 0022 4FF00002 		mov	r2, #0
 24769 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 24770              		.loc 1 283 0
 24771 0028 07F10C07 		add	r7, r7, #12
 24772 002c BD46     		mov	sp, r7
 24773 002e 80BC     		pop	{r7}
 24774 0030 7047     		bx	lr
 24775              		.cfi_endproc
 24776              	.LFE112:
 24778 0032 00BF     		.section	.text.CRYP_KeyInit,"ax",%progbits
 24779              		.align	2
 24780              		.global	CRYP_KeyInit
 24781              		.thumb
 24782              		.thumb_func
 24784              	CRYP_KeyInit:
 24785              	.LFB113:
 284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Keys according to the specified parameters in
 287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the CRYP_KeyInitStruct.
 288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
 289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.
 290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 24786              		.loc 1 293 0
 24787              		.cfi_startproc
 24788              		@ args = 0, pretend = 0, frame = 8
 24789              		@ frame_needed = 1, uses_anonymous_args = 0
 24790              		@ link register save eliminated.
 24791 0000 80B4     		push	{r7}
 24792              	.LCFI8:
 24793              		.cfi_def_cfa_offset 4
 24794 0002 83B0     		sub	sp, sp, #12
 24795              	.LCFI9:
 24796              		.cfi_def_cfa_offset 16
 24797 0004 00AF     		add	r7, sp, #0
 24798              		.cfi_offset 7, -4
 24799              	.LCFI10:
 24800              		.cfi_def_cfa_register 7
 24801 0006 7860     		str	r0, [r7, #4]
 294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Key Initialisation */
 295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
 24802              		.loc 1 295 0
 24803 0008 124B     		ldr	r3, .L9
 24804 000a 7A68     		ldr	r2, [r7, #4]
 24805 000c 1268     		ldr	r2, [r2, #0]
 24806 000e 1A62     		str	r2, [r3, #32]
 296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
 24807              		.loc 1 296 0
 24808 0010 104B     		ldr	r3, .L9
 24809 0012 7A68     		ldr	r2, [r7, #4]
 24810 0014 5268     		ldr	r2, [r2, #4]
 24811 0016 5A62     		str	r2, [r3, #36]
 297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
 24812              		.loc 1 297 0
 24813 0018 0E4B     		ldr	r3, .L9
 24814 001a 7A68     		ldr	r2, [r7, #4]
 24815 001c 9268     		ldr	r2, [r2, #8]
 24816 001e 9A62     		str	r2, [r3, #40]
 298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
 24817              		.loc 1 298 0
 24818 0020 0C4B     		ldr	r3, .L9
 24819 0022 7A68     		ldr	r2, [r7, #4]
 24820 0024 D268     		ldr	r2, [r2, #12]
 24821 0026 DA62     		str	r2, [r3, #44]
 299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
 24822              		.loc 1 299 0
 24823 0028 0A4B     		ldr	r3, .L9
 24824 002a 7A68     		ldr	r2, [r7, #4]
 24825 002c 1269     		ldr	r2, [r2, #16]
 24826 002e 1A63     		str	r2, [r3, #48]
 300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
 24827              		.loc 1 300 0
 24828 0030 084B     		ldr	r3, .L9
 24829 0032 7A68     		ldr	r2, [r7, #4]
 24830 0034 5269     		ldr	r2, [r2, #20]
 24831 0036 5A63     		str	r2, [r3, #52]
 301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
 24832              		.loc 1 301 0
 24833 0038 064B     		ldr	r3, .L9
 24834 003a 7A68     		ldr	r2, [r7, #4]
 24835 003c 9269     		ldr	r2, [r2, #24]
 24836 003e 9A63     		str	r2, [r3, #56]
 302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
 24837              		.loc 1 302 0
 24838 0040 044B     		ldr	r3, .L9
 24839 0042 7A68     		ldr	r2, [r7, #4]
 24840 0044 D269     		ldr	r2, [r2, #28]
 24841 0046 DA63     		str	r2, [r3, #60]
 303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 24842              		.loc 1 303 0
 24843 0048 07F10C07 		add	r7, r7, #12
 24844 004c BD46     		mov	sp, r7
 24845 004e 80BC     		pop	{r7}
 24846 0050 7047     		bx	lr
 24847              	.L10:
 24848 0052 00BF     		.align	2
 24849              	.L9:
 24850 0054 00000650 		.word	1342570496
 24851              		.cfi_endproc
 24852              	.LFE113:
 24854              		.section	.text.CRYP_KeyStructInit,"ax",%progbits
 24855              		.align	2
 24856              		.global	CRYP_KeyStructInit
 24857              		.thumb
 24858              		.thumb_func
 24860              	CRYP_KeyStructInit:
 24861              	.LFB114:
 304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_KeyInitStruct member with its default value.
 307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
 308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         which will be initialized.
 309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 24862              		.loc 1 312 0
 24863              		.cfi_startproc
 24864              		@ args = 0, pretend = 0, frame = 8
 24865              		@ frame_needed = 1, uses_anonymous_args = 0
 24866              		@ link register save eliminated.
 24867 0000 80B4     		push	{r7}
 24868              	.LCFI11:
 24869              		.cfi_def_cfa_offset 4
 24870 0002 83B0     		sub	sp, sp, #12
 24871              	.LCFI12:
 24872              		.cfi_def_cfa_offset 16
 24873 0004 00AF     		add	r7, sp, #0
 24874              		.cfi_offset 7, -4
 24875              	.LCFI13:
 24876              		.cfi_def_cfa_register 7
 24877 0006 7860     		str	r0, [r7, #4]
 313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
 24878              		.loc 1 313 0
 24879 0008 7B68     		ldr	r3, [r7, #4]
 24880 000a 4FF00002 		mov	r2, #0
 24881 000e 1A60     		str	r2, [r3, #0]
 314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Right = 0;
 24882              		.loc 1 314 0
 24883 0010 7B68     		ldr	r3, [r7, #4]
 24884 0012 4FF00002 		mov	r2, #0
 24885 0016 5A60     		str	r2, [r3, #4]
 315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
 24886              		.loc 1 315 0
 24887 0018 7B68     		ldr	r3, [r7, #4]
 24888 001a 4FF00002 		mov	r2, #0
 24889 001e 9A60     		str	r2, [r3, #8]
 316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Right = 0;
 24890              		.loc 1 316 0
 24891 0020 7B68     		ldr	r3, [r7, #4]
 24892 0022 4FF00002 		mov	r2, #0
 24893 0026 DA60     		str	r2, [r3, #12]
 317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
 24894              		.loc 1 317 0
 24895 0028 7B68     		ldr	r3, [r7, #4]
 24896 002a 4FF00002 		mov	r2, #0
 24897 002e 1A61     		str	r2, [r3, #16]
 318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Right = 0;
 24898              		.loc 1 318 0
 24899 0030 7B68     		ldr	r3, [r7, #4]
 24900 0032 4FF00002 		mov	r2, #0
 24901 0036 5A61     		str	r2, [r3, #20]
 319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
 24902              		.loc 1 319 0
 24903 0038 7B68     		ldr	r3, [r7, #4]
 24904 003a 4FF00002 		mov	r2, #0
 24905 003e 9A61     		str	r2, [r3, #24]
 320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Right = 0;
 24906              		.loc 1 320 0
 24907 0040 7B68     		ldr	r3, [r7, #4]
 24908 0042 4FF00002 		mov	r2, #0
 24909 0046 DA61     		str	r2, [r3, #28]
 321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 24910              		.loc 1 321 0
 24911 0048 07F10C07 		add	r7, r7, #12
 24912 004c BD46     		mov	sp, r7
 24913 004e 80BC     		pop	{r7}
 24914 0050 7047     		bx	lr
 24915              		.cfi_endproc
 24916              	.LFE114:
 24918 0052 00BF     		.section	.text.CRYP_IVInit,"ax",%progbits
 24919              		.align	2
 24920              		.global	CRYP_IVInit
 24921              		.thumb
 24922              		.thumb_func
 24924              	CRYP_IVInit:
 24925              	.LFB115:
 322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Initialization Vectors(IV) according to the
 324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         specified parameters in the CRYP_IVInitStruct.
 325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef structure that contains
 326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP Initialization Vectors(IV).
 327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 24926              		.loc 1 330 0
 24927              		.cfi_startproc
 24928              		@ args = 0, pretend = 0, frame = 8
 24929              		@ frame_needed = 1, uses_anonymous_args = 0
 24930              		@ link register save eliminated.
 24931 0000 80B4     		push	{r7}
 24932              	.LCFI14:
 24933              		.cfi_def_cfa_offset 4
 24934 0002 83B0     		sub	sp, sp, #12
 24935              	.LCFI15:
 24936              		.cfi_def_cfa_offset 16
 24937 0004 00AF     		add	r7, sp, #0
 24938              		.cfi_offset 7, -4
 24939              	.LCFI16:
 24940              		.cfi_def_cfa_register 7
 24941 0006 7860     		str	r0, [r7, #4]
 331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_IVInitStruct->CRYP_IV0Left;
 24942              		.loc 1 331 0
 24943 0008 0A4B     		ldr	r3, .L13
 24944 000a 7A68     		ldr	r2, [r7, #4]
 24945 000c 1268     		ldr	r2, [r2, #0]
 24946 000e 1A64     		str	r2, [r3, #64]
 332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_IVInitStruct->CRYP_IV0Right;
 24947              		.loc 1 332 0
 24948 0010 084B     		ldr	r3, .L13
 24949 0012 7A68     		ldr	r2, [r7, #4]
 24950 0014 5268     		ldr	r2, [r2, #4]
 24951 0016 5A64     		str	r2, [r3, #68]
 333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_IVInitStruct->CRYP_IV1Left;
 24952              		.loc 1 333 0
 24953 0018 064B     		ldr	r3, .L13
 24954 001a 7A68     		ldr	r2, [r7, #4]
 24955 001c 9268     		ldr	r2, [r2, #8]
 24956 001e 9A64     		str	r2, [r3, #72]
 334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_IVInitStruct->CRYP_IV1Right;
 24957              		.loc 1 334 0
 24958 0020 044B     		ldr	r3, .L13
 24959 0022 7A68     		ldr	r2, [r7, #4]
 24960 0024 D268     		ldr	r2, [r2, #12]
 24961 0026 DA64     		str	r2, [r3, #76]
 335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 24962              		.loc 1 335 0
 24963 0028 07F10C07 		add	r7, r7, #12
 24964 002c BD46     		mov	sp, r7
 24965 002e 80BC     		pop	{r7}
 24966 0030 7047     		bx	lr
 24967              	.L14:
 24968 0032 00BF     		.align	2
 24969              	.L13:
 24970 0034 00000650 		.word	1342570496
 24971              		.cfi_endproc
 24972              	.LFE115:
 24974              		.section	.text.CRYP_IVStructInit,"ax",%progbits
 24975              		.align	2
 24976              		.global	CRYP_IVStructInit
 24977              		.thumb
 24978              		.thumb_func
 24980              	CRYP_IVStructInit:
 24981              	.LFB116:
 336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_IVInitStruct member with its default value.
 339:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef Initialization 
 340:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         Vectors(IV) structure which will be initialized.
 341:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 342:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 343:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 344:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 24982              		.loc 1 344 0
 24983              		.cfi_startproc
 24984              		@ args = 0, pretend = 0, frame = 8
 24985              		@ frame_needed = 1, uses_anonymous_args = 0
 24986              		@ link register save eliminated.
 24987 0000 80B4     		push	{r7}
 24988              	.LCFI17:
 24989              		.cfi_def_cfa_offset 4
 24990 0002 83B0     		sub	sp, sp, #12
 24991              	.LCFI18:
 24992              		.cfi_def_cfa_offset 16
 24993 0004 00AF     		add	r7, sp, #0
 24994              		.cfi_offset 7, -4
 24995              	.LCFI19:
 24996              		.cfi_def_cfa_register 7
 24997 0006 7860     		str	r0, [r7, #4]
 345:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Left  = 0;
 24998              		.loc 1 345 0
 24999 0008 7B68     		ldr	r3, [r7, #4]
 25000 000a 4FF00002 		mov	r2, #0
 25001 000e 1A60     		str	r2, [r3, #0]
 346:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Right = 0;
 25002              		.loc 1 346 0
 25003 0010 7B68     		ldr	r3, [r7, #4]
 25004 0012 4FF00002 		mov	r2, #0
 25005 0016 5A60     		str	r2, [r3, #4]
 347:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Left  = 0;
 25006              		.loc 1 347 0
 25007 0018 7B68     		ldr	r3, [r7, #4]
 25008 001a 4FF00002 		mov	r2, #0
 25009 001e 9A60     		str	r2, [r3, #8]
 348:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Right = 0;
 25010              		.loc 1 348 0
 25011 0020 7B68     		ldr	r3, [r7, #4]
 25012 0022 4FF00002 		mov	r2, #0
 25013 0026 DA60     		str	r2, [r3, #12]
 349:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25014              		.loc 1 349 0
 25015 0028 07F10C07 		add	r7, r7, #12
 25016 002c BD46     		mov	sp, r7
 25017 002e 80BC     		pop	{r7}
 25018 0030 7047     		bx	lr
 25019              		.cfi_endproc
 25020              	.LFE116:
 25022 0032 00BF     		.section	.text.CRYP_FIFOFlush,"ax",%progbits
 25023              		.align	2
 25024              		.global	CRYP_FIFOFlush
 25025              		.thumb
 25026              		.thumb_func
 25028              	CRYP_FIFOFlush:
 25029              	.LFB117:
 350:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 351:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 352:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
 353:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         FIFOs are reset)
 354:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The FIFOs must be flushed only when BUSY flag is reset.  
 355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 357:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 358:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_FIFOFlush(void)
 359:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25030              		.loc 1 359 0
 25031              		.cfi_startproc
 25032              		@ args = 0, pretend = 0, frame = 0
 25033              		@ frame_needed = 1, uses_anonymous_args = 0
 25034              		@ link register save eliminated.
 25035 0000 80B4     		push	{r7}
 25036              	.LCFI20:
 25037              		.cfi_def_cfa_offset 4
 25038 0002 00AF     		add	r7, sp, #0
 25039              		.cfi_offset 7, -4
 25040              	.LCFI21:
 25041              		.cfi_def_cfa_register 7
 360:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Reset the read and write pointers of the FIFOs */
 361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_FFLUSH;
 25042              		.loc 1 361 0
 25043 0004 044B     		ldr	r3, .L17
 25044 0006 044A     		ldr	r2, .L17
 25045 0008 1268     		ldr	r2, [r2, #0]
 25046 000a 42F48042 		orr	r2, r2, #16384
 25047 000e 1A60     		str	r2, [r3, #0]
 362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25048              		.loc 1 362 0
 25049 0010 BD46     		mov	sp, r7
 25050 0012 80BC     		pop	{r7}
 25051 0014 7047     		bx	lr
 25052              	.L18:
 25053 0016 00BF     		.align	2
 25054              	.L17:
 25055 0018 00000650 		.word	1342570496
 25056              		.cfi_endproc
 25057              	.LFE117:
 25059              		.section	.text.CRYP_Cmd,"ax",%progbits
 25060              		.align	2
 25061              		.global	CRYP_Cmd
 25062              		.thumb
 25063              		.thumb_func
 25065              	CRYP_Cmd:
 25066              	.LFB118:
 363:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 364:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 365:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP peripheral.
 366:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the CRYP peripheral.
 367:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 368:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 369:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 370:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Cmd(FunctionalState NewState)
 371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25067              		.loc 1 371 0
 25068              		.cfi_startproc
 25069              		@ args = 0, pretend = 0, frame = 8
 25070              		@ frame_needed = 1, uses_anonymous_args = 0
 25071              		@ link register save eliminated.
 25072 0000 80B4     		push	{r7}
 25073              	.LCFI22:
 25074              		.cfi_def_cfa_offset 4
 25075 0002 83B0     		sub	sp, sp, #12
 25076              	.LCFI23:
 25077              		.cfi_def_cfa_offset 16
 25078 0004 00AF     		add	r7, sp, #0
 25079              		.cfi_offset 7, -4
 25080              	.LCFI24:
 25081              		.cfi_def_cfa_register 7
 25082 0006 0346     		mov	r3, r0
 25083 0008 FB71     		strb	r3, [r7, #7]
 372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 373:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 374:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 25084              		.loc 1 375 0
 25085 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25086 000c 002B     		cmp	r3, #0
 25087 000e 06D0     		beq	.L20
 376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 377:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the Cryptographic processor */
 378:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_CR_CRYPEN;
 25088              		.loc 1 378 0
 25089 0010 084B     		ldr	r3, .L22
 25090 0012 084A     		ldr	r2, .L22
 25091 0014 1268     		ldr	r2, [r2, #0]
 25092 0016 42F40042 		orr	r2, r2, #32768
 25093 001a 1A60     		str	r2, [r3, #0]
 25094 001c 05E0     		b	.L19
 25095              	.L20:
 379:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 380:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 381:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 382:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the Cryptographic processor */
 383:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_CRYPEN;
 25096              		.loc 1 383 0
 25097 001e 054B     		ldr	r3, .L22
 25098 0020 044A     		ldr	r2, .L22
 25099 0022 1268     		ldr	r2, [r2, #0]
 25100 0024 22F40042 		bic	r2, r2, #32768
 25101 0028 1A60     		str	r2, [r3, #0]
 25102              	.L19:
 384:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 385:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25103              		.loc 1 385 0
 25104 002a 07F10C07 		add	r7, r7, #12
 25105 002e BD46     		mov	sp, r7
 25106 0030 80BC     		pop	{r7}
 25107 0032 7047     		bx	lr
 25108              	.L23:
 25109              		.align	2
 25110              	.L22:
 25111 0034 00000650 		.word	1342570496
 25112              		.cfi_endproc
 25113              	.LFE118:
 25115              		.section	.text.CRYP_DataIn,"ax",%progbits
 25116              		.align	2
 25117              		.global	CRYP_DataIn
 25118              		.thumb
 25119              		.thumb_func
 25121              	CRYP_DataIn:
 25122              	.LFB119:
 386:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 387:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 388:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 389:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 390:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group2 CRYP Data processing functions
 391:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    CRYP Data processing functions
 392:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 393:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 394:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 395:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP Data processing functions
 396:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing the encryption and decryption 
 398:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   operations: 
 399:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Enter data to be treated in the IN FIFO : using CRYP_DataIn() function.
 400:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Get the data result from the OUT FIFO : using CRYP_DataOut() function.
 401:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 402:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 403:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 404:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 405:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 406:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 407:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Writes data in the Data Input register (DIN).
 408:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   After the DIN register has been read once or several times, 
 409:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
 410:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  Data: data to write in Data Input register
 411:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 412:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 413:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DataIn(uint32_t Data)
 414:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25123              		.loc 1 414 0
 25124              		.cfi_startproc
 25125              		@ args = 0, pretend = 0, frame = 8
 25126              		@ frame_needed = 1, uses_anonymous_args = 0
 25127              		@ link register save eliminated.
 25128 0000 80B4     		push	{r7}
 25129              	.LCFI25:
 25130              		.cfi_def_cfa_offset 4
 25131 0002 83B0     		sub	sp, sp, #12
 25132              	.LCFI26:
 25133              		.cfi_def_cfa_offset 16
 25134 0004 00AF     		add	r7, sp, #0
 25135              		.cfi_offset 7, -4
 25136              	.LCFI27:
 25137              		.cfi_def_cfa_register 7
 25138 0006 7860     		str	r0, [r7, #4]
 415:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DR = Data;
 25139              		.loc 1 415 0
 25140 0008 034B     		ldr	r3, .L25
 25141 000a 7A68     		ldr	r2, [r7, #4]
 25142 000c 9A60     		str	r2, [r3, #8]
 416:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25143              		.loc 1 416 0
 25144 000e 07F10C07 		add	r7, r7, #12
 25145 0012 BD46     		mov	sp, r7
 25146 0014 80BC     		pop	{r7}
 25147 0016 7047     		bx	lr
 25148              	.L26:
 25149              		.align	2
 25150              	.L25:
 25151 0018 00000650 		.word	1342570496
 25152              		.cfi_endproc
 25153              	.LFE119:
 25155              		.section	.text.CRYP_DataOut,"ax",%progbits
 25156              		.align	2
 25157              		.global	CRYP_DataOut
 25158              		.thumb
 25159              		.thumb_func
 25161              	CRYP_DataOut:
 25162              	.LFB120:
 417:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 418:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 419:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Returns the last data entered into the output FIFO.
 420:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 421:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval Last data entered into the output FIFO.
 422:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 423:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** uint32_t CRYP_DataOut(void)
 424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25163              		.loc 1 424 0
 25164              		.cfi_startproc
 25165              		@ args = 0, pretend = 0, frame = 0
 25166              		@ frame_needed = 1, uses_anonymous_args = 0
 25167              		@ link register save eliminated.
 25168 0000 80B4     		push	{r7}
 25169              	.LCFI28:
 25170              		.cfi_def_cfa_offset 4
 25171 0002 00AF     		add	r7, sp, #0
 25172              		.cfi_offset 7, -4
 25173              	.LCFI29:
 25174              		.cfi_def_cfa_register 7
 425:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return CRYP->DOUT;
 25175              		.loc 1 425 0
 25176 0004 024B     		ldr	r3, .L28
 25177 0006 DB68     		ldr	r3, [r3, #12]
 426:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25178              		.loc 1 426 0
 25179 0008 1846     		mov	r0, r3
 25180 000a BD46     		mov	sp, r7
 25181 000c 80BC     		pop	{r7}
 25182 000e 7047     		bx	lr
 25183              	.L29:
 25184              		.align	2
 25185              	.L28:
 25186 0010 00000650 		.word	1342570496
 25187              		.cfi_endproc
 25188              	.LFE120:
 25190              		.section	.text.CRYP_SaveContext,"ax",%progbits
 25191              		.align	2
 25192              		.global	CRYP_SaveContext
 25193              		.thumb
 25194              		.thumb_func
 25196              	CRYP_SaveContext:
 25197              	.LFB121:
 427:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 428:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 429:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 430:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 431:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group3 Context swapping functions
 432:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Context swapping functions
 433:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 434:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 435:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 436:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              Context swapping functions
 437:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 438:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 439:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to save and store CRYP Context
 440:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 441:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   It is possible to interrupt an encryption/ decryption/ key generation process 
 442:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to perform another processing with a higher priority, and to complete the 
 443:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   interrupted process later on, when the higher-priority task is complete. To do 
 444:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   so, the context of the interrupted task must be saved from the CRYP registers 
 445:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to memory, and then be restored from memory to the CRYP registers.
 446:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 447:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1. To save the current context, use CRYP_SaveContext() function
 448:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2. To restore the saved context, use CRYP_RestoreContext() function 
 449:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 450:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 451:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 452:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 453:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 454:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 455:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 456:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Saves the CRYP peripheral Context. 
 457:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function stops DMA transfer before to save the context. After 
 458:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         restoring the context, you have to enable the DMA again (if the DMA
 459:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         was previously used).
 460:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextSave: pointer to a CRYP_Context structure that contains
 461:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for current context.
 462:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that 
 463:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.  
 464:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 465:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 466:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ErrorStatus CRYP_SaveContext(CRYP_Context* CRYP_ContextSave,
 467:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 468:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25198              		.loc 1 468 0
 25199              		.cfi_startproc
 25200              		@ args = 0, pretend = 0, frame = 24
 25201              		@ frame_needed = 1, uses_anonymous_args = 0
 25202              		@ link register save eliminated.
 25203 0000 80B4     		push	{r7}
 25204              	.LCFI30:
 25205              		.cfi_def_cfa_offset 4
 25206 0002 87B0     		sub	sp, sp, #28
 25207              	.LCFI31:
 25208              		.cfi_def_cfa_offset 32
 25209 0004 00AF     		add	r7, sp, #0
 25210              		.cfi_offset 7, -4
 25211              	.LCFI32:
 25212              		.cfi_def_cfa_register 7
 25213 0006 7860     		str	r0, [r7, #4]
 25214 0008 3960     		str	r1, [r7, #0]
 469:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   __IO uint32_t timeout = 0;
 25215              		.loc 1 469 0
 25216 000a 4FF00003 		mov	r3, #0
 25217 000e BB60     		str	r3, [r7, #8]
 470:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t ckeckmask = 0, bitstatus;    
 25218              		.loc 1 470 0
 25219 0010 4FF00003 		mov	r3, #0
 25220 0014 7B61     		str	r3, [r7, #20]
 471:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ErrorStatus status = ERROR;
 25221              		.loc 1 471 0
 25222 0016 4FF00003 		mov	r3, #0
 25223 001a FB74     		strb	r3, [r7, #19]
 472:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 473:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Stop DMA transfers on the IN FIFO by clearing the DIEN bit in the CRYP_DMACR */
 474:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DIEN;
 25224              		.loc 1 474 0
 25225 001c 3D4B     		ldr	r3, .L36
 25226 001e 3D4A     		ldr	r2, .L36
 25227 0020 1269     		ldr	r2, [r2, #16]
 25228 0022 22F00102 		bic	r2, r2, #1
 25229 0026 1A61     		str	r2, [r3, #16]
 475:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 476:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Wait until both the IN and OUT FIFOs are empty  
 477:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (IFEM=1 and OFNE=0 in the CRYP_SR register) and the 
 478:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      BUSY bit is cleared. */
 479:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 480:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->CR & (uint32_t)(CRYP_CR_ALGOMODE_TDES_ECB | CRYP_CR_ALGOMODE_TDES_CBC)) != (uint32_t)0
 25230              		.loc 1 480 0
 25231 0028 3A4B     		ldr	r3, .L36
 25232 002a 1B68     		ldr	r3, [r3, #0]
 25233 002c 03F00803 		and	r3, r3, #8
 25234 0030 002B     		cmp	r3, #0
 25235 0032 03D0     		beq	.L31
 481:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   { 
 482:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY ;
 25236              		.loc 1 482 0
 25237 0034 4FF01103 		mov	r3, #17
 25238 0038 7B61     		str	r3, [r7, #20]
 25239 003a 02E0     		b	.L32
 25240              	.L31:
 483:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 484:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else /* AES or DES */
 485:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 486:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY | CRYP_SR_OFNE;
 25241              		.loc 1 486 0
 25242 003c 4FF01503 		mov	r3, #21
 25243 0040 7B61     		str	r3, [r7, #20]
 25244              	.L32:
 487:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }           
 488:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 489:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   do 
 490:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 491:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = CRYP->SR & ckeckmask;
 25245              		.loc 1 491 0 discriminator 1
 25246 0042 344B     		ldr	r3, .L36
 25247 0044 5A68     		ldr	r2, [r3, #4]
 25248 0046 7B69     		ldr	r3, [r7, #20]
 25249 0048 02EA0303 		and	r3, r2, r3
 25250 004c FB60     		str	r3, [r7, #12]
 492:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 25251              		.loc 1 492 0 discriminator 1
 25252 004e BB68     		ldr	r3, [r7, #8]
 25253 0050 03F10103 		add	r3, r3, #1
 25254 0054 BB60     		str	r3, [r7, #8]
 493:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 494:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   while ((timeout != MAX_TIMEOUT) && (bitstatus != CRYP_SR_IFEM));
 25255              		.loc 1 494 0 discriminator 1
 25256 0056 BA68     		ldr	r2, [r7, #8]
 25257 0058 4FF6FF73 		movw	r3, #65535
 25258 005c 9A42     		cmp	r2, r3
 25259 005e 02D0     		beq	.L33
 25260 0060 FB68     		ldr	r3, [r7, #12]
 25261 0062 012B     		cmp	r3, #1
 25262 0064 EDD1     		bne	.L32
 25263              	.L33:
 495:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 496:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->SR & ckeckmask) != CRYP_SR_IFEM)
 25264              		.loc 1 496 0
 25265 0066 2B4B     		ldr	r3, .L36
 25266 0068 5A68     		ldr	r2, [r3, #4]
 25267 006a 7B69     		ldr	r3, [r7, #20]
 25268 006c 02EA0303 		and	r3, r2, r3
 25269 0070 012B     		cmp	r3, #1
 25270 0072 03D0     		beq	.L34
 497:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 498:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = ERROR;
 25271              		.loc 1 498 0
 25272 0074 4FF00003 		mov	r3, #0
 25273 0078 FB74     		strb	r3, [r7, #19]
 25274 007a 44E0     		b	.L35
 25275              	.L34:
 499:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 500:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 501:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {      
 502:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Stop DMA transfers on the OUT FIFO by 
 503:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - writing the DOEN bit to 0 in the CRYP_DMACR register 
 504:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - and clear the CRYPEN bit. */
 505:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 506:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DOEN;
 25276              		.loc 1 506 0
 25277 007c 254B     		ldr	r3, .L36
 25278 007e 254A     		ldr	r2, .L36
 25279 0080 1269     		ldr	r2, [r2, #16]
 25280 0082 22F00202 		bic	r2, r2, #2
 25281 0086 1A61     		str	r2, [r3, #16]
 507:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 25282              		.loc 1 507 0
 25283 0088 224B     		ldr	r3, .L36
 25284 008a 224A     		ldr	r2, .L36
 25285 008c 1268     		ldr	r2, [r2, #0]
 25286 008e 22F40042 		bic	r2, r2, #32768
 25287 0092 1A60     		str	r2, [r3, #0]
 508:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 509:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Save the current configuration (bits [9:2] in the CRYP_CR register) */
 510:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CR_bits9to2  = CRYP->CR & (CRYP_CR_KEYSIZE  | 
 25288              		.loc 1 510 0
 25289 0094 1F4B     		ldr	r3, .L36
 25290 0096 1B68     		ldr	r3, [r3, #0]
 25291 0098 03F47F72 		and	r2, r3, #1020
 25292 009c 7B68     		ldr	r3, [r7, #4]
 25293 009e 1A60     		str	r2, [r3, #0]
 511:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_DATATYPE | 
 512:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGOMODE |
 513:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGODIR); 
 514:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 515:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* and, if not in ECB mode, the initialization vectors. */
 516:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0LR = CRYP->IV0LR;
 25294              		.loc 1 516 0
 25295 00a0 1C4B     		ldr	r3, .L36
 25296 00a2 1A6C     		ldr	r2, [r3, #64]
 25297 00a4 7B68     		ldr	r3, [r7, #4]
 25298 00a6 5A60     		str	r2, [r3, #4]
 517:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 25299              		.loc 1 517 0
 25300 00a8 1A4B     		ldr	r3, .L36
 25301 00aa 5A6C     		ldr	r2, [r3, #68]
 25302 00ac 7B68     		ldr	r3, [r7, #4]
 25303 00ae 9A60     		str	r2, [r3, #8]
 518:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 25304              		.loc 1 518 0
 25305 00b0 184B     		ldr	r3, .L36
 25306 00b2 9A6C     		ldr	r2, [r3, #72]
 25307 00b4 7B68     		ldr	r3, [r7, #4]
 25308 00b6 DA60     		str	r2, [r3, #12]
 519:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 25309              		.loc 1 519 0
 25310 00b8 164B     		ldr	r3, .L36
 25311 00ba DA6C     		ldr	r2, [r3, #76]
 25312 00bc 7B68     		ldr	r3, [r7, #4]
 25313 00be 1A61     		str	r2, [r3, #16]
 520:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 521:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* save The key value */
 522:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0LR = CRYP_KeyInitStruct->CRYP_Key0Left; 
 25314              		.loc 1 522 0
 25315 00c0 3B68     		ldr	r3, [r7, #0]
 25316 00c2 1A68     		ldr	r2, [r3, #0]
 25317 00c4 7B68     		ldr	r3, [r7, #4]
 25318 00c6 5A61     		str	r2, [r3, #20]
 523:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 25319              		.loc 1 523 0
 25320 00c8 3B68     		ldr	r3, [r7, #0]
 25321 00ca 5A68     		ldr	r2, [r3, #4]
 25322 00cc 7B68     		ldr	r3, [r7, #4]
 25323 00ce 9A61     		str	r2, [r3, #24]
 524:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 25324              		.loc 1 524 0
 25325 00d0 3B68     		ldr	r3, [r7, #0]
 25326 00d2 9A68     		ldr	r2, [r3, #8]
 25327 00d4 7B68     		ldr	r3, [r7, #4]
 25328 00d6 DA61     		str	r2, [r3, #28]
 525:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 25329              		.loc 1 525 0
 25330 00d8 3B68     		ldr	r3, [r7, #0]
 25331 00da DA68     		ldr	r2, [r3, #12]
 25332 00dc 7B68     		ldr	r3, [r7, #4]
 25333 00de 1A62     		str	r2, [r3, #32]
 526:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 25334              		.loc 1 526 0
 25335 00e0 3B68     		ldr	r3, [r7, #0]
 25336 00e2 1A69     		ldr	r2, [r3, #16]
 25337 00e4 7B68     		ldr	r3, [r7, #4]
 25338 00e6 5A62     		str	r2, [r3, #36]
 527:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 25339              		.loc 1 527 0
 25340 00e8 3B68     		ldr	r3, [r7, #0]
 25341 00ea 5A69     		ldr	r2, [r3, #20]
 25342 00ec 7B68     		ldr	r3, [r7, #4]
 25343 00ee 9A62     		str	r2, [r3, #40]
 528:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 25344              		.loc 1 528 0
 25345 00f0 3B68     		ldr	r3, [r7, #0]
 25346 00f2 9A69     		ldr	r2, [r3, #24]
 25347 00f4 7B68     		ldr	r3, [r7, #4]
 25348 00f6 DA62     		str	r2, [r3, #44]
 529:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 25349              		.loc 1 529 0
 25350 00f8 3B68     		ldr	r3, [r7, #0]
 25351 00fa DA69     		ldr	r2, [r3, #28]
 25352 00fc 7B68     		ldr	r3, [r7, #4]
 25353 00fe 1A63     		str	r2, [r3, #48]
 530:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 531:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    /* When needed, save the DMA status (pointers for IN and OUT messages, 
 532:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       number of remaining bytes, etc.) */
 533:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 534:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = SUCCESS;
 25354              		.loc 1 534 0
 25355 0100 4FF00103 		mov	r3, #1
 25356 0104 FB74     		strb	r3, [r7, #19]
 25357              	.L35:
 535:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 536:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 537:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    return status;
 25358              		.loc 1 537 0
 25359 0106 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 538:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25360              		.loc 1 538 0
 25361 0108 1846     		mov	r0, r3
 25362 010a 07F11C07 		add	r7, r7, #28
 25363 010e BD46     		mov	sp, r7
 25364 0110 80BC     		pop	{r7}
 25365 0112 7047     		bx	lr
 25366              	.L37:
 25367              		.align	2
 25368              	.L36:
 25369 0114 00000650 		.word	1342570496
 25370              		.cfi_endproc
 25371              	.LFE121:
 25373              		.section	.text.CRYP_RestoreContext,"ax",%progbits
 25374              		.align	2
 25375              		.global	CRYP_RestoreContext
 25376              		.thumb
 25377              		.thumb_func
 25379              	CRYP_RestoreContext:
 25380              	.LFB122:
 539:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 540:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 541:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Restores the CRYP peripheral Context.
 542:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   Since teh DMA transfer is stopped in CRYP_SaveContext() function,
 543:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         after restoring the context, you have to enable the DMA again (if the
 544:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         DMA was previously used).  
 545:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextRestore: pointer to a CRYP_Context structure that contains
 546:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for saved context.
 547:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The data that were saved during context saving must be rewrited into
 548:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the IN FIFO.
 549:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 550:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 551:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_RestoreContext(CRYP_Context* CRYP_ContextRestore)  
 552:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25381              		.loc 1 552 0
 25382              		.cfi_startproc
 25383              		@ args = 0, pretend = 0, frame = 8
 25384              		@ frame_needed = 1, uses_anonymous_args = 0
 25385              		@ link register save eliminated.
 25386 0000 80B4     		push	{r7}
 25387              	.LCFI33:
 25388              		.cfi_def_cfa_offset 4
 25389 0002 83B0     		sub	sp, sp, #12
 25390              	.LCFI34:
 25391              		.cfi_def_cfa_offset 16
 25392 0004 00AF     		add	r7, sp, #0
 25393              		.cfi_offset 7, -4
 25394              	.LCFI35:
 25395              		.cfi_def_cfa_register 7
 25396 0006 7860     		str	r0, [r7, #4]
 553:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 554:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Configure the processor with the saved configuration */
 555:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR = CRYP_ContextRestore->CR_bits9to2;
 25397              		.loc 1 555 0
 25398 0008 1F4B     		ldr	r3, .L39
 25399 000a 7A68     		ldr	r2, [r7, #4]
 25400 000c 1268     		ldr	r2, [r2, #0]
 25401 000e 1A60     		str	r2, [r3, #0]
 556:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 557:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* restore The key value */
 558:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_ContextRestore->CRYP_K0LR; 
 25402              		.loc 1 558 0
 25403 0010 1D4B     		ldr	r3, .L39
 25404 0012 7A68     		ldr	r2, [r7, #4]
 25405 0014 5269     		ldr	r2, [r2, #20]
 25406 0016 1A62     		str	r2, [r3, #32]
 559:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_ContextRestore->CRYP_K0RR;
 25407              		.loc 1 559 0
 25408 0018 1B4B     		ldr	r3, .L39
 25409 001a 7A68     		ldr	r2, [r7, #4]
 25410 001c 9269     		ldr	r2, [r2, #24]
 25411 001e 5A62     		str	r2, [r3, #36]
 560:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_ContextRestore->CRYP_K1LR;
 25412              		.loc 1 560 0
 25413 0020 194B     		ldr	r3, .L39
 25414 0022 7A68     		ldr	r2, [r7, #4]
 25415 0024 D269     		ldr	r2, [r2, #28]
 25416 0026 9A62     		str	r2, [r3, #40]
 561:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_ContextRestore->CRYP_K1RR;
 25417              		.loc 1 561 0
 25418 0028 174B     		ldr	r3, .L39
 25419 002a 7A68     		ldr	r2, [r7, #4]
 25420 002c 126A     		ldr	r2, [r2, #32]
 25421 002e DA62     		str	r2, [r3, #44]
 562:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_ContextRestore->CRYP_K2LR;
 25422              		.loc 1 562 0
 25423 0030 154B     		ldr	r3, .L39
 25424 0032 7A68     		ldr	r2, [r7, #4]
 25425 0034 526A     		ldr	r2, [r2, #36]
 25426 0036 1A63     		str	r2, [r3, #48]
 563:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_ContextRestore->CRYP_K2RR;
 25427              		.loc 1 563 0
 25428 0038 134B     		ldr	r3, .L39
 25429 003a 7A68     		ldr	r2, [r7, #4]
 25430 003c 926A     		ldr	r2, [r2, #40]
 25431 003e 5A63     		str	r2, [r3, #52]
 564:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_ContextRestore->CRYP_K3LR;
 25432              		.loc 1 564 0
 25433 0040 114B     		ldr	r3, .L39
 25434 0042 7A68     		ldr	r2, [r7, #4]
 25435 0044 D26A     		ldr	r2, [r2, #44]
 25436 0046 9A63     		str	r2, [r3, #56]
 565:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_ContextRestore->CRYP_K3RR;
 25437              		.loc 1 565 0
 25438 0048 0F4B     		ldr	r3, .L39
 25439 004a 7A68     		ldr	r2, [r7, #4]
 25440 004c 126B     		ldr	r2, [r2, #48]
 25441 004e DA63     		str	r2, [r3, #60]
 566:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 567:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* and the initialization vectors. */
 568:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_ContextRestore->CRYP_IV0LR;
 25442              		.loc 1 568 0
 25443 0050 0D4B     		ldr	r3, .L39
 25444 0052 7A68     		ldr	r2, [r7, #4]
 25445 0054 5268     		ldr	r2, [r2, #4]
 25446 0056 1A64     		str	r2, [r3, #64]
 569:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_ContextRestore->CRYP_IV0RR;
 25447              		.loc 1 569 0
 25448 0058 0B4B     		ldr	r3, .L39
 25449 005a 7A68     		ldr	r2, [r7, #4]
 25450 005c 9268     		ldr	r2, [r2, #8]
 25451 005e 5A64     		str	r2, [r3, #68]
 570:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_ContextRestore->CRYP_IV1LR;
 25452              		.loc 1 570 0
 25453 0060 094B     		ldr	r3, .L39
 25454 0062 7A68     		ldr	r2, [r7, #4]
 25455 0064 D268     		ldr	r2, [r2, #12]
 25456 0066 9A64     		str	r2, [r3, #72]
 571:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_ContextRestore->CRYP_IV1RR;
 25457              		.loc 1 571 0
 25458 0068 074B     		ldr	r3, .L39
 25459 006a 7A68     		ldr	r2, [r7, #4]
 25460 006c 1269     		ldr	r2, [r2, #16]
 25461 006e DA64     		str	r2, [r3, #76]
 572:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 573:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable the cryptographic processor */
 574:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_CRYPEN;
 25462              		.loc 1 574 0
 25463 0070 054B     		ldr	r3, .L39
 25464 0072 054A     		ldr	r2, .L39
 25465 0074 1268     		ldr	r2, [r2, #0]
 25466 0076 42F40042 		orr	r2, r2, #32768
 25467 007a 1A60     		str	r2, [r3, #0]
 575:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25468              		.loc 1 575 0
 25469 007c 07F10C07 		add	r7, r7, #12
 25470 0080 BD46     		mov	sp, r7
 25471 0082 80BC     		pop	{r7}
 25472 0084 7047     		bx	lr
 25473              	.L40:
 25474 0086 00BF     		.align	2
 25475              	.L39:
 25476 0088 00000650 		.word	1342570496
 25477              		.cfi_endproc
 25478              	.LFE122:
 25480              		.section	.text.CRYP_DMACmd,"ax",%progbits
 25481              		.align	2
 25482              		.global	CRYP_DMACmd
 25483              		.thumb
 25484              		.thumb_func
 25486              	CRYP_DMACmd:
 25487              	.LFB123:
 576:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 577:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 578:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 579:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 580:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group4 CRYP's DMA interface Configuration function
 581:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   CRYP's DMA interface Configuration function 
 582:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 583:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 584:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 585:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    CRYP's DMA interface Configuration function
 586:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 587:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 588:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the DMA interface for 
 589:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP data input and output transfer.
 590:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 591:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   When the DMA mode is enabled (using the CRYP_DMACmd() function), data can be 
 592:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   transferred:
 593:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From memory to the CRYP IN FIFO using the DMA peripheral by enabling 
 594:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataIN request.
 595:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From the CRYP OUT FIFO to the memory using the DMA peripheral by enabling 
 596:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataOUT request.
 597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 598:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 599:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 600:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 601:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 602:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 603:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP DMA interface.
 604:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_DMAReq: specifies the CRYP DMA transfer request to be enabled or disabled.
 605:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be any combination of the following values:
 606:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataOUT: DMA for outgoing(Tx) data transfer
 607:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataIN: DMA for incoming(Rx) data transfer
 608:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the selected CRYP DMA transfer request.
 609:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 610:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 611:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 612:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DMACmd(uint8_t CRYP_DMAReq, FunctionalState NewState)
 613:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25488              		.loc 1 613 0
 25489              		.cfi_startproc
 25490              		@ args = 0, pretend = 0, frame = 8
 25491              		@ frame_needed = 1, uses_anonymous_args = 0
 25492              		@ link register save eliminated.
 25493 0000 80B4     		push	{r7}
 25494              	.LCFI36:
 25495              		.cfi_def_cfa_offset 4
 25496 0002 83B0     		sub	sp, sp, #12
 25497              	.LCFI37:
 25498              		.cfi_def_cfa_offset 16
 25499 0004 00AF     		add	r7, sp, #0
 25500              		.cfi_offset 7, -4
 25501              	.LCFI38:
 25502              		.cfi_def_cfa_register 7
 25503 0006 0246     		mov	r2, r0
 25504 0008 0B46     		mov	r3, r1
 25505 000a FA71     		strb	r2, [r7, #7]
 25506 000c BB71     		strb	r3, [r7, #6]
 614:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 615:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DMAREQ(CRYP_DMAReq));
 616:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 617:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 618:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 25507              		.loc 1 618 0
 25508 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25509 0010 002B     		cmp	r3, #0
 25510 0012 07D0     		beq	.L42
 619:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 620:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP DMA request */
 621:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR |= CRYP_DMAReq;
 25511              		.loc 1 621 0
 25512 0014 0B4B     		ldr	r3, .L44
 25513 0016 0B4A     		ldr	r2, .L44
 25514 0018 1169     		ldr	r1, [r2, #16]
 25515 001a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25516 001c 41EA0202 		orr	r2, r1, r2
 25517 0020 1A61     		str	r2, [r3, #16]
 25518 0022 09E0     		b	.L41
 25519              	.L42:
 622:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 623:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 624:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 625:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP DMA request */
 626:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= (uint8_t)~CRYP_DMAReq;
 25520              		.loc 1 626 0
 25521 0024 074B     		ldr	r3, .L44
 25522 0026 074A     		ldr	r2, .L44
 25523 0028 1169     		ldr	r1, [r2, #16]
 25524 002a FA79     		ldrb	r2, [r7, #7]
 25525 002c 6FEA0202 		mvn	r2, r2
 25526 0030 D2B2     		uxtb	r2, r2
 25527 0032 01EA0202 		and	r2, r1, r2
 25528 0036 1A61     		str	r2, [r3, #16]
 25529              	.L41:
 627:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 628:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25530              		.loc 1 628 0
 25531 0038 07F10C07 		add	r7, r7, #12
 25532 003c BD46     		mov	sp, r7
 25533 003e 80BC     		pop	{r7}
 25534 0040 7047     		bx	lr
 25535              	.L45:
 25536 0042 00BF     		.align	2
 25537              	.L44:
 25538 0044 00000650 		.word	1342570496
 25539              		.cfi_endproc
 25540              	.LFE123:
 25542              		.section	.text.CRYP_ITConfig,"ax",%progbits
 25543              		.align	2
 25544              		.global	CRYP_ITConfig
 25545              		.thumb
 25546              		.thumb_func
 25548              	CRYP_ITConfig:
 25549              	.LFB124:
 629:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 630:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 631:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 632:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 633:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group5 Interrupts and flags management functions
 634:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Interrupts and flags management functions
 635:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 636:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 637:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 638:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    Interrupts and flags management functions
 639:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 640:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 641:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the CRYP Interrupts and 
 642:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to get the status and Interrupts pending bits.
 643:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 644:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The CRYP provides 2 Interrupts sources and 7 Flags:
 645:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 646:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Flags :
 647:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------- 
 648:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           
 649:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      1. CRYP_FLAG_IFEM :  Set when Input FIFO is empty.
 650:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 651:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       
 652:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      2. CRYP_FLAG_IFNF :  Set when Input FIFO is not full.
 653:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 654:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 655:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 656:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      3. CRYP_FLAG_INRIS  : Set when Input FIFO Raw interrupt is pending 
 657:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 658:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the input FIFO service interrupt.
 659:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 660:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 661:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      4. CRYP_FLAG_OFNE   : Set when Output FIFO not empty.
 662:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 663:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         
 664:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      5. CRYP_FLAG_OFFU   : Set when Output FIFO is full.
 665:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 666:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            
 667:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      6. CRYP_FLAG_OUTRIS : Set when Output FIFO Raw interrupt is pending 
 668:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 669:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the output FIFO service interrupt.
 670:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 671:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                
 672:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      7. CRYP_FLAG_BUSY   : Set when the CRYP core is currently processing a 
 673:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            block of data or a key preparation (for AES 
 674:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            decryption).
 675:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 676:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            To clear it, the CRYP core must be disabled and the 
 677:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            last processing has completed. 
 678:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 679:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Interrupts :
 680:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------
 681:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 682:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    1. CRYP_IT_INI   : The input FIFO service interrupt is asserted when there 
 683:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       are less than 4 words in the input FIFO.
 684:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_INRIS flag.
 685:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 686:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by performing write operations 
 687:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       to the input FIFO until it holds 4 or more words. The 
 688:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       input FIFO service interrupt INMIS is enabled with the 
 689:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP enable bit. Consequently, when CRYP is disabled, the 
 690:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       INMIS signal is low even if the input FIFO is empty.
 691:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 692:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 693:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 694:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    2. CRYP_IT_OUTI  : The output FIFO service interrupt is asserted when there 
 695:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       is one or more (32-bit word) data items in the output FIFO.
 696:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_OUTRIS flag.
 697:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 698:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by reading data from the output 
 699:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       FIFO until there is no valid (32-bit) word left (that is, 
 700:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       the interrupt follows the state of the OFNE (output FIFO 
 701:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       not empty) flag).
 702:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 703:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 704:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Managing the CRYP controller events :
 705:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------------------------------ 
 706:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The user should identify which mode will be used in his application to manage 
 707:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   the CRYP controller events: Polling mode or Interrupt mode.
 708:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 709:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1.  In the Polling Mode it is advised to use the following functions:
 710:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetFlagStatus() : to check if flags events occur. 
 711:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 712:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT flags do not need to be cleared since they are cleared as 
 713:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event are reset.   
 714:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 715:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 716:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 717:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_ITConfig()       : to enable or disable the interrupt source.
 718:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetITStatus()    : to check if Interrupt occurs.
 719:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 720:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT interrupts have no pending bits, the interrupt is cleared as 
 721:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event is reset. 
 722:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 723:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 724:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 725:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 726:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 727:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 728:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the specified CRYP interrupts.
 729:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP interrupt source to be enabled or disabled.
 730:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be any combination of the following values:
 731:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 732:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 733:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the specified CRYP interrupt.
 734:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be: ENABLE or DISABLE.
 735:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 736:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 737:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_ITConfig(uint8_t CRYP_IT, FunctionalState NewState)
 738:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25550              		.loc 1 738 0
 25551              		.cfi_startproc
 25552              		@ args = 0, pretend = 0, frame = 8
 25553              		@ frame_needed = 1, uses_anonymous_args = 0
 25554              		@ link register save eliminated.
 25555 0000 80B4     		push	{r7}
 25556              	.LCFI39:
 25557              		.cfi_def_cfa_offset 4
 25558 0002 83B0     		sub	sp, sp, #12
 25559              	.LCFI40:
 25560              		.cfi_def_cfa_offset 16
 25561 0004 00AF     		add	r7, sp, #0
 25562              		.cfi_offset 7, -4
 25563              	.LCFI41:
 25564              		.cfi_def_cfa_register 7
 25565 0006 0246     		mov	r2, r0
 25566 0008 0B46     		mov	r3, r1
 25567 000a FA71     		strb	r2, [r7, #7]
 25568 000c BB71     		strb	r3, [r7, #6]
 739:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 740:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_CONFIG_IT(CRYP_IT));
 741:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 742:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 743:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 25569              		.loc 1 743 0
 25570 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25571 0010 002B     		cmp	r3, #0
 25572 0012 07D0     		beq	.L47
 744:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 745:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP interrupt */
 746:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR |= CRYP_IT;
 25573              		.loc 1 746 0
 25574 0014 0B4B     		ldr	r3, .L49
 25575 0016 0B4A     		ldr	r2, .L49
 25576 0018 5169     		ldr	r1, [r2, #20]
 25577 001a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25578 001c 41EA0202 		orr	r2, r1, r2
 25579 0020 5A61     		str	r2, [r3, #20]
 25580 0022 09E0     		b	.L46
 25581              	.L47:
 747:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 748:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 749:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 750:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP interrupt */
 751:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR &= (uint8_t)~CRYP_IT;
 25582              		.loc 1 751 0
 25583 0024 074B     		ldr	r3, .L49
 25584 0026 074A     		ldr	r2, .L49
 25585 0028 5169     		ldr	r1, [r2, #20]
 25586 002a FA79     		ldrb	r2, [r7, #7]
 25587 002c 6FEA0202 		mvn	r2, r2
 25588 0030 D2B2     		uxtb	r2, r2
 25589 0032 01EA0202 		and	r2, r1, r2
 25590 0036 5A61     		str	r2, [r3, #20]
 25591              	.L46:
 752:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 753:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25592              		.loc 1 753 0
 25593 0038 07F10C07 		add	r7, r7, #12
 25594 003c BD46     		mov	sp, r7
 25595 003e 80BC     		pop	{r7}
 25596 0040 7047     		bx	lr
 25597              	.L50:
 25598 0042 00BF     		.align	2
 25599              	.L49:
 25600 0044 00000650 		.word	1342570496
 25601              		.cfi_endproc
 25602              	.LFE124:
 25604              		.section	.text.CRYP_GetITStatus,"ax",%progbits
 25605              		.align	2
 25606              		.global	CRYP_GetITStatus
 25607              		.thumb
 25608              		.thumb_func
 25610              	CRYP_GetITStatus:
 25611              	.LFB125:
 754:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 755:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 756:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP interrupt has occurred or not.
 757:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function checks the status of the masked interrupt (i.e the 
 758:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         interrupt should be previously enabled).     
 759:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP (masked) interrupt source to check.
 760:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 761:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 762:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 763:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_IT (SET or RESET).
 764:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 765:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ITStatus CRYP_GetITStatus(uint8_t CRYP_IT)
 766:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25612              		.loc 1 766 0
 25613              		.cfi_startproc
 25614              		@ args = 0, pretend = 0, frame = 16
 25615              		@ frame_needed = 1, uses_anonymous_args = 0
 25616              		@ link register save eliminated.
 25617 0000 80B4     		push	{r7}
 25618              	.LCFI42:
 25619              		.cfi_def_cfa_offset 4
 25620 0002 85B0     		sub	sp, sp, #20
 25621              	.LCFI43:
 25622              		.cfi_def_cfa_offset 24
 25623 0004 00AF     		add	r7, sp, #0
 25624              		.cfi_offset 7, -4
 25625              	.LCFI44:
 25626              		.cfi_def_cfa_register 7
 25627 0006 0346     		mov	r3, r0
 25628 0008 FB71     		strb	r3, [r7, #7]
 767:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ITStatus bitstatus = RESET;
 25629              		.loc 1 767 0
 25630 000a 4FF00003 		mov	r3, #0
 25631 000e FB73     		strb	r3, [r7, #15]
 768:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 769:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_IT(CRYP_IT));
 770:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 771:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP interrupt */
 772:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->MISR &  CRYP_IT) != (uint8_t)RESET)
 25632              		.loc 1 772 0
 25633 0010 0A4B     		ldr	r3, .L54
 25634 0012 DA69     		ldr	r2, [r3, #28]
 25635 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25636 0016 02EA0303 		and	r3, r2, r3
 25637 001a 002B     		cmp	r3, #0
 25638 001c 03D0     		beq	.L52
 773:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 774:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is set */
 775:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 25639              		.loc 1 775 0
 25640 001e 4FF00103 		mov	r3, #1
 25641 0022 FB73     		strb	r3, [r7, #15]
 25642 0024 02E0     		b	.L53
 25643              	.L52:
 776:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 777:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 778:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 779:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is reset */
 780:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 25644              		.loc 1 780 0
 25645 0026 4FF00003 		mov	r3, #0
 25646 002a FB73     		strb	r3, [r7, #15]
 25647              	.L53:
 781:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 782:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_IT status */
 783:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return bitstatus;
 25648              		.loc 1 783 0
 25649 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 784:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25650              		.loc 1 784 0
 25651 002e 1846     		mov	r0, r3
 25652 0030 07F11407 		add	r7, r7, #20
 25653 0034 BD46     		mov	sp, r7
 25654 0036 80BC     		pop	{r7}
 25655 0038 7047     		bx	lr
 25656              	.L55:
 25657 003a 00BF     		.align	2
 25658              	.L54:
 25659 003c 00000650 		.word	1342570496
 25660              		.cfi_endproc
 25661              	.LFE125:
 25663              		.section	.text.CRYP_GetFlagStatus,"ax",%progbits
 25664              		.align	2
 25665              		.global	CRYP_GetFlagStatus
 25666              		.thumb
 25667              		.thumb_func
 25669              	CRYP_GetFlagStatus:
 25670              	.LFB126:
 785:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 786:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 787:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP flag is set or not.
 788:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_FLAG: specifies the CRYP flag to check.
 789:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be one of the following values:
 790:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
 791:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
 792:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
 793:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
 794:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_BUSY: Busy flag.
 795:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
 796:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
 797:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_FLAG (SET or RESET).
 798:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 799:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
 800:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 25671              		.loc 1 800 0
 25672              		.cfi_startproc
 25673              		@ args = 0, pretend = 0, frame = 16
 25674              		@ frame_needed = 1, uses_anonymous_args = 0
 25675              		@ link register save eliminated.
 25676 0000 80B4     		push	{r7}
 25677              	.LCFI45:
 25678              		.cfi_def_cfa_offset 4
 25679 0002 85B0     		sub	sp, sp, #20
 25680              	.LCFI46:
 25681              		.cfi_def_cfa_offset 24
 25682 0004 00AF     		add	r7, sp, #0
 25683              		.cfi_offset 7, -4
 25684              	.LCFI47:
 25685              		.cfi_def_cfa_register 7
 25686 0006 0346     		mov	r3, r0
 25687 0008 FB71     		strb	r3, [r7, #7]
 801:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   FlagStatus bitstatus = RESET;
 25688              		.loc 1 801 0
 25689 000a 4FF00003 		mov	r3, #0
 25690 000e FB73     		strb	r3, [r7, #15]
 802:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t tempreg = 0;
 25691              		.loc 1 802 0
 25692 0010 4FF00003 		mov	r3, #0
 25693 0014 BB60     		str	r3, [r7, #8]
 803:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 804:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 805:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
 806:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 807:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* check if the FLAG is in RISR register */
 808:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
 25694              		.loc 1 808 0
 25695 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25696 0018 03F02003 		and	r3, r3, #32
 25697 001c 002B     		cmp	r3, #0
 25698 001e 03D0     		beq	.L57
 809:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 810:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->RISR;
 25699              		.loc 1 810 0
 25700 0020 0D4B     		ldr	r3, .L61
 25701 0022 9B69     		ldr	r3, [r3, #24]
 25702 0024 BB60     		str	r3, [r7, #8]
 25703 0026 02E0     		b	.L58
 25704              	.L57:
 811:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 812:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else  /* The FLAG is in SR register */
 813:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 814:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->SR;
 25705              		.loc 1 814 0
 25706 0028 0B4B     		ldr	r3, .L61
 25707 002a 5B68     		ldr	r3, [r3, #4]
 25708 002c BB60     		str	r3, [r7, #8]
 25709              	.L58:
 815:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 816:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 817:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 818:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP flag */
 819:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
 25710              		.loc 1 819 0
 25711 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25712 0030 BB68     		ldr	r3, [r7, #8]
 25713 0032 02EA0303 		and	r3, r2, r3
 25714 0036 002B     		cmp	r3, #0
 25715 0038 03D0     		beq	.L59
 820:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 821:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is set */
 822:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 25716              		.loc 1 822 0
 25717 003a 4FF00103 		mov	r3, #1
 25718 003e FB73     		strb	r3, [r7, #15]
 25719 0040 02E0     		b	.L60
 25720              	.L59:
 823:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 824:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 825:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 826:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is reset */
 827:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 25721              		.loc 1 827 0
 25722 0042 4FF00003 		mov	r3, #0
 25723 0046 FB73     		strb	r3, [r7, #15]
 25724              	.L60:
 828:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 829:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 830:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_FLAG status */
 831:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return  bitstatus;
 25725              		.loc 1 831 0
 25726 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 832:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 25727              		.loc 1 832 0
 25728 004a 1846     		mov	r0, r3
 25729 004c 07F11407 		add	r7, r7, #20
 25730 0050 BD46     		mov	sp, r7
 25731 0052 80BC     		pop	{r7}
 25732 0054 7047     		bx	lr
 25733              	.L62:
 25734 0056 00BF     		.align	2
 25735              	.L61:
 25736 0058 00000650 		.word	1342570496
 25737              		.cfi_endproc
 25738              	.LFE126:
 25740              		.text
 25741              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_cryp.c
     /tmp/ccWyRkvp.s:24581  .text.CRYP_DeInit:00000000 $t
     /tmp/ccWyRkvp.s:24586  .text.CRYP_DeInit:00000000 CRYP_DeInit
     /tmp/ccWyRkvp.s:24614  .text.CRYP_Init:00000000 $t
     /tmp/ccWyRkvp.s:24619  .text.CRYP_Init:00000000 CRYP_Init
     /tmp/ccWyRkvp.s:24726  .text.CRYP_Init:000000a4 $d
     /tmp/ccWyRkvp.s:24731  .text.CRYP_StructInit:00000000 $t
     /tmp/ccWyRkvp.s:24736  .text.CRYP_StructInit:00000000 CRYP_StructInit
     /tmp/ccWyRkvp.s:24779  .text.CRYP_KeyInit:00000000 $t
     /tmp/ccWyRkvp.s:24784  .text.CRYP_KeyInit:00000000 CRYP_KeyInit
     /tmp/ccWyRkvp.s:24850  .text.CRYP_KeyInit:00000054 $d
     /tmp/ccWyRkvp.s:24855  .text.CRYP_KeyStructInit:00000000 $t
     /tmp/ccWyRkvp.s:24860  .text.CRYP_KeyStructInit:00000000 CRYP_KeyStructInit
     /tmp/ccWyRkvp.s:24919  .text.CRYP_IVInit:00000000 $t
     /tmp/ccWyRkvp.s:24924  .text.CRYP_IVInit:00000000 CRYP_IVInit
     /tmp/ccWyRkvp.s:24970  .text.CRYP_IVInit:00000034 $d
     /tmp/ccWyRkvp.s:24975  .text.CRYP_IVStructInit:00000000 $t
     /tmp/ccWyRkvp.s:24980  .text.CRYP_IVStructInit:00000000 CRYP_IVStructInit
     /tmp/ccWyRkvp.s:25023  .text.CRYP_FIFOFlush:00000000 $t
     /tmp/ccWyRkvp.s:25028  .text.CRYP_FIFOFlush:00000000 CRYP_FIFOFlush
     /tmp/ccWyRkvp.s:25055  .text.CRYP_FIFOFlush:00000018 $d
     /tmp/ccWyRkvp.s:25060  .text.CRYP_Cmd:00000000 $t
     /tmp/ccWyRkvp.s:25065  .text.CRYP_Cmd:00000000 CRYP_Cmd
     /tmp/ccWyRkvp.s:25111  .text.CRYP_Cmd:00000034 $d
     /tmp/ccWyRkvp.s:25116  .text.CRYP_DataIn:00000000 $t
     /tmp/ccWyRkvp.s:25121  .text.CRYP_DataIn:00000000 CRYP_DataIn
     /tmp/ccWyRkvp.s:25151  .text.CRYP_DataIn:00000018 $d
     /tmp/ccWyRkvp.s:25156  .text.CRYP_DataOut:00000000 $t
     /tmp/ccWyRkvp.s:25161  .text.CRYP_DataOut:00000000 CRYP_DataOut
     /tmp/ccWyRkvp.s:25186  .text.CRYP_DataOut:00000010 $d
     /tmp/ccWyRkvp.s:25191  .text.CRYP_SaveContext:00000000 $t
     /tmp/ccWyRkvp.s:25196  .text.CRYP_SaveContext:00000000 CRYP_SaveContext
     /tmp/ccWyRkvp.s:25369  .text.CRYP_SaveContext:00000114 $d
     /tmp/ccWyRkvp.s:25374  .text.CRYP_RestoreContext:00000000 $t
     /tmp/ccWyRkvp.s:25379  .text.CRYP_RestoreContext:00000000 CRYP_RestoreContext
     /tmp/ccWyRkvp.s:25476  .text.CRYP_RestoreContext:00000088 $d
     /tmp/ccWyRkvp.s:25481  .text.CRYP_DMACmd:00000000 $t
     /tmp/ccWyRkvp.s:25486  .text.CRYP_DMACmd:00000000 CRYP_DMACmd
     /tmp/ccWyRkvp.s:25538  .text.CRYP_DMACmd:00000044 $d
     /tmp/ccWyRkvp.s:25543  .text.CRYP_ITConfig:00000000 $t
     /tmp/ccWyRkvp.s:25548  .text.CRYP_ITConfig:00000000 CRYP_ITConfig
     /tmp/ccWyRkvp.s:25600  .text.CRYP_ITConfig:00000044 $d
     /tmp/ccWyRkvp.s:25605  .text.CRYP_GetITStatus:00000000 $t
     /tmp/ccWyRkvp.s:25610  .text.CRYP_GetITStatus:00000000 CRYP_GetITStatus
     /tmp/ccWyRkvp.s:25659  .text.CRYP_GetITStatus:0000003c $d
     /tmp/ccWyRkvp.s:25664  .text.CRYP_GetFlagStatus:00000000 $t
     /tmp/ccWyRkvp.s:25669  .text.CRYP_GetFlagStatus:00000000 CRYP_GetFlagStatus
     /tmp/ccWyRkvp.s:25736  .text.CRYP_GetFlagStatus:00000058 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
