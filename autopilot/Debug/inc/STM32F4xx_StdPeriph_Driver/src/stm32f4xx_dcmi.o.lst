   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_dcmi.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c"
 24575              		.align	2
 24576              		.global	DCMI_DeInit
 24577              		.thumb
 24578              		.thumb_func
 24580              	DCMI_DeInit:
 24581              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @file    stm32f4xx_dcmi.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          functionalities of the DCMI peripheral:           
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *           - Initialization and Configuration
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *           - Image capture functions  
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *           - Interrupts and flags management
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *  @verbatim  
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *  
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *        
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          ===================================================================
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                                 How to use this driver
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          ===================================================================  
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         The sequence below describes how to use this driver to capture image
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         from a camera module connected to the DCMI Interface.
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         This sequence does not take into account the configuration of the  
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         camera module, which should be made before to configure and enable
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         the DCMI to capture images.
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *           
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          1. Enable the clock for the DCMI and associated GPIOs using the following functions:
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_DCMI, ENABLE);
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          2. DCMI pins configuration 
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *             - Connect the involved DCMI pins to AF13 using the following function 
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_DCMI); 
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *             - Configure these DCMI pins in alternate function mode by calling the function
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 GPIO_Init();
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *    
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          3. Declare a DCMI_InitTypeDef structure, for example:
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 DCMI_InitTypeDef  DCMI_InitStructure;
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *             and fill the DCMI_InitStructure variable with the allowed values
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *             of the structure member.
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *  
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          4. Initialize the DCMI interface by calling the function
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 DCMI_Init(&DCMI_InitStructure); 
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *  
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          5. Configure the DMA2_Stream1 channel1 to transfer Data from DCMI DR
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *             register to the destination memory buffer.
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *  
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          6. Enable DCMI interface using the function
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 DCMI_Cmd(ENABLE);
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         7. Start the image capture using the function
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 DCMI_CaptureCmd(ENABLE);
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *                 
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         8. At this stage the DCMI interface waits for the first start of frame,
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            then a DMA request is generated continuously/once (depending on the
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            mode used, Continuous/Snapshot) to transfer the received data into
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            the destination memory. 
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *   
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *  @note  If you need to capture only a rectangular window from the received
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         image, you have to use the DCMI_CROPConfig() function to configure 
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         the coordinates and size of the window to be captured, then enable 
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         the Crop feature using DCMI_CROPCmd(ENABLE);  
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         In this case, the Crop configuration should be made before to enable
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         and start the DCMI interface. 
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *        
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *  @endverbatim   
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *  
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   ******************************************************************************
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @attention
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   ******************************************************************************
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Includes ------------------------------------------------------------------*/
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** #include "stm32f4xx_dcmi.h"
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** #include "stm32f4xx_rcc.h"
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI 
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief DCMI driver modules
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */ 
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private typedef -----------------------------------------------------------*/
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private define ------------------------------------------------------------*/
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private macro -------------------------------------------------------------*/
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private variables ---------------------------------------------------------*/
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private function prototypes -----------------------------------------------*/
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /* Private functions ---------------------------------------------------------*/
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Private_Functions
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */ 
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group1 Initialization and Configuration functions
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *  @brief   Initialization and Configuration functions 
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @verbatim   
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   Initialization and Configuration functions
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================  
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @endverbatim
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Deinitializes the DCMI registers to their default reset values.
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  None
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_DeInit(void)
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 24582              		.loc 1 123 0
 24583              		.cfi_startproc
 24584              		@ args = 0, pretend = 0, frame = 0
 24585              		@ frame_needed = 1, uses_anonymous_args = 0
 24586              		@ link register save eliminated.
 24587 0000 80B4     		push	{r7}
 24588              	.LCFI0:
 24589              		.cfi_def_cfa_offset 4
 24590 0002 00AF     		add	r7, sp, #0
 24591              		.cfi_offset 7, -4
 24592              	.LCFI1:
 24593              		.cfi_def_cfa_register 7
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CR = 0x0;
 24594              		.loc 1 124 0
 24595 0004 0F4B     		ldr	r3, .L2
 24596 0006 4FF00002 		mov	r2, #0
 24597 000a 1A60     		str	r2, [r3, #0]
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->IER = 0x0;
 24598              		.loc 1 125 0
 24599 000c 0D4B     		ldr	r3, .L2
 24600 000e 4FF00002 		mov	r2, #0
 24601 0012 DA60     		str	r2, [r3, #12]
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ICR = 0x1F;
 24602              		.loc 1 126 0
 24603 0014 0B4B     		ldr	r3, .L2
 24604 0016 4FF01F02 		mov	r2, #31
 24605 001a 5A61     		str	r2, [r3, #20]
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = 0x0;
 24606              		.loc 1 127 0
 24607 001c 094B     		ldr	r3, .L2
 24608 001e 4FF00002 		mov	r2, #0
 24609 0022 9A61     		str	r2, [r3, #24]
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESUR = 0x0;
 24610              		.loc 1 128 0
 24611 0024 074B     		ldr	r3, .L2
 24612 0026 4FF00002 		mov	r2, #0
 24613 002a DA61     		str	r2, [r3, #28]
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSTRTR = 0x0;
 24614              		.loc 1 129 0
 24615 002c 054B     		ldr	r3, .L2
 24616 002e 4FF00002 		mov	r2, #0
 24617 0032 1A62     		str	r2, [r3, #32]
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSIZER = 0x0;
 24618              		.loc 1 130 0
 24619 0034 034B     		ldr	r3, .L2
 24620 0036 4FF00002 		mov	r2, #0
 24621 003a 5A62     		str	r2, [r3, #36]
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 24622              		.loc 1 131 0
 24623 003c BD46     		mov	sp, r7
 24624 003e 80BC     		pop	{r7}
 24625 0040 7047     		bx	lr
 24626              	.L3:
 24627 0042 00BF     		.align	2
 24628              	.L2:
 24629 0044 00000550 		.word	1342504960
 24630              		.cfi_endproc
 24631              	.LFE110:
 24633              		.section	.text.DCMI_Init,"ax",%progbits
 24634              		.align	2
 24635              		.global	DCMI_Init
 24636              		.thumb
 24637              		.thumb_func
 24639              	DCMI_Init:
 24640              	.LFB111:
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Initializes the DCMI according to the specified parameters in the DCMI_InitStruct.
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_InitStruct: pointer to a DCMI_InitTypeDef structure that contains 
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         the configuration information for the DCMI.
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_Init(DCMI_InitTypeDef* DCMI_InitStruct)
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 24641              		.loc 1 140 0
 24642              		.cfi_startproc
 24643              		@ args = 0, pretend = 0, frame = 16
 24644              		@ frame_needed = 1, uses_anonymous_args = 0
 24645              		@ link register save eliminated.
 24646 0000 80B4     		push	{r7}
 24647              	.LCFI2:
 24648              		.cfi_def_cfa_offset 4
 24649 0002 85B0     		sub	sp, sp, #20
 24650              	.LCFI3:
 24651              		.cfi_def_cfa_offset 24
 24652 0004 00AF     		add	r7, sp, #0
 24653              		.cfi_offset 7, -4
 24654              	.LCFI4:
 24655              		.cfi_def_cfa_register 7
 24656 0006 7860     		str	r0, [r7, #4]
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   uint32_t temp = 0x0;
 24657              		.loc 1 141 0
 24658 0008 4FF00003 		mov	r3, #0
 24659 000c FB60     		str	r3, [r7, #12]
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_MODE(DCMI_InitStruct->DCMI_CaptureMode));
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_SYNCHRO(DCMI_InitStruct->DCMI_SynchroMode));
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_PCKPOLARITY(DCMI_InitStruct->DCMI_PCKPolarity));
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_VSPOLARITY(DCMI_InitStruct->DCMI_VSPolarity));
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_HSPOLARITY(DCMI_InitStruct->DCMI_HSPolarity));
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CAPTURE_RATE(DCMI_InitStruct->DCMI_CaptureRate));
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_EXTENDED_DATA(DCMI_InitStruct->DCMI_ExtendedDataMode));
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* The DCMI configuration registers should be programmed correctly before 
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   enabling the CR_ENABLE Bit and the CR_CAPTURE Bit */
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CR &= ~(DCMI_CR_ENABLE | DCMI_CR_CAPTURE);
 24660              		.loc 1 154 0
 24661 000e 1E4A     		ldr	r2, .L5
 24662 0010 1D4B     		ldr	r3, .L5
 24663 0012 1B68     		ldr	r3, [r3, #0]
 24664 0014 23F48043 		bic	r3, r3, #16384
 24665 0018 23F00103 		bic	r3, r3, #1
 24666 001c 1360     		str	r3, [r2, #0]
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****    
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Reset the old DCMI configuration */
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   temp = DCMI->CR;
 24667              		.loc 1 157 0
 24668 001e 1A4B     		ldr	r3, .L5
 24669 0020 1B68     		ldr	r3, [r3, #0]
 24670 0022 FB60     		str	r3, [r7, #12]
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   temp &= ~((uint32_t)DCMI_CR_CM     | DCMI_CR_ESS   | DCMI_CR_PCKPOL |
 24671              		.loc 1 159 0
 24672 0024 FB68     		ldr	r3, [r7, #12]
 24673 0026 23F47E63 		bic	r3, r3, #4064
 24674 002a 23F01203 		bic	r3, r3, #18
 24675 002e FB60     		str	r3, [r7, #12]
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                       DCMI_CR_HSPOL  | DCMI_CR_VSPOL | DCMI_CR_FCRC_0 | 
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                       DCMI_CR_FCRC_1 | DCMI_CR_EDM_0 | DCMI_CR_EDM_1); 
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Sets the new configuration of the DCMI peripheral */
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   temp |= ((uint32_t)DCMI_InitStruct->DCMI_CaptureMode |
 24676              		.loc 1 164 0
 24677 0030 7B68     		ldr	r3, [r7, #4]
 24678 0032 1A88     		ldrh	r2, [r3, #0]
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_SynchroMode |
 24679              		.loc 1 165 0
 24680 0034 7B68     		ldr	r3, [r7, #4]
 24681 0036 5B88     		ldrh	r3, [r3, #2]
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_PCKPolarity |
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_VSPolarity |
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_HSPolarity |
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_CaptureRate |
 24682              		.loc 1 169 0
 24683 0038 42EA0303 		orr	r3, r2, r3
 24684 003c 9AB2     		uxth	r2, r3
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_PCKPolarity |
 24685              		.loc 1 166 0
 24686 003e 7B68     		ldr	r3, [r7, #4]
 24687 0040 9B88     		ldrh	r3, [r3, #4]
 24688              		.loc 1 169 0
 24689 0042 42EA0303 		orr	r3, r2, r3
 24690 0046 9AB2     		uxth	r2, r3
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_VSPolarity |
 24691              		.loc 1 167 0
 24692 0048 7B68     		ldr	r3, [r7, #4]
 24693 004a DB88     		ldrh	r3, [r3, #6]
 24694              		.loc 1 169 0
 24695 004c 42EA0303 		orr	r3, r2, r3
 24696 0050 9AB2     		uxth	r2, r3
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_HSPolarity |
 24697              		.loc 1 168 0
 24698 0052 7B68     		ldr	r3, [r7, #4]
 24699 0054 1B89     		ldrh	r3, [r3, #8]
 24700              		.loc 1 169 0
 24701 0056 42EA0303 		orr	r3, r2, r3
 24702 005a 9AB2     		uxth	r2, r3
 24703 005c 7B68     		ldr	r3, [r7, #4]
 24704 005e 5B89     		ldrh	r3, [r3, #10]
 24705 0060 42EA0303 		orr	r3, r2, r3
 24706 0064 9AB2     		uxth	r2, r3
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_ExtendedDataMode);
 24707              		.loc 1 170 0
 24708 0066 7B68     		ldr	r3, [r7, #4]
 24709 0068 9B89     		ldrh	r3, [r3, #12]
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                      DCMI_InitStruct->DCMI_CaptureRate |
 24710              		.loc 1 169 0
 24711 006a 42EA0303 		orr	r3, r2, r3
 24712 006e 9BB2     		uxth	r3, r3
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   temp |= ((uint32_t)DCMI_InitStruct->DCMI_CaptureMode |
 24713              		.loc 1 164 0
 24714 0070 FA68     		ldr	r2, [r7, #12]
 24715 0072 42EA0303 		orr	r3, r2, r3
 24716 0076 FB60     		str	r3, [r7, #12]
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CR = temp;                              
 24717              		.loc 1 172 0
 24718 0078 034B     		ldr	r3, .L5
 24719 007a FA68     		ldr	r2, [r7, #12]
 24720 007c 1A60     		str	r2, [r3, #0]
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 24721              		.loc 1 173 0
 24722 007e 07F11407 		add	r7, r7, #20
 24723 0082 BD46     		mov	sp, r7
 24724 0084 80BC     		pop	{r7}
 24725 0086 7047     		bx	lr
 24726              	.L6:
 24727              		.align	2
 24728              	.L5:
 24729 0088 00000550 		.word	1342504960
 24730              		.cfi_endproc
 24731              	.LFE111:
 24733              		.section	.text.DCMI_StructInit,"ax",%progbits
 24734              		.align	2
 24735              		.global	DCMI_StructInit
 24736              		.thumb
 24737              		.thumb_func
 24739              	DCMI_StructInit:
 24740              	.LFB112:
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Fills each DCMI_InitStruct member with its default value.
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_InitStruct : pointer to a DCMI_InitTypeDef structure which will
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         be initialized.
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_StructInit(DCMI_InitTypeDef* DCMI_InitStruct)
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 24741              		.loc 1 182 0
 24742              		.cfi_startproc
 24743              		@ args = 0, pretend = 0, frame = 8
 24744              		@ frame_needed = 1, uses_anonymous_args = 0
 24745              		@ link register save eliminated.
 24746 0000 80B4     		push	{r7}
 24747              	.LCFI5:
 24748              		.cfi_def_cfa_offset 4
 24749 0002 83B0     		sub	sp, sp, #12
 24750              	.LCFI6:
 24751              		.cfi_def_cfa_offset 16
 24752 0004 00AF     		add	r7, sp, #0
 24753              		.cfi_offset 7, -4
 24754              	.LCFI7:
 24755              		.cfi_def_cfa_register 7
 24756 0006 7860     		str	r0, [r7, #4]
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Set the default configuration */
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_CaptureMode = DCMI_CaptureMode_Continuous;
 24757              		.loc 1 184 0
 24758 0008 7B68     		ldr	r3, [r7, #4]
 24759 000a 4FF00002 		mov	r2, #0
 24760 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_SynchroMode = DCMI_SynchroMode_Hardware;
 24761              		.loc 1 185 0
 24762 0010 7B68     		ldr	r3, [r7, #4]
 24763 0012 4FF00002 		mov	r2, #0
 24764 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_PCKPolarity = DCMI_PCKPolarity_Falling;
 24765              		.loc 1 186 0
 24766 0018 7B68     		ldr	r3, [r7, #4]
 24767 001a 4FF00002 		mov	r2, #0
 24768 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_VSPolarity = DCMI_VSPolarity_Low;
 24769              		.loc 1 187 0
 24770 0020 7B68     		ldr	r3, [r7, #4]
 24771 0022 4FF00002 		mov	r2, #0
 24772 0026 DA80     		strh	r2, [r3, #6]	@ movhi
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_HSPolarity = DCMI_HSPolarity_Low;
 24773              		.loc 1 188 0
 24774 0028 7B68     		ldr	r3, [r7, #4]
 24775 002a 4FF00002 		mov	r2, #0
 24776 002e 1A81     		strh	r2, [r3, #8]	@ movhi
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_CaptureRate = DCMI_CaptureRate_All_Frame;
 24777              		.loc 1 189 0
 24778 0030 7B68     		ldr	r3, [r7, #4]
 24779 0032 4FF00002 		mov	r2, #0
 24780 0036 5A81     		strh	r2, [r3, #10]	@ movhi
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI_InitStruct->DCMI_ExtendedDataMode = DCMI_ExtendedDataMode_8b;
 24781              		.loc 1 190 0
 24782 0038 7B68     		ldr	r3, [r7, #4]
 24783 003a 4FF00002 		mov	r2, #0
 24784 003e 9A81     		strh	r2, [r3, #12]	@ movhi
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 24785              		.loc 1 191 0
 24786 0040 07F10C07 		add	r7, r7, #12
 24787 0044 BD46     		mov	sp, r7
 24788 0046 80BC     		pop	{r7}
 24789 0048 7047     		bx	lr
 24790              		.cfi_endproc
 24791              	.LFE112:
 24793 004a 00BF     		.section	.text.DCMI_CROPConfig,"ax",%progbits
 24794              		.align	2
 24795              		.global	DCMI_CROPConfig
 24796              		.thumb
 24797              		.thumb_func
 24799              	DCMI_CROPConfig:
 24800              	.LFB113:
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Initializes the DCMI peripheral CROP mode according to the specified
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         parameters in the DCMI_CROPInitStruct.
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @note   This function should be called before to enable and start the DCMI interface.   
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_CROPInitStruct:  pointer to a DCMI_CROPInitTypeDef structure that 
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         contains the configuration information for the DCMI peripheral CROP mode.
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_CROPConfig(DCMI_CROPInitTypeDef* DCMI_CROPInitStruct)
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {  
 24801              		.loc 1 202 0
 24802              		.cfi_startproc
 24803              		@ args = 0, pretend = 0, frame = 8
 24804              		@ frame_needed = 1, uses_anonymous_args = 0
 24805              		@ link register save eliminated.
 24806 0000 80B4     		push	{r7}
 24807              	.LCFI8:
 24808              		.cfi_def_cfa_offset 4
 24809 0002 83B0     		sub	sp, sp, #12
 24810              	.LCFI9:
 24811              		.cfi_def_cfa_offset 16
 24812 0004 00AF     		add	r7, sp, #0
 24813              		.cfi_offset 7, -4
 24814              	.LCFI10:
 24815              		.cfi_def_cfa_register 7
 24816 0006 7860     		str	r0, [r7, #4]
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Sets the CROP window coordinates */
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSTRTR = (uint32_t)((uint32_t)DCMI_CROPInitStruct->DCMI_HorizontalOffsetCount |
 24817              		.loc 1 204 0
 24818 0008 0D4B     		ldr	r3, .L9
 24819 000a 7A68     		ldr	r2, [r7, #4]
 24820 000c 5288     		ldrh	r2, [r2, #2]
 24821 000e 1146     		mov	r1, r2
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalStartLine << 16));
 24822              		.loc 1 205 0
 24823 0010 7A68     		ldr	r2, [r7, #4]
 24824 0012 1288     		ldrh	r2, [r2, #0]
 24825 0014 4FEA0242 		lsl	r2, r2, #16
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSTRTR = (uint32_t)((uint32_t)DCMI_CROPInitStruct->DCMI_HorizontalOffsetCount |
 24826              		.loc 1 204 0
 24827 0018 41EA0202 		orr	r2, r1, r2
 24828 001c 1A62     		str	r2, [r3, #32]
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Sets the CROP window size */
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSIZER = (uint32_t)(DCMI_CROPInitStruct->DCMI_CaptureCount |
 24829              		.loc 1 208 0
 24830 001e 084B     		ldr	r3, .L9
 24831 0020 7A68     		ldr	r2, [r7, #4]
 24832 0022 D288     		ldrh	r2, [r2, #6]
 24833 0024 1146     		mov	r1, r2
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   ((uint32_t)DCMI_CROPInitStruct->DCMI_VerticalLineCount << 16));
 24834              		.loc 1 209 0
 24835 0026 7A68     		ldr	r2, [r7, #4]
 24836 0028 9288     		ldrh	r2, [r2, #4]
 24837 002a 4FEA0242 		lsl	r2, r2, #16
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->CWSIZER = (uint32_t)(DCMI_CROPInitStruct->DCMI_CaptureCount |
 24838              		.loc 1 208 0
 24839 002e 41EA0202 		orr	r2, r1, r2
 24840 0032 5A62     		str	r2, [r3, #36]
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 24841              		.loc 1 210 0
 24842 0034 07F10C07 		add	r7, r7, #12
 24843 0038 BD46     		mov	sp, r7
 24844 003a 80BC     		pop	{r7}
 24845 003c 7047     		bx	lr
 24846              	.L10:
 24847 003e 00BF     		.align	2
 24848              	.L9:
 24849 0040 00000550 		.word	1342504960
 24850              		.cfi_endproc
 24851              	.LFE113:
 24853              		.section	.text.DCMI_CROPCmd,"ax",%progbits
 24854              		.align	2
 24855              		.global	DCMI_CROPCmd
 24856              		.thumb
 24857              		.thumb_func
 24859              	DCMI_CROPCmd:
 24860              	.LFB114:
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI Crop feature.
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @note   This function should be called before to enable and start the DCMI interface.
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI Crop feature. 
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_CROPCmd(FunctionalState NewState)
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 24861              		.loc 1 220 0
 24862              		.cfi_startproc
 24863              		@ args = 0, pretend = 0, frame = 8
 24864              		@ frame_needed = 1, uses_anonymous_args = 0
 24865              		@ link register save eliminated.
 24866 0000 80B4     		push	{r7}
 24867              	.LCFI11:
 24868              		.cfi_def_cfa_offset 4
 24869 0002 83B0     		sub	sp, sp, #12
 24870              	.LCFI12:
 24871              		.cfi_def_cfa_offset 16
 24872 0004 00AF     		add	r7, sp, #0
 24873              		.cfi_offset 7, -4
 24874              	.LCFI13:
 24875              		.cfi_def_cfa_register 7
 24876 0006 0346     		mov	r3, r0
 24877 0008 FB71     		strb	r3, [r7, #7]
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 24878              		.loc 1 224 0
 24879 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24880 000c 002B     		cmp	r3, #0
 24881 000e 06D0     		beq	.L12
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI Crop feature */
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_CROP;
 24882              		.loc 1 227 0
 24883 0010 084B     		ldr	r3, .L14
 24884 0012 084A     		ldr	r2, .L14
 24885 0014 1268     		ldr	r2, [r2, #0]
 24886 0016 42F00402 		orr	r2, r2, #4
 24887 001a 1A60     		str	r2, [r3, #0]
 24888 001c 05E0     		b	.L11
 24889              	.L12:
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI Crop feature */
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_CROP;
 24890              		.loc 1 232 0
 24891 001e 054B     		ldr	r3, .L14
 24892 0020 044A     		ldr	r2, .L14
 24893 0022 1268     		ldr	r2, [r2, #0]
 24894 0024 22F00402 		bic	r2, r2, #4
 24895 0028 1A60     		str	r2, [r3, #0]
 24896              	.L11:
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 24897              		.loc 1 234 0
 24898 002a 07F10C07 		add	r7, r7, #12
 24899 002e BD46     		mov	sp, r7
 24900 0030 80BC     		pop	{r7}
 24901 0032 7047     		bx	lr
 24902              	.L15:
 24903              		.align	2
 24904              	.L14:
 24905 0034 00000550 		.word	1342504960
 24906              		.cfi_endproc
 24907              	.LFE114:
 24909              		.section	.text.DCMI_SetEmbeddedSynchroCodes,"ax",%progbits
 24910              		.align	2
 24911              		.global	DCMI_SetEmbeddedSynchroCodes
 24912              		.thumb
 24913              		.thumb_func
 24915              	DCMI_SetEmbeddedSynchroCodes:
 24916              	.LFB115:
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Sets the embedded synchronization codes
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_CodesInitTypeDef: pointer to a DCMI_CodesInitTypeDef structure that
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *         contains the embedded synchronization codes for the DCMI peripheral.
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_SetEmbeddedSynchroCodes(DCMI_CodesInitTypeDef* DCMI_CodesInitStruct)
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 24917              		.loc 1 243 0
 24918              		.cfi_startproc
 24919              		@ args = 0, pretend = 0, frame = 8
 24920              		@ frame_needed = 1, uses_anonymous_args = 0
 24921              		@ link register save eliminated.
 24922 0000 80B4     		push	{r7}
 24923              	.LCFI14:
 24924              		.cfi_def_cfa_offset 4
 24925 0002 83B0     		sub	sp, sp, #12
 24926              	.LCFI15:
 24927              		.cfi_def_cfa_offset 16
 24928 0004 00AF     		add	r7, sp, #0
 24929              		.cfi_offset 7, -4
 24930              	.LCFI16:
 24931              		.cfi_def_cfa_register 7
 24932 0006 7860     		str	r0, [r7, #4]
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 24933              		.loc 1 244 0
 24934 0008 0C4B     		ldr	r3, .L17
 24935 000a 7A68     		ldr	r2, [r7, #4]
 24936 000c 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 24937 000e 1146     		mov	r1, r2
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 24938              		.loc 1 245 0
 24939 0010 7A68     		ldr	r2, [r7, #4]
 24940 0012 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 24941 0014 4FEA0222 		lsl	r2, r2, #8
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 24942              		.loc 1 244 0
 24943 0018 1143     		orrs	r1, r1, r2
 246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineEndCode << 16)|
 24944              		.loc 1 246 0
 24945 001a 7A68     		ldr	r2, [r7, #4]
 24946 001c 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 24947 001e 4FEA0242 		lsl	r2, r2, #16
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_LineStartCode << 8)|
 24948              		.loc 1 245 0
 24949 0022 1143     		orrs	r1, r1, r2
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                           ((uint32_t)DCMI_CodesInitStruct->DCMI_FrameEndCode << 24));
 24950              		.loc 1 247 0
 24951 0024 7A68     		ldr	r2, [r7, #4]
 24952 0026 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 24953 0028 4FEA0262 		lsl	r2, r2, #24
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ESCR = (uint32_t)(DCMI_CodesInitStruct->DCMI_FrameStartCode |
 24954              		.loc 1 244 0
 24955 002c 41EA0202 		orr	r2, r1, r2
 24956 0030 9A61     		str	r2, [r3, #24]
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 24957              		.loc 1 248 0
 24958 0032 07F10C07 		add	r7, r7, #12
 24959 0036 BD46     		mov	sp, r7
 24960 0038 80BC     		pop	{r7}
 24961 003a 7047     		bx	lr
 24962              	.L18:
 24963              		.align	2
 24964              	.L17:
 24965 003c 00000550 		.word	1342504960
 24966              		.cfi_endproc
 24967              	.LFE115:
 24969              		.section	.text.DCMI_JPEGCmd,"ax",%progbits
 24970              		.align	2
 24971              		.global	DCMI_JPEGCmd
 24972              		.thumb
 24973              		.thumb_func
 24975              	DCMI_JPEGCmd:
 24976              	.LFB116:
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI JPEG format.
 252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @note   The Crop and Embedded Synchronization features cannot be used in this mode.  
 253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI JPEG format. 
 254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_JPEGCmd(FunctionalState NewState)
 258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 24977              		.loc 1 258 0
 24978              		.cfi_startproc
 24979              		@ args = 0, pretend = 0, frame = 8
 24980              		@ frame_needed = 1, uses_anonymous_args = 0
 24981              		@ link register save eliminated.
 24982 0000 80B4     		push	{r7}
 24983              	.LCFI17:
 24984              		.cfi_def_cfa_offset 4
 24985 0002 83B0     		sub	sp, sp, #12
 24986              	.LCFI18:
 24987              		.cfi_def_cfa_offset 16
 24988 0004 00AF     		add	r7, sp, #0
 24989              		.cfi_offset 7, -4
 24990              	.LCFI19:
 24991              		.cfi_def_cfa_register 7
 24992 0006 0346     		mov	r3, r0
 24993 0008 FB71     		strb	r3, [r7, #7]
 259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 24994              		.loc 1 262 0
 24995 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24996 000c 002B     		cmp	r3, #0
 24997 000e 06D0     		beq	.L20
 263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI JPEG format */
 265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_JPEG;
 24998              		.loc 1 265 0
 24999 0010 084B     		ldr	r3, .L22
 25000 0012 084A     		ldr	r2, .L22
 25001 0014 1268     		ldr	r2, [r2, #0]
 25002 0016 42F00802 		orr	r2, r2, #8
 25003 001a 1A60     		str	r2, [r3, #0]
 25004 001c 05E0     		b	.L19
 25005              	.L20:
 266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI JPEG format */
 270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_JPEG;
 25006              		.loc 1 270 0
 25007 001e 054B     		ldr	r3, .L22
 25008 0020 044A     		ldr	r2, .L22
 25009 0022 1268     		ldr	r2, [r2, #0]
 25010 0024 22F00802 		bic	r2, r2, #8
 25011 0028 1A60     		str	r2, [r3, #0]
 25012              	.L19:
 271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 25013              		.loc 1 272 0
 25014 002a 07F10C07 		add	r7, r7, #12
 25015 002e BD46     		mov	sp, r7
 25016 0030 80BC     		pop	{r7}
 25017 0032 7047     		bx	lr
 25018              	.L23:
 25019              		.align	2
 25020              	.L22:
 25021 0034 00000550 		.word	1342504960
 25022              		.cfi_endproc
 25023              	.LFE116:
 25025              		.section	.text.DCMI_Cmd,"ax",%progbits
 25026              		.align	2
 25027              		.global	DCMI_Cmd
 25028              		.thumb
 25029              		.thumb_func
 25031              	DCMI_Cmd:
 25032              	.LFB117:
 273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @}
 275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group2 Image capture functions
 278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *  @brief   Image capture functions
 279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *
 280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @verbatim   
 281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================
 282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                                  Image capture functions
 283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================  
 284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @endverbatim
 286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
 287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI interface.
 291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI interface. 
 292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_Cmd(FunctionalState NewState)
 296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 25033              		.loc 1 296 0
 25034              		.cfi_startproc
 25035              		@ args = 0, pretend = 0, frame = 8
 25036              		@ frame_needed = 1, uses_anonymous_args = 0
 25037              		@ link register save eliminated.
 25038 0000 80B4     		push	{r7}
 25039              	.LCFI20:
 25040              		.cfi_def_cfa_offset 4
 25041 0002 83B0     		sub	sp, sp, #12
 25042              	.LCFI21:
 25043              		.cfi_def_cfa_offset 16
 25044 0004 00AF     		add	r7, sp, #0
 25045              		.cfi_offset 7, -4
 25046              	.LCFI22:
 25047              		.cfi_def_cfa_register 7
 25048 0006 0346     		mov	r3, r0
 25049 0008 FB71     		strb	r3, [r7, #7]
 297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 25050              		.loc 1 300 0
 25051 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25052 000c 002B     		cmp	r3, #0
 25053 000e 06D0     		beq	.L25
 301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI by setting ENABLE bit */
 303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_ENABLE;
 25054              		.loc 1 303 0
 25055 0010 084B     		ldr	r3, .L27
 25056 0012 084A     		ldr	r2, .L27
 25057 0014 1268     		ldr	r2, [r2, #0]
 25058 0016 42F48042 		orr	r2, r2, #16384
 25059 001a 1A60     		str	r2, [r3, #0]
 25060 001c 05E0     		b	.L24
 25061              	.L25:
 304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI by clearing ENABLE bit */
 308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_ENABLE;
 25062              		.loc 1 308 0
 25063 001e 054B     		ldr	r3, .L27
 25064 0020 044A     		ldr	r2, .L27
 25065 0022 1268     		ldr	r2, [r2, #0]
 25066 0024 22F48042 		bic	r2, r2, #16384
 25067 0028 1A60     		str	r2, [r3, #0]
 25068              	.L24:
 309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 25069              		.loc 1 310 0
 25070 002a 07F10C07 		add	r7, r7, #12
 25071 002e BD46     		mov	sp, r7
 25072 0030 80BC     		pop	{r7}
 25073 0032 7047     		bx	lr
 25074              	.L28:
 25075              		.align	2
 25076              	.L27:
 25077 0034 00000550 		.word	1342504960
 25078              		.cfi_endproc
 25079              	.LFE117:
 25081              		.section	.text.DCMI_CaptureCmd,"ax",%progbits
 25082              		.align	2
 25083              		.global	DCMI_CaptureCmd
 25084              		.thumb
 25085              		.thumb_func
 25087              	DCMI_CaptureCmd:
 25088              	.LFB118:
 311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI Capture.
 314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the DCMI capture. 
 315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_CaptureCmd(FunctionalState NewState)
 319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 25089              		.loc 1 319 0
 25090              		.cfi_startproc
 25091              		@ args = 0, pretend = 0, frame = 8
 25092              		@ frame_needed = 1, uses_anonymous_args = 0
 25093              		@ link register save eliminated.
 25094 0000 80B4     		push	{r7}
 25095              	.LCFI23:
 25096              		.cfi_def_cfa_offset 4
 25097 0002 83B0     		sub	sp, sp, #12
 25098              	.LCFI24:
 25099              		.cfi_def_cfa_offset 16
 25100 0004 00AF     		add	r7, sp, #0
 25101              		.cfi_offset 7, -4
 25102              	.LCFI25:
 25103              		.cfi_def_cfa_register 7
 25104 0006 0346     		mov	r3, r0
 25105 0008 FB71     		strb	r3, [r7, #7]
 320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     
 323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 25106              		.loc 1 323 0
 25107 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25108 000c 002B     		cmp	r3, #0
 25109 000e 06D0     		beq	.L30
 324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the DCMI Capture */
 326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR |= (uint32_t)DCMI_CR_CAPTURE;
 25110              		.loc 1 326 0
 25111 0010 084B     		ldr	r3, .L32
 25112 0012 084A     		ldr	r2, .L32
 25113 0014 1268     		ldr	r2, [r2, #0]
 25114 0016 42F00102 		orr	r2, r2, #1
 25115 001a 1A60     		str	r2, [r3, #0]
 25116 001c 05E0     		b	.L29
 25117              	.L30:
 327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the DCMI Capture */
 331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->CR &= ~(uint32_t)DCMI_CR_CAPTURE;
 25118              		.loc 1 331 0
 25119 001e 054B     		ldr	r3, .L32
 25120 0020 044A     		ldr	r2, .L32
 25121 0022 1268     		ldr	r2, [r2, #0]
 25122 0024 22F00102 		bic	r2, r2, #1
 25123 0028 1A60     		str	r2, [r3, #0]
 25124              	.L29:
 332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 25125              		.loc 1 333 0
 25126 002a 07F10C07 		add	r7, r7, #12
 25127 002e BD46     		mov	sp, r7
 25128 0030 80BC     		pop	{r7}
 25129 0032 7047     		bx	lr
 25130              	.L33:
 25131              		.align	2
 25132              	.L32:
 25133 0034 00000550 		.word	1342504960
 25134              		.cfi_endproc
 25135              	.LFE118:
 25137              		.section	.text.DCMI_ReadData,"ax",%progbits
 25138              		.align	2
 25139              		.global	DCMI_ReadData
 25140              		.thumb
 25141              		.thumb_func
 25143              	DCMI_ReadData:
 25144              	.LFB119:
 334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Reads the data stored in the DR register.
 337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  None 
 338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval Data register value
 339:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 340:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** uint32_t DCMI_ReadData(void)
 341:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 25145              		.loc 1 341 0
 25146              		.cfi_startproc
 25147              		@ args = 0, pretend = 0, frame = 0
 25148              		@ frame_needed = 1, uses_anonymous_args = 0
 25149              		@ link register save eliminated.
 25150 0000 80B4     		push	{r7}
 25151              	.LCFI26:
 25152              		.cfi_def_cfa_offset 4
 25153 0002 00AF     		add	r7, sp, #0
 25154              		.cfi_offset 7, -4
 25155              	.LCFI27:
 25156              		.cfi_def_cfa_register 7
 342:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   return DCMI->DR;
 25157              		.loc 1 342 0
 25158 0004 024B     		ldr	r3, .L35
 25159 0006 9B6A     		ldr	r3, [r3, #40]
 343:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 25160              		.loc 1 343 0
 25161 0008 1846     		mov	r0, r3
 25162 000a BD46     		mov	sp, r7
 25163 000c 80BC     		pop	{r7}
 25164 000e 7047     		bx	lr
 25165              	.L36:
 25166              		.align	2
 25167              	.L35:
 25168 0010 00000550 		.word	1342504960
 25169              		.cfi_endproc
 25170              	.LFE119:
 25172              		.section	.text.DCMI_ITConfig,"ax",%progbits
 25173              		.align	2
 25174              		.global	DCMI_ITConfig
 25175              		.thumb
 25176              		.thumb_func
 25178              	DCMI_ITConfig:
 25179              	.LFB120:
 344:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 345:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @}
 346:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 347:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 348:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /** @defgroup DCMI_Group3 Interrupts and flags management functions
 349:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *  @brief   Interrupts and flags management functions
 350:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  *
 351:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @verbatim   
 352:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================
 353:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****                   Interrupts and flags management functions
 354:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****  ===============================================================================  
 355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** @endverbatim
 357:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @{
 358:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 359:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 360:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Enables or disables the DCMI interface interrupts.
 362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt sources to be enabled or disabled. 
 363:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 364:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 365:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 366:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 367:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 368:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 369:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  NewState: new state of the specified DCMI interrupts.
 370:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be: ENABLE or DISABLE.
 371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 373:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_ITConfig(uint16_t DCMI_IT, FunctionalState NewState)
 374:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 25180              		.loc 1 374 0
 25181              		.cfi_startproc
 25182              		@ args = 0, pretend = 0, frame = 8
 25183              		@ frame_needed = 1, uses_anonymous_args = 0
 25184              		@ link register save eliminated.
 25185 0000 80B4     		push	{r7}
 25186              	.LCFI28:
 25187              		.cfi_def_cfa_offset 4
 25188 0002 83B0     		sub	sp, sp, #12
 25189              	.LCFI29:
 25190              		.cfi_def_cfa_offset 16
 25191 0004 00AF     		add	r7, sp, #0
 25192              		.cfi_offset 7, -4
 25193              	.LCFI30:
 25194              		.cfi_def_cfa_register 7
 25195 0006 0246     		mov	r2, r0
 25196 0008 0B46     		mov	r3, r1
 25197 000a FA80     		strh	r2, [r7, #6]	@ movhi
 25198 000c 7B71     		strb	r3, [r7, #5]
 375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CONFIG_IT(DCMI_IT));
 377:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 378:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 379:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (NewState != DISABLE)
 25199              		.loc 1 379 0
 25200 000e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 25201 0010 002B     		cmp	r3, #0
 25202 0012 07D0     		beq	.L38
 380:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 381:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Enable the Interrupt sources */
 382:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->IER |= DCMI_IT;
 25203              		.loc 1 382 0
 25204 0014 0B4B     		ldr	r3, .L40
 25205 0016 0B4A     		ldr	r2, .L40
 25206 0018 D168     		ldr	r1, [r2, #12]
 25207 001a FA88     		ldrh	r2, [r7, #6]
 25208 001c 41EA0202 		orr	r2, r1, r2
 25209 0020 DA60     		str	r2, [r3, #12]
 25210 0022 09E0     		b	.L37
 25211              	.L38:
 383:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 384:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 385:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 386:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     /* Disable the Interrupt sources */
 387:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     DCMI->IER &= (uint16_t)(~DCMI_IT);
 25212              		.loc 1 387 0
 25213 0024 074B     		ldr	r3, .L40
 25214 0026 074A     		ldr	r2, .L40
 25215 0028 D168     		ldr	r1, [r2, #12]
 25216 002a FA88     		ldrh	r2, [r7, #6]	@ movhi
 25217 002c 6FEA0202 		mvn	r2, r2
 25218 0030 92B2     		uxth	r2, r2
 25219 0032 01EA0202 		and	r2, r1, r2
 25220 0036 DA60     		str	r2, [r3, #12]
 25221              	.L37:
 388:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }  
 389:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 25222              		.loc 1 389 0
 25223 0038 07F10C07 		add	r7, r7, #12
 25224 003c BD46     		mov	sp, r7
 25225 003e 80BC     		pop	{r7}
 25226 0040 7047     		bx	lr
 25227              	.L41:
 25228 0042 00BF     		.align	2
 25229              	.L40:
 25230 0044 00000550 		.word	1342504960
 25231              		.cfi_endproc
 25232              	.LFE120:
 25234              		.section	.text.DCMI_GetFlagStatus,"ax",%progbits
 25235              		.align	2
 25236              		.global	DCMI_GetFlagStatus
 25237              		.thumb
 25238              		.thumb_func
 25240              	DCMI_GetFlagStatus:
 25241              	.LFB121:
 390:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 391:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 392:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Checks whether the  DCMI interface flag is set or not.
 393:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_FLAG: specifies the flag to check.
 394:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be one of the following values:
 395:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMERI: Frame capture complete Raw flag mask
 396:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFRI: Overflow Raw flag mask
 397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRRI: Synchronization error Raw flag mask
 398:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCRI: VSYNC Raw flag mask
 399:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINERI: Line Raw flag mask
 400:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMEMI: Frame capture complete Masked flag mask
 401:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFMI: Overflow Masked flag mask
 402:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRMI: Synchronization error Masked flag mask
 403:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCMI: VSYNC Masked flag mask
 404:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINEMI: Line Masked flag mask
 405:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_HSYNC: HSYNC flag mask
 406:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNC: VSYNC flag mask
 407:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FNE: Fifo not empty flag mask
 408:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval The new state of DCMI_FLAG (SET or RESET).
 409:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 410:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** FlagStatus DCMI_GetFlagStatus(uint16_t DCMI_FLAG)
 411:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 25242              		.loc 1 411 0
 25243              		.cfi_startproc
 25244              		@ args = 0, pretend = 0, frame = 24
 25245              		@ frame_needed = 1, uses_anonymous_args = 0
 25246              		@ link register save eliminated.
 25247 0000 80B4     		push	{r7}
 25248              	.LCFI31:
 25249              		.cfi_def_cfa_offset 4
 25250 0002 87B0     		sub	sp, sp, #28
 25251              	.LCFI32:
 25252              		.cfi_def_cfa_offset 32
 25253 0004 00AF     		add	r7, sp, #0
 25254              		.cfi_offset 7, -4
 25255              	.LCFI33:
 25256              		.cfi_def_cfa_register 7
 25257 0006 0346     		mov	r3, r0
 25258 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 412:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   FlagStatus bitstatus = RESET;
 25259              		.loc 1 412 0
 25260 000a 4FF00003 		mov	r3, #0
 25261 000e FB75     		strb	r3, [r7, #23]
 413:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   uint32_t dcmireg, tempreg = 0;
 25262              		.loc 1 413 0
 25263 0010 4FF00003 		mov	r3, #0
 25264 0014 3B61     		str	r3, [r7, #16]
 414:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 415:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 416:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_GET_FLAG(DCMI_FLAG));
 417:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 418:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Get the DCMI register index */
 419:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   dcmireg = (((uint16_t)DCMI_FLAG) >> 12);
 25265              		.loc 1 419 0
 25266 0016 FB88     		ldrh	r3, [r7, #6]
 25267 0018 4FEA1333 		lsr	r3, r3, #12
 25268 001c 9BB2     		uxth	r3, r3
 25269 001e FB60     		str	r3, [r7, #12]
 420:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 421:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if (dcmireg == 0x01) /* The FLAG is in RISR register */
 25270              		.loc 1 421 0
 25271 0020 FB68     		ldr	r3, [r7, #12]
 25272 0022 012B     		cmp	r3, #1
 25273 0024 03D1     		bne	.L43
 422:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 423:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     tempreg= DCMI->RISR;
 25274              		.loc 1 423 0
 25275 0026 114B     		ldr	r3, .L48
 25276 0028 9B68     		ldr	r3, [r3, #8]
 25277 002a 3B61     		str	r3, [r7, #16]
 25278 002c 09E0     		b	.L44
 25279              	.L43:
 424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 425:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else if (dcmireg == 0x02) /* The FLAG is in SR register */
 25280              		.loc 1 425 0
 25281 002e FB68     		ldr	r3, [r7, #12]
 25282 0030 022B     		cmp	r3, #2
 25283 0032 03D1     		bne	.L45
 426:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 427:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     tempreg = DCMI->SR;
 25284              		.loc 1 427 0
 25285 0034 0D4B     		ldr	r3, .L48
 25286 0036 5B68     		ldr	r3, [r3, #4]
 25287 0038 3B61     		str	r3, [r7, #16]
 25288 003a 02E0     		b	.L44
 25289              	.L45:
 428:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 429:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else /* The FLAG is in MISR register */
 430:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 431:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     tempreg = DCMI->MISR;
 25290              		.loc 1 431 0
 25291 003c 0B4B     		ldr	r3, .L48
 25292 003e 1B69     		ldr	r3, [r3, #16]
 25293 0040 3B61     		str	r3, [r7, #16]
 25294              	.L44:
 432:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 433:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 434:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if ((tempreg & DCMI_FLAG) != (uint16_t)RESET )
 25295              		.loc 1 434 0
 25296 0042 FA88     		ldrh	r2, [r7, #6]
 25297 0044 3B69     		ldr	r3, [r7, #16]
 25298 0046 02EA0303 		and	r3, r2, r3
 25299 004a 002B     		cmp	r3, #0
 25300 004c 03D0     		beq	.L46
 435:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 436:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     bitstatus = SET;
 25301              		.loc 1 436 0
 25302 004e 4FF00103 		mov	r3, #1
 25303 0052 FB75     		strb	r3, [r7, #23]
 25304 0054 02E0     		b	.L47
 25305              	.L46:
 437:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 438:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 439:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 440:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     bitstatus = RESET;
 25306              		.loc 1 440 0
 25307 0056 4FF00003 		mov	r3, #0
 25308 005a FB75     		strb	r3, [r7, #23]
 25309              	.L47:
 441:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 442:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Return the DCMI_FLAG status */
 443:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   return  bitstatus;
 25310              		.loc 1 443 0
 25311 005c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 444:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 25312              		.loc 1 444 0
 25313 005e 1846     		mov	r0, r3
 25314 0060 07F11C07 		add	r7, r7, #28
 25315 0064 BD46     		mov	sp, r7
 25316 0066 80BC     		pop	{r7}
 25317 0068 7047     		bx	lr
 25318              	.L49:
 25319 006a 00BF     		.align	2
 25320              	.L48:
 25321 006c 00000550 		.word	1342504960
 25322              		.cfi_endproc
 25323              	.LFE121:
 25325              		.section	.text.DCMI_ClearFlag,"ax",%progbits
 25326              		.align	2
 25327              		.global	DCMI_ClearFlag
 25328              		.thumb
 25329              		.thumb_func
 25331              	DCMI_ClearFlag:
 25332              	.LFB122:
 445:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 446:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 447:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Clears the DCMI's pending flags.
 448:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_FLAG: specifies the flag to clear.
 449:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 450:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_FRAMERI: Frame capture complete Raw flag mask
 451:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_OVFRI: Overflow Raw flag mask
 452:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_ERRRI: Synchronization error Raw flag mask
 453:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_VSYNCRI: VSYNC Raw flag mask
 454:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_FLAG_LINERI: Line Raw flag mask
 455:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 456:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 457:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_ClearFlag(uint16_t DCMI_FLAG)
 458:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 25333              		.loc 1 458 0
 25334              		.cfi_startproc
 25335              		@ args = 0, pretend = 0, frame = 8
 25336              		@ frame_needed = 1, uses_anonymous_args = 0
 25337              		@ link register save eliminated.
 25338 0000 80B4     		push	{r7}
 25339              	.LCFI34:
 25340              		.cfi_def_cfa_offset 4
 25341 0002 83B0     		sub	sp, sp, #12
 25342              	.LCFI35:
 25343              		.cfi_def_cfa_offset 16
 25344 0004 00AF     		add	r7, sp, #0
 25345              		.cfi_offset 7, -4
 25346              	.LCFI36:
 25347              		.cfi_def_cfa_register 7
 25348 0006 0346     		mov	r3, r0
 25349 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 459:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 460:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_CLEAR_FLAG(DCMI_FLAG));
 461:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 462:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Clear the flag by writing in the ICR register 1 in the corresponding 
 463:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   Flag position*/
 464:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 465:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ICR = DCMI_FLAG;
 25350              		.loc 1 465 0
 25351 000a 044B     		ldr	r3, .L51
 25352 000c FA88     		ldrh	r2, [r7, #6]
 25353 000e 5A61     		str	r2, [r3, #20]
 466:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 25354              		.loc 1 466 0
 25355 0010 07F10C07 		add	r7, r7, #12
 25356 0014 BD46     		mov	sp, r7
 25357 0016 80BC     		pop	{r7}
 25358 0018 7047     		bx	lr
 25359              	.L52:
 25360 001a 00BF     		.align	2
 25361              	.L51:
 25362 001c 00000550 		.word	1342504960
 25363              		.cfi_endproc
 25364              	.LFE122:
 25366              		.section	.text.DCMI_GetITStatus,"ax",%progbits
 25367              		.align	2
 25368              		.global	DCMI_GetITStatus
 25369              		.thumb
 25370              		.thumb_func
 25372              	DCMI_GetITStatus:
 25373              	.LFB123:
 467:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 468:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 469:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Checks whether the DCMI interrupt has occurred or not.
 470:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt source to check.
 471:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be one of the following values:
 472:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 473:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 474:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 475:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 476:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 477:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval The new state of DCMI_IT (SET or RESET).
 478:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 479:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** ITStatus DCMI_GetITStatus(uint16_t DCMI_IT)
 480:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 25374              		.loc 1 480 0
 25375              		.cfi_startproc
 25376              		@ args = 0, pretend = 0, frame = 16
 25377              		@ frame_needed = 1, uses_anonymous_args = 0
 25378              		@ link register save eliminated.
 25379 0000 80B4     		push	{r7}
 25380              	.LCFI37:
 25381              		.cfi_def_cfa_offset 4
 25382 0002 85B0     		sub	sp, sp, #20
 25383              	.LCFI38:
 25384              		.cfi_def_cfa_offset 24
 25385 0004 00AF     		add	r7, sp, #0
 25386              		.cfi_offset 7, -4
 25387              	.LCFI39:
 25388              		.cfi_def_cfa_register 7
 25389 0006 0346     		mov	r3, r0
 25390 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 481:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   ITStatus bitstatus = RESET;
 25391              		.loc 1 481 0
 25392 000a 4FF00003 		mov	r3, #0
 25393 000e FB73     		strb	r3, [r7, #15]
 482:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   uint32_t itstatus = 0;
 25394              		.loc 1 482 0
 25395 0010 4FF00003 		mov	r3, #0
 25396 0014 BB60     		str	r3, [r7, #8]
 483:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 484:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Check the parameters */
 485:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   assert_param(IS_DCMI_GET_IT(DCMI_IT));
 486:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 487:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   itstatus = DCMI->MISR & DCMI_IT; /* Only masked interrupts are checked */
 25397              		.loc 1 487 0
 25398 0016 0B4B     		ldr	r3, .L56
 25399 0018 1A69     		ldr	r2, [r3, #16]
 25400 001a FB88     		ldrh	r3, [r7, #6]
 25401 001c 02EA0303 		and	r3, r2, r3
 25402 0020 BB60     		str	r3, [r7, #8]
 488:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 489:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   if ((itstatus != (uint16_t)RESET))
 25403              		.loc 1 489 0
 25404 0022 BB68     		ldr	r3, [r7, #8]
 25405 0024 002B     		cmp	r3, #0
 25406 0026 03D0     		beq	.L54
 490:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 491:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     bitstatus = SET;
 25407              		.loc 1 491 0
 25408 0028 4FF00103 		mov	r3, #1
 25409 002c FB73     		strb	r3, [r7, #15]
 25410 002e 02E0     		b	.L55
 25411              	.L54:
 492:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 493:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   else
 494:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   {
 495:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****     bitstatus = RESET;
 25412              		.loc 1 495 0
 25413 0030 4FF00003 		mov	r3, #0
 25414 0034 FB73     		strb	r3, [r7, #15]
 25415              	.L55:
 496:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   }
 497:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   return bitstatus;
 25416              		.loc 1 497 0
 25417 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 498:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 25418              		.loc 1 498 0
 25419 0038 1846     		mov	r0, r3
 25420 003a 07F11407 		add	r7, r7, #20
 25421 003e BD46     		mov	sp, r7
 25422 0040 80BC     		pop	{r7}
 25423 0042 7047     		bx	lr
 25424              	.L57:
 25425              		.align	2
 25426              	.L56:
 25427 0044 00000550 		.word	1342504960
 25428              		.cfi_endproc
 25429              	.LFE123:
 25431              		.section	.text.DCMI_ClearITPendingBit,"ax",%progbits
 25432              		.align	2
 25433              		.global	DCMI_ClearITPendingBit
 25434              		.thumb
 25435              		.thumb_func
 25437              	DCMI_ClearITPendingBit:
 25438              	.LFB124:
 499:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** 
 500:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** /**
 501:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @brief  Clears the DCMI's interrupt pending bits.
 502:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @param  DCMI_IT: specifies the DCMI interrupt pending bit to clear.
 503:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *          This parameter can be any combination of the following values:
 504:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_FRAME: Frame capture complete interrupt mask
 505:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_OVF: Overflow interrupt mask
 506:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_ERR: Synchronization error interrupt mask
 507:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_VSYNC: VSYNC interrupt mask
 508:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   *            @arg DCMI_IT_LINE: Line interrupt mask
 509:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   * @retval None
 510:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   */
 511:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** void DCMI_ClearITPendingBit(uint16_t DCMI_IT)
 512:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** {
 25439              		.loc 1 512 0
 25440              		.cfi_startproc
 25441              		@ args = 0, pretend = 0, frame = 8
 25442              		@ frame_needed = 1, uses_anonymous_args = 0
 25443              		@ link register save eliminated.
 25444 0000 80B4     		push	{r7}
 25445              	.LCFI40:
 25446              		.cfi_def_cfa_offset 4
 25447 0002 83B0     		sub	sp, sp, #12
 25448              	.LCFI41:
 25449              		.cfi_def_cfa_offset 16
 25450 0004 00AF     		add	r7, sp, #0
 25451              		.cfi_offset 7, -4
 25452              	.LCFI42:
 25453              		.cfi_def_cfa_register 7
 25454 0006 0346     		mov	r3, r0
 25455 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 513:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   /* Clear the interrupt pending Bit by writing in the ICR register 1 in the 
 514:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   corresponding pending Bit position*/
 515:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   
 516:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c ****   DCMI->ICR = DCMI_IT;
 25456              		.loc 1 516 0
 25457 000a 044B     		ldr	r3, .L59
 25458 000c FA88     		ldrh	r2, [r7, #6]
 25459 000e 5A61     		str	r2, [r3, #20]
 517:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dcmi.c **** }
 25460              		.loc 1 517 0
 25461 0010 07F10C07 		add	r7, r7, #12
 25462 0014 BD46     		mov	sp, r7
 25463 0016 80BC     		pop	{r7}
 25464 0018 7047     		bx	lr
 25465              	.L60:
 25466 001a 00BF     		.align	2
 25467              	.L59:
 25468 001c 00000550 		.word	1342504960
 25469              		.cfi_endproc
 25470              	.LFE124:
 25472              		.text
 25473              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_dcmi.c
     /tmp/ccdbv5xi.s:24575  .text.DCMI_DeInit:00000000 $t
     /tmp/ccdbv5xi.s:24580  .text.DCMI_DeInit:00000000 DCMI_DeInit
     /tmp/ccdbv5xi.s:24629  .text.DCMI_DeInit:00000044 $d
     /tmp/ccdbv5xi.s:24634  .text.DCMI_Init:00000000 $t
     /tmp/ccdbv5xi.s:24639  .text.DCMI_Init:00000000 DCMI_Init
     /tmp/ccdbv5xi.s:24729  .text.DCMI_Init:00000088 $d
     /tmp/ccdbv5xi.s:24734  .text.DCMI_StructInit:00000000 $t
     /tmp/ccdbv5xi.s:24739  .text.DCMI_StructInit:00000000 DCMI_StructInit
     /tmp/ccdbv5xi.s:24794  .text.DCMI_CROPConfig:00000000 $t
     /tmp/ccdbv5xi.s:24799  .text.DCMI_CROPConfig:00000000 DCMI_CROPConfig
     /tmp/ccdbv5xi.s:24849  .text.DCMI_CROPConfig:00000040 $d
     /tmp/ccdbv5xi.s:24854  .text.DCMI_CROPCmd:00000000 $t
     /tmp/ccdbv5xi.s:24859  .text.DCMI_CROPCmd:00000000 DCMI_CROPCmd
     /tmp/ccdbv5xi.s:24905  .text.DCMI_CROPCmd:00000034 $d
     /tmp/ccdbv5xi.s:24910  .text.DCMI_SetEmbeddedSynchroCodes:00000000 $t
     /tmp/ccdbv5xi.s:24915  .text.DCMI_SetEmbeddedSynchroCodes:00000000 DCMI_SetEmbeddedSynchroCodes
     /tmp/ccdbv5xi.s:24965  .text.DCMI_SetEmbeddedSynchroCodes:0000003c $d
     /tmp/ccdbv5xi.s:24970  .text.DCMI_JPEGCmd:00000000 $t
     /tmp/ccdbv5xi.s:24975  .text.DCMI_JPEGCmd:00000000 DCMI_JPEGCmd
     /tmp/ccdbv5xi.s:25021  .text.DCMI_JPEGCmd:00000034 $d
     /tmp/ccdbv5xi.s:25026  .text.DCMI_Cmd:00000000 $t
     /tmp/ccdbv5xi.s:25031  .text.DCMI_Cmd:00000000 DCMI_Cmd
     /tmp/ccdbv5xi.s:25077  .text.DCMI_Cmd:00000034 $d
     /tmp/ccdbv5xi.s:25082  .text.DCMI_CaptureCmd:00000000 $t
     /tmp/ccdbv5xi.s:25087  .text.DCMI_CaptureCmd:00000000 DCMI_CaptureCmd
     /tmp/ccdbv5xi.s:25133  .text.DCMI_CaptureCmd:00000034 $d
     /tmp/ccdbv5xi.s:25138  .text.DCMI_ReadData:00000000 $t
     /tmp/ccdbv5xi.s:25143  .text.DCMI_ReadData:00000000 DCMI_ReadData
     /tmp/ccdbv5xi.s:25168  .text.DCMI_ReadData:00000010 $d
     /tmp/ccdbv5xi.s:25173  .text.DCMI_ITConfig:00000000 $t
     /tmp/ccdbv5xi.s:25178  .text.DCMI_ITConfig:00000000 DCMI_ITConfig
     /tmp/ccdbv5xi.s:25230  .text.DCMI_ITConfig:00000044 $d
     /tmp/ccdbv5xi.s:25235  .text.DCMI_GetFlagStatus:00000000 $t
     /tmp/ccdbv5xi.s:25240  .text.DCMI_GetFlagStatus:00000000 DCMI_GetFlagStatus
     /tmp/ccdbv5xi.s:25321  .text.DCMI_GetFlagStatus:0000006c $d
     /tmp/ccdbv5xi.s:25326  .text.DCMI_ClearFlag:00000000 $t
     /tmp/ccdbv5xi.s:25331  .text.DCMI_ClearFlag:00000000 DCMI_ClearFlag
     /tmp/ccdbv5xi.s:25362  .text.DCMI_ClearFlag:0000001c $d
     /tmp/ccdbv5xi.s:25367  .text.DCMI_GetITStatus:00000000 $t
     /tmp/ccdbv5xi.s:25372  .text.DCMI_GetITStatus:00000000 DCMI_GetITStatus
     /tmp/ccdbv5xi.s:25427  .text.DCMI_GetITStatus:00000044 $d
     /tmp/ccdbv5xi.s:25432  .text.DCMI_ClearITPendingBit:00000000 $t
     /tmp/ccdbv5xi.s:25437  .text.DCMI_ClearITPendingBit:00000000 DCMI_ClearITPendingBit
     /tmp/ccdbv5xi.s:25468  .text.DCMI_ClearITPendingBit:0000001c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
