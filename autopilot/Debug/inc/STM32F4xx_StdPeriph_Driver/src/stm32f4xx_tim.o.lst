   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_tim.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
 24593              		.align	2
 24594              		.global	TIM_DeInit
 24595              		.thumb
 24596              		.thumb_func
 24598              	TIM_DeInit:
 24599              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 24600              		.loc 1 195 0
 24601              		.cfi_startproc
 24602              		@ args = 0, pretend = 0, frame = 8
 24603              		@ frame_needed = 1, uses_anonymous_args = 0
 24604 0000 80B5     		push	{r7, lr}
 24605              	.LCFI0:
 24606              		.cfi_def_cfa_offset 8
 24607 0002 82B0     		sub	sp, sp, #8
 24608              	.LCFI1:
 24609              		.cfi_def_cfa_offset 16
 24610 0004 00AF     		add	r7, sp, #0
 24611              		.cfi_offset 14, -4
 24612              		.cfi_offset 7, -8
 24613              	.LCFI2:
 24614              		.cfi_def_cfa_register 7
 24615 0006 7860     		str	r0, [r7, #4]
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
 24616              		.loc 1 199 0
 24617 0008 7A68     		ldr	r2, [r7, #4]
 24618 000a 784B     		ldr	r3, .L16
 24619 000c 9A42     		cmp	r2, r3
 24620 000e 0CD1     		bne	.L2
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
 24621              		.loc 1 201 0
 24622 0010 4FF00100 		mov	r0, #1
 24623 0014 4FF00101 		mov	r1, #1
 24624 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
 24625              		.loc 1 202 0
 24626 001c 4FF00100 		mov	r0, #1
 24627 0020 4FF00001 		mov	r1, #0
 24628 0024 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 24629 0028 DBE0     		b	.L1
 24630              	.L2:
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
 24631              		.loc 1 204 0
 24632 002a 7B68     		ldr	r3, [r7, #4]
 24633 002c B3F1804F 		cmp	r3, #1073741824
 24634 0030 0CD1     		bne	.L4
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
 24635              		.loc 1 206 0
 24636 0032 4FF00100 		mov	r0, #1
 24637 0036 4FF00101 		mov	r1, #1
 24638 003a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
 24639              		.loc 1 207 0
 24640 003e 4FF00100 		mov	r0, #1
 24641 0042 4FF00001 		mov	r1, #0
 24642 0046 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24643 004a CAE0     		b	.L1
 24644              	.L4:
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
 24645              		.loc 1 209 0
 24646 004c 7A68     		ldr	r2, [r7, #4]
 24647 004e 684B     		ldr	r3, .L16+4
 24648 0050 9A42     		cmp	r2, r3
 24649 0052 0CD1     		bne	.L5
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
 24650              		.loc 1 211 0
 24651 0054 4FF00200 		mov	r0, #2
 24652 0058 4FF00101 		mov	r1, #1
 24653 005c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
 24654              		.loc 1 212 0
 24655 0060 4FF00200 		mov	r0, #2
 24656 0064 4FF00001 		mov	r1, #0
 24657 0068 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24658 006c B9E0     		b	.L1
 24659              	.L5:
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
 24660              		.loc 1 214 0
 24661 006e 7A68     		ldr	r2, [r7, #4]
 24662 0070 604B     		ldr	r3, .L16+8
 24663 0072 9A42     		cmp	r2, r3
 24664 0074 0CD1     		bne	.L6
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
 24665              		.loc 1 216 0
 24666 0076 4FF00400 		mov	r0, #4
 24667 007a 4FF00101 		mov	r1, #1
 24668 007e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 24669              		.loc 1 217 0
 24670 0082 4FF00400 		mov	r0, #4
 24671 0086 4FF00001 		mov	r1, #0
 24672 008a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24673 008e A8E0     		b	.L1
 24674              	.L6:
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 24675              		.loc 1 219 0
 24676 0090 7A68     		ldr	r2, [r7, #4]
 24677 0092 594B     		ldr	r3, .L16+12
 24678 0094 9A42     		cmp	r2, r3
 24679 0096 0CD1     		bne	.L7
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 24680              		.loc 1 221 0
 24681 0098 4FF00800 		mov	r0, #8
 24682 009c 4FF00101 		mov	r1, #1
 24683 00a0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 24684              		.loc 1 222 0
 24685 00a4 4FF00800 		mov	r0, #8
 24686 00a8 4FF00001 		mov	r1, #0
 24687 00ac FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24688 00b0 97E0     		b	.L1
 24689              	.L7:
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 24690              		.loc 1 224 0
 24691 00b2 7A68     		ldr	r2, [r7, #4]
 24692 00b4 514B     		ldr	r3, .L16+16
 24693 00b6 9A42     		cmp	r2, r3
 24694 00b8 0CD1     		bne	.L8
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 24695              		.loc 1 226 0
 24696 00ba 4FF01000 		mov	r0, #16
 24697 00be 4FF00101 		mov	r1, #1
 24698 00c2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 24699              		.loc 1 227 0
 24700 00c6 4FF01000 		mov	r0, #16
 24701 00ca 4FF00001 		mov	r1, #0
 24702 00ce FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24703 00d2 86E0     		b	.L1
 24704              	.L8:
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 24705              		.loc 1 229 0
 24706 00d4 7A68     		ldr	r2, [r7, #4]
 24707 00d6 4A4B     		ldr	r3, .L16+20
 24708 00d8 9A42     		cmp	r2, r3
 24709 00da 0CD1     		bne	.L9
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 24710              		.loc 1 231 0
 24711 00dc 4FF02000 		mov	r0, #32
 24712 00e0 4FF00101 		mov	r1, #1
 24713 00e4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 24714              		.loc 1 232 0
 24715 00e8 4FF02000 		mov	r0, #32
 24716 00ec 4FF00001 		mov	r1, #0
 24717 00f0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24718 00f4 75E0     		b	.L1
 24719              	.L9:
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 24720              		.loc 1 234 0
 24721 00f6 7A68     		ldr	r2, [r7, #4]
 24722 00f8 424B     		ldr	r3, .L16+24
 24723 00fa 9A42     		cmp	r2, r3
 24724 00fc 0CD1     		bne	.L10
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 24725              		.loc 1 236 0
 24726 00fe 4FF00200 		mov	r0, #2
 24727 0102 4FF00101 		mov	r1, #1
 24728 0106 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 24729              		.loc 1 237 0
 24730 010a 4FF00200 		mov	r0, #2
 24731 010e 4FF00001 		mov	r1, #0
 24732 0112 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 24733 0116 64E0     		b	.L1
 24734              	.L10:
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 24735              		.loc 1 239 0
 24736 0118 7A68     		ldr	r2, [r7, #4]
 24737 011a 3B4B     		ldr	r3, .L16+28
 24738 011c 9A42     		cmp	r2, r3
 24739 011e 0CD1     		bne	.L11
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 24740              		.loc 1 241 0
 24741 0120 4FF48030 		mov	r0, #65536
 24742 0124 4FF00101 		mov	r1, #1
 24743 0128 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 24744              		.loc 1 242 0
 24745 012c 4FF48030 		mov	r0, #65536
 24746 0130 4FF00001 		mov	r1, #0
 24747 0134 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 24748 0138 53E0     		b	.L1
 24749              	.L11:
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 24750              		.loc 1 244 0
 24751 013a 7A68     		ldr	r2, [r7, #4]
 24752 013c 334B     		ldr	r3, .L16+32
 24753 013e 9A42     		cmp	r2, r3
 24754 0140 0CD1     		bne	.L12
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 24755              		.loc 1 246 0
 24756 0142 4FF40030 		mov	r0, #131072
 24757 0146 4FF00101 		mov	r1, #1
 24758 014a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 24759              		.loc 1 247 0
 24760 014e 4FF40030 		mov	r0, #131072
 24761 0152 4FF00001 		mov	r1, #0
 24762 0156 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 24763 015a 42E0     		b	.L1
 24764              	.L12:
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 24765              		.loc 1 249 0
 24766 015c 7A68     		ldr	r2, [r7, #4]
 24767 015e 2C4B     		ldr	r3, .L16+36
 24768 0160 9A42     		cmp	r2, r3
 24769 0162 0CD1     		bne	.L13
 250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 24770              		.loc 1 251 0
 24771 0164 4FF48020 		mov	r0, #262144
 24772 0168 4FF00101 		mov	r1, #1
 24773 016c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 24774              		.loc 1 252 0
 24775 0170 4FF48020 		mov	r0, #262144
 24776 0174 4FF00001 		mov	r1, #0
 24777 0178 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 24778 017c 31E0     		b	.L1
 24779              	.L13:
 253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 24780              		.loc 1 254 0
 24781 017e 7A68     		ldr	r2, [r7, #4]
 24782 0180 244B     		ldr	r3, .L16+40
 24783 0182 9A42     		cmp	r2, r3
 24784 0184 0CD1     		bne	.L14
 255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 24785              		.loc 1 256 0
 24786 0186 4FF04000 		mov	r0, #64
 24787 018a 4FF00101 		mov	r1, #1
 24788 018e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 24789              		.loc 1 257 0
 24790 0192 4FF04000 		mov	r0, #64
 24791 0196 4FF00001 		mov	r1, #0
 24792 019a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24793 019e 20E0     		b	.L1
 24794              	.L14:
 258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 24795              		.loc 1 259 0
 24796 01a0 7A68     		ldr	r2, [r7, #4]
 24797 01a2 1D4B     		ldr	r3, .L16+44
 24798 01a4 9A42     		cmp	r2, r3
 24799 01a6 0CD1     		bne	.L15
 260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 24800              		.loc 1 261 0
 24801 01a8 4FF08000 		mov	r0, #128
 24802 01ac 4FF00101 		mov	r1, #1
 24803 01b0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 24804              		.loc 1 262 0
 24805 01b4 4FF08000 		mov	r0, #128
 24806 01b8 4FF00001 		mov	r1, #0
 24807 01bc FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24808 01c0 0FE0     		b	.L1
 24809              	.L15:
 263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 24810              		.loc 1 266 0
 24811 01c2 7A68     		ldr	r2, [r7, #4]
 24812 01c4 154B     		ldr	r3, .L16+48
 24813 01c6 9A42     		cmp	r2, r3
 24814 01c8 0BD1     		bne	.L1
 267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 24815              		.loc 1 268 0
 24816 01ca 4FF48070 		mov	r0, #256
 24817 01ce 4FF00101 		mov	r1, #1
 24818 01d2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 24819              		.loc 1 269 0
 24820 01d6 4FF48070 		mov	r0, #256
 24821 01da 4FF00001 		mov	r1, #0
 24822 01de FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24823              	.L1:
 270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 24824              		.loc 1 272 0
 24825 01e2 07F10807 		add	r7, r7, #8
 24826 01e6 BD46     		mov	sp, r7
 24827 01e8 80BD     		pop	{r7, pc}
 24828              	.L17:
 24829 01ea 00BF     		.align	2
 24830              	.L16:
 24831 01ec 00000140 		.word	1073807360
 24832 01f0 00040040 		.word	1073742848
 24833 01f4 00080040 		.word	1073743872
 24834 01f8 000C0040 		.word	1073744896
 24835 01fc 00100040 		.word	1073745920
 24836 0200 00140040 		.word	1073746944
 24837 0204 00040140 		.word	1073808384
 24838 0208 00400140 		.word	1073823744
 24839 020c 00440140 		.word	1073824768
 24840 0210 00480140 		.word	1073825792
 24841 0214 00180040 		.word	1073747968
 24842 0218 001C0040 		.word	1073748992
 24843 021c 00200040 		.word	1073750016
 24844              		.cfi_endproc
 24845              	.LFE110:
 24847              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 24848              		.align	2
 24849              		.global	TIM_TimeBaseInit
 24850              		.thumb
 24851              		.thumb_func
 24853              	TIM_TimeBaseInit:
 24854              	.LFB111:
 273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 24855              		.loc 1 283 0
 24856              		.cfi_startproc
 24857              		@ args = 0, pretend = 0, frame = 16
 24858              		@ frame_needed = 1, uses_anonymous_args = 0
 24859              		@ link register save eliminated.
 24860 0000 80B4     		push	{r7}
 24861              	.LCFI3:
 24862              		.cfi_def_cfa_offset 4
 24863 0002 85B0     		sub	sp, sp, #20
 24864              	.LCFI4:
 24865              		.cfi_def_cfa_offset 24
 24866 0004 00AF     		add	r7, sp, #0
 24867              		.cfi_offset 7, -4
 24868              	.LCFI5:
 24869              		.cfi_def_cfa_register 7
 24870 0006 7860     		str	r0, [r7, #4]
 24871 0008 3960     		str	r1, [r7, #0]
 284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 24872              		.loc 1 284 0
 24873 000a 4FF00003 		mov	r3, #0
 24874 000e FB81     		strh	r3, [r7, #14]	@ movhi
 285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 24875              		.loc 1 291 0
 24876 0010 7B68     		ldr	r3, [r7, #4]
 24877 0012 1B88     		ldrh	r3, [r3, #0]	@ movhi
 24878 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 24879              		.loc 1 293 0
 24880 0016 7A68     		ldr	r2, [r7, #4]
 24881 0018 294B     		ldr	r3, .L24
 24882 001a 9A42     		cmp	r2, r3
 24883 001c 13D0     		beq	.L19
 24884              		.loc 1 293 0 is_stmt 0 discriminator 1
 24885 001e 7A68     		ldr	r2, [r7, #4]
 24886 0020 284B     		ldr	r3, .L24+4
 24887 0022 9A42     		cmp	r2, r3
 24888 0024 0FD0     		beq	.L19
 24889 0026 7B68     		ldr	r3, [r7, #4]
 24890 0028 B3F1804F 		cmp	r3, #1073741824
 24891 002c 0BD0     		beq	.L19
 294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 24892              		.loc 1 294 0 is_stmt 1
 24893 002e 7A68     		ldr	r2, [r7, #4]
 24894 0030 254B     		ldr	r3, .L24+8
 24895 0032 9A42     		cmp	r2, r3
 24896 0034 07D0     		beq	.L19
 24897              		.loc 1 294 0 is_stmt 0 discriminator 1
 24898 0036 7A68     		ldr	r2, [r7, #4]
 24899 0038 244B     		ldr	r3, .L24+12
 24900 003a 9A42     		cmp	r2, r3
 24901 003c 03D0     		beq	.L19
 295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 24902              		.loc 1 295 0 is_stmt 1
 24903 003e 7A68     		ldr	r2, [r7, #4]
 24904 0040 234B     		ldr	r3, .L24+16
 24905 0042 9A42     		cmp	r2, r3
 24906 0044 09D1     		bne	.L20
 24907              	.L19:
 296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 24908              		.loc 1 298 0
 24909 0046 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24910 0048 23F07003 		bic	r3, r3, #112
 24911 004c FB81     		strh	r3, [r7, #14]	@ movhi
 299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 24912              		.loc 1 299 0
 24913 004e 3B68     		ldr	r3, [r7, #0]
 24914 0050 5A88     		ldrh	r2, [r3, #2]
 24915 0052 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24916 0054 42EA0303 		orr	r3, r2, r3
 24917 0058 FB81     		strh	r3, [r7, #14]	@ movhi
 24918              	.L20:
 300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 24919              		.loc 1 302 0
 24920 005a 7A68     		ldr	r2, [r7, #4]
 24921 005c 1D4B     		ldr	r3, .L24+20
 24922 005e 9A42     		cmp	r2, r3
 24923 0060 0DD0     		beq	.L21
 24924              		.loc 1 302 0 is_stmt 0 discriminator 1
 24925 0062 7A68     		ldr	r2, [r7, #4]
 24926 0064 1C4B     		ldr	r3, .L24+24
 24927 0066 9A42     		cmp	r2, r3
 24928 0068 09D0     		beq	.L21
 303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 24929              		.loc 1 305 0 is_stmt 1
 24930 006a FB89     		ldrh	r3, [r7, #14]	@ movhi
 24931 006c 23F44073 		bic	r3, r3, #768
 24932 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 24933              		.loc 1 306 0
 24934 0072 3B68     		ldr	r3, [r7, #0]
 24935 0074 1A89     		ldrh	r2, [r3, #8]
 24936 0076 FB89     		ldrh	r3, [r7, #14]	@ movhi
 24937 0078 42EA0303 		orr	r3, r2, r3
 24938 007c FB81     		strh	r3, [r7, #14]	@ movhi
 24939              	.L21:
 307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 24940              		.loc 1 309 0
 24941 007e 7B68     		ldr	r3, [r7, #4]
 24942 0080 FA89     		ldrh	r2, [r7, #14]	@ movhi
 24943 0082 1A80     		strh	r2, [r3, #0]	@ movhi
 310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 24944              		.loc 1 312 0
 24945 0084 3B68     		ldr	r3, [r7, #0]
 24946 0086 5A68     		ldr	r2, [r3, #4]
 24947 0088 7B68     		ldr	r3, [r7, #4]
 24948 008a DA62     		str	r2, [r3, #44]
 313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 24949              		.loc 1 315 0
 24950 008c 3B68     		ldr	r3, [r7, #0]
 24951 008e 1A88     		ldrh	r2, [r3, #0]
 24952 0090 7B68     		ldr	r3, [r7, #4]
 24953 0092 1A85     		strh	r2, [r3, #40]	@ movhi
 316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 24954              		.loc 1 317 0
 24955 0094 7A68     		ldr	r2, [r7, #4]
 24956 0096 0A4B     		ldr	r3, .L24
 24957 0098 9A42     		cmp	r2, r3
 24958 009a 03D0     		beq	.L22
 24959              		.loc 1 317 0 is_stmt 0 discriminator 1
 24960 009c 7A68     		ldr	r2, [r7, #4]
 24961 009e 094B     		ldr	r3, .L24+4
 24962 00a0 9A42     		cmp	r2, r3
 24963 00a2 04D1     		bne	.L23
 24964              	.L22:
 318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 24965              		.loc 1 320 0 is_stmt 1
 24966 00a4 3B68     		ldr	r3, [r7, #0]
 24967 00a6 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 24968 00a8 1A46     		mov	r2, r3
 24969 00aa 7B68     		ldr	r3, [r7, #4]
 24970 00ac 1A86     		strh	r2, [r3, #48]	@ movhi
 24971              	.L23:
 321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 24972              		.loc 1 325 0
 24973 00ae 7B68     		ldr	r3, [r7, #4]
 24974 00b0 4FF00102 		mov	r2, #1
 24975 00b4 9A82     		strh	r2, [r3, #20]	@ movhi
 326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 24976              		.loc 1 326 0
 24977 00b6 07F11407 		add	r7, r7, #20
 24978 00ba BD46     		mov	sp, r7
 24979 00bc 80BC     		pop	{r7}
 24980 00be 7047     		bx	lr
 24981              	.L25:
 24982              		.align	2
 24983              	.L24:
 24984 00c0 00000140 		.word	1073807360
 24985 00c4 00040140 		.word	1073808384
 24986 00c8 00040040 		.word	1073742848
 24987 00cc 00080040 		.word	1073743872
 24988 00d0 000C0040 		.word	1073744896
 24989 00d4 00100040 		.word	1073745920
 24990 00d8 00140040 		.word	1073746944
 24991              		.cfi_endproc
 24992              	.LFE111:
 24994              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 24995              		.align	2
 24996              		.global	TIM_TimeBaseStructInit
 24997              		.thumb
 24998              		.thumb_func
 25000              	TIM_TimeBaseStructInit:
 25001              	.LFB112:
 327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25002              		.loc 1 335 0
 25003              		.cfi_startproc
 25004              		@ args = 0, pretend = 0, frame = 8
 25005              		@ frame_needed = 1, uses_anonymous_args = 0
 25006              		@ link register save eliminated.
 25007 0000 80B4     		push	{r7}
 25008              	.LCFI6:
 25009              		.cfi_def_cfa_offset 4
 25010 0002 83B0     		sub	sp, sp, #12
 25011              	.LCFI7:
 25012              		.cfi_def_cfa_offset 16
 25013 0004 00AF     		add	r7, sp, #0
 25014              		.cfi_offset 7, -4
 25015              	.LCFI8:
 25016              		.cfi_def_cfa_register 7
 25017 0006 7860     		str	r0, [r7, #4]
 336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 25018              		.loc 1 337 0
 25019 0008 7B68     		ldr	r3, [r7, #4]
 25020 000a 4FF0FF32 		mov	r2, #-1
 25021 000e 5A60     		str	r2, [r3, #4]
 338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 25022              		.loc 1 338 0
 25023 0010 7B68     		ldr	r3, [r7, #4]
 25024 0012 4FF00002 		mov	r2, #0
 25025 0016 1A80     		strh	r2, [r3, #0]	@ movhi
 339:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 25026              		.loc 1 339 0
 25027 0018 7B68     		ldr	r3, [r7, #4]
 25028 001a 4FF00002 		mov	r2, #0
 25029 001e 1A81     		strh	r2, [r3, #8]	@ movhi
 340:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 25030              		.loc 1 340 0
 25031 0020 7B68     		ldr	r3, [r7, #4]
 25032 0022 4FF00002 		mov	r2, #0
 25033 0026 5A80     		strh	r2, [r3, #2]	@ movhi
 341:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 25034              		.loc 1 341 0
 25035 0028 7B68     		ldr	r3, [r7, #4]
 25036 002a 4FF00002 		mov	r2, #0
 25037 002e 9A72     		strb	r2, [r3, #10]
 342:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25038              		.loc 1 342 0
 25039 0030 07F10C07 		add	r7, r7, #12
 25040 0034 BD46     		mov	sp, r7
 25041 0036 80BC     		pop	{r7}
 25042 0038 7047     		bx	lr
 25043              		.cfi_endproc
 25044              	.LFE112:
 25046 003a 00BF     		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 25047              		.align	2
 25048              		.global	TIM_PrescalerConfig
 25049              		.thumb
 25050              		.thumb_func
 25052              	TIM_PrescalerConfig:
 25053              	.LFB113:
 343:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25054              		.loc 1 355 0
 25055              		.cfi_startproc
 25056              		@ args = 0, pretend = 0, frame = 8
 25057              		@ frame_needed = 1, uses_anonymous_args = 0
 25058              		@ link register save eliminated.
 25059 0000 80B4     		push	{r7}
 25060              	.LCFI9:
 25061              		.cfi_def_cfa_offset 4
 25062 0002 83B0     		sub	sp, sp, #12
 25063              	.LCFI10:
 25064              		.cfi_def_cfa_offset 16
 25065 0004 00AF     		add	r7, sp, #0
 25066              		.cfi_offset 7, -4
 25067              	.LCFI11:
 25068              		.cfi_def_cfa_register 7
 25069 0006 7860     		str	r0, [r7, #4]
 25070 0008 1346     		mov	r3, r2
 25071 000a 0A46     		mov	r2, r1	@ movhi
 25072 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 25073 000e 3B80     		strh	r3, [r7, #0]	@ movhi
 356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 25074              		.loc 1 360 0
 25075 0010 7B68     		ldr	r3, [r7, #4]
 25076 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
 25077 0014 1A85     		strh	r2, [r3, #40]	@ movhi
 361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 25078              		.loc 1 362 0
 25079 0016 7B68     		ldr	r3, [r7, #4]
 25080 0018 3A88     		ldrh	r2, [r7, #0]	@ movhi
 25081 001a 9A82     		strh	r2, [r3, #20]	@ movhi
 363:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25082              		.loc 1 363 0
 25083 001c 07F10C07 		add	r7, r7, #12
 25084 0020 BD46     		mov	sp, r7
 25085 0022 80BC     		pop	{r7}
 25086 0024 7047     		bx	lr
 25087              		.cfi_endproc
 25088              	.LFE113:
 25090 0026 00BF     		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 25091              		.align	2
 25092              		.global	TIM_CounterModeConfig
 25093              		.thumb
 25094              		.thumb_func
 25096              	TIM_CounterModeConfig:
 25097              	.LFB114:
 364:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25098              		.loc 1 378 0
 25099              		.cfi_startproc
 25100              		@ args = 0, pretend = 0, frame = 16
 25101              		@ frame_needed = 1, uses_anonymous_args = 0
 25102              		@ link register save eliminated.
 25103 0000 80B4     		push	{r7}
 25104              	.LCFI12:
 25105              		.cfi_def_cfa_offset 4
 25106 0002 85B0     		sub	sp, sp, #20
 25107              	.LCFI13:
 25108              		.cfi_def_cfa_offset 24
 25109 0004 00AF     		add	r7, sp, #0
 25110              		.cfi_offset 7, -4
 25111              	.LCFI14:
 25112              		.cfi_def_cfa_register 7
 25113 0006 7860     		str	r0, [r7, #4]
 25114 0008 0B46     		mov	r3, r1
 25115 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 379:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 25116              		.loc 1 379 0
 25117 000c 4FF00003 		mov	r3, #0
 25118 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 380:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 25119              		.loc 1 385 0
 25120 0012 7B68     		ldr	r3, [r7, #4]
 25121 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25122 0016 FB81     		strh	r3, [r7, #14]	@ movhi
 386:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 25123              		.loc 1 388 0
 25124 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25125 001a 23F07003 		bic	r3, r3, #112
 25126 001e FB81     		strh	r3, [r7, #14]	@ movhi
 389:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 25127              		.loc 1 391 0
 25128 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25129 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25130 0024 42EA0303 		orr	r3, r2, r3
 25131 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 392:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 25132              		.loc 1 394 0
 25133 002a 7B68     		ldr	r3, [r7, #4]
 25134 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 25135 002e 1A80     		strh	r2, [r3, #0]	@ movhi
 395:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25136              		.loc 1 395 0
 25137 0030 07F11407 		add	r7, r7, #20
 25138 0034 BD46     		mov	sp, r7
 25139 0036 80BC     		pop	{r7}
 25140 0038 7047     		bx	lr
 25141              		.cfi_endproc
 25142              	.LFE114:
 25144 003a 00BF     		.section	.text.TIM_SetCounter,"ax",%progbits
 25145              		.align	2
 25146              		.global	TIM_SetCounter
 25147              		.thumb
 25148              		.thumb_func
 25150              	TIM_SetCounter:
 25151              	.LFB115:
 396:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25152              		.loc 1 404 0
 25153              		.cfi_startproc
 25154              		@ args = 0, pretend = 0, frame = 8
 25155              		@ frame_needed = 1, uses_anonymous_args = 0
 25156              		@ link register save eliminated.
 25157 0000 80B4     		push	{r7}
 25158              	.LCFI15:
 25159              		.cfi_def_cfa_offset 4
 25160 0002 83B0     		sub	sp, sp, #12
 25161              	.LCFI16:
 25162              		.cfi_def_cfa_offset 16
 25163 0004 00AF     		add	r7, sp, #0
 25164              		.cfi_offset 7, -4
 25165              	.LCFI17:
 25166              		.cfi_def_cfa_register 7
 25167 0006 7860     		str	r0, [r7, #4]
 25168 0008 3960     		str	r1, [r7, #0]
 405:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 25169              		.loc 1 409 0
 25170 000a 7B68     		ldr	r3, [r7, #4]
 25171 000c 3A68     		ldr	r2, [r7, #0]
 25172 000e 5A62     		str	r2, [r3, #36]
 410:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25173              		.loc 1 410 0
 25174 0010 07F10C07 		add	r7, r7, #12
 25175 0014 BD46     		mov	sp, r7
 25176 0016 80BC     		pop	{r7}
 25177 0018 7047     		bx	lr
 25178              		.cfi_endproc
 25179              	.LFE115:
 25181 001a 00BF     		.section	.text.TIM_SetAutoreload,"ax",%progbits
 25182              		.align	2
 25183              		.global	TIM_SetAutoreload
 25184              		.thumb
 25185              		.thumb_func
 25187              	TIM_SetAutoreload:
 25188              	.LFB116:
 411:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25189              		.loc 1 419 0
 25190              		.cfi_startproc
 25191              		@ args = 0, pretend = 0, frame = 8
 25192              		@ frame_needed = 1, uses_anonymous_args = 0
 25193              		@ link register save eliminated.
 25194 0000 80B4     		push	{r7}
 25195              	.LCFI18:
 25196              		.cfi_def_cfa_offset 4
 25197 0002 83B0     		sub	sp, sp, #12
 25198              	.LCFI19:
 25199              		.cfi_def_cfa_offset 16
 25200 0004 00AF     		add	r7, sp, #0
 25201              		.cfi_offset 7, -4
 25202              	.LCFI20:
 25203              		.cfi_def_cfa_register 7
 25204 0006 7860     		str	r0, [r7, #4]
 25205 0008 3960     		str	r1, [r7, #0]
 420:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 25206              		.loc 1 424 0
 25207 000a 7B68     		ldr	r3, [r7, #4]
 25208 000c 3A68     		ldr	r2, [r7, #0]
 25209 000e DA62     		str	r2, [r3, #44]
 425:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25210              		.loc 1 425 0
 25211 0010 07F10C07 		add	r7, r7, #12
 25212 0014 BD46     		mov	sp, r7
 25213 0016 80BC     		pop	{r7}
 25214 0018 7047     		bx	lr
 25215              		.cfi_endproc
 25216              	.LFE116:
 25218 001a 00BF     		.section	.text.TIM_GetCounter,"ax",%progbits
 25219              		.align	2
 25220              		.global	TIM_GetCounter
 25221              		.thumb
 25222              		.thumb_func
 25224              	TIM_GetCounter:
 25225              	.LFB117:
 426:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25226              		.loc 1 433 0
 25227              		.cfi_startproc
 25228              		@ args = 0, pretend = 0, frame = 8
 25229              		@ frame_needed = 1, uses_anonymous_args = 0
 25230              		@ link register save eliminated.
 25231 0000 80B4     		push	{r7}
 25232              	.LCFI21:
 25233              		.cfi_def_cfa_offset 4
 25234 0002 83B0     		sub	sp, sp, #12
 25235              	.LCFI22:
 25236              		.cfi_def_cfa_offset 16
 25237 0004 00AF     		add	r7, sp, #0
 25238              		.cfi_offset 7, -4
 25239              	.LCFI23:
 25240              		.cfi_def_cfa_register 7
 25241 0006 7860     		str	r0, [r7, #4]
 434:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 25242              		.loc 1 438 0
 25243 0008 7B68     		ldr	r3, [r7, #4]
 25244 000a 5B6A     		ldr	r3, [r3, #36]
 439:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25245              		.loc 1 439 0
 25246 000c 1846     		mov	r0, r3
 25247 000e 07F10C07 		add	r7, r7, #12
 25248 0012 BD46     		mov	sp, r7
 25249 0014 80BC     		pop	{r7}
 25250 0016 7047     		bx	lr
 25251              		.cfi_endproc
 25252              	.LFE117:
 25254              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 25255              		.align	2
 25256              		.global	TIM_GetPrescaler
 25257              		.thumb
 25258              		.thumb_func
 25260              	TIM_GetPrescaler:
 25261              	.LFB118:
 440:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25262              		.loc 1 447 0
 25263              		.cfi_startproc
 25264              		@ args = 0, pretend = 0, frame = 8
 25265              		@ frame_needed = 1, uses_anonymous_args = 0
 25266              		@ link register save eliminated.
 25267 0000 80B4     		push	{r7}
 25268              	.LCFI24:
 25269              		.cfi_def_cfa_offset 4
 25270 0002 83B0     		sub	sp, sp, #12
 25271              	.LCFI25:
 25272              		.cfi_def_cfa_offset 16
 25273 0004 00AF     		add	r7, sp, #0
 25274              		.cfi_offset 7, -4
 25275              	.LCFI26:
 25276              		.cfi_def_cfa_register 7
 25277 0006 7860     		str	r0, [r7, #4]
 448:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 25278              		.loc 1 452 0
 25279 0008 7B68     		ldr	r3, [r7, #4]
 25280 000a 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 25281 000c 9BB2     		uxth	r3, r3
 453:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25282              		.loc 1 453 0
 25283 000e 1846     		mov	r0, r3
 25284 0010 07F10C07 		add	r7, r7, #12
 25285 0014 BD46     		mov	sp, r7
 25286 0016 80BC     		pop	{r7}
 25287 0018 7047     		bx	lr
 25288              		.cfi_endproc
 25289              	.LFE118:
 25291 001a 00BF     		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 25292              		.align	2
 25293              		.global	TIM_UpdateDisableConfig
 25294              		.thumb
 25295              		.thumb_func
 25297              	TIM_UpdateDisableConfig:
 25298              	.LFB119:
 454:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25299              		.loc 1 463 0
 25300              		.cfi_startproc
 25301              		@ args = 0, pretend = 0, frame = 8
 25302              		@ frame_needed = 1, uses_anonymous_args = 0
 25303              		@ link register save eliminated.
 25304 0000 80B4     		push	{r7}
 25305              	.LCFI27:
 25306              		.cfi_def_cfa_offset 4
 25307 0002 83B0     		sub	sp, sp, #12
 25308              	.LCFI28:
 25309              		.cfi_def_cfa_offset 16
 25310 0004 00AF     		add	r7, sp, #0
 25311              		.cfi_offset 7, -4
 25312              	.LCFI29:
 25313              		.cfi_def_cfa_register 7
 25314 0006 7860     		str	r0, [r7, #4]
 25315 0008 0B46     		mov	r3, r1
 25316 000a FB70     		strb	r3, [r7, #3]
 464:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 25317              		.loc 1 468 0
 25318 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25319 000e 002B     		cmp	r3, #0
 25320 0010 08D0     		beq	.L34
 469:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 25321              		.loc 1 471 0
 25322 0012 7B68     		ldr	r3, [r7, #4]
 25323 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25324 0016 9BB2     		uxth	r3, r3
 25325 0018 43F00203 		orr	r3, r3, #2
 25326 001c 9AB2     		uxth	r2, r3
 25327 001e 7B68     		ldr	r3, [r7, #4]
 25328 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 25329 0022 07E0     		b	.L33
 25330              	.L34:
 472:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 25331              		.loc 1 476 0
 25332 0024 7B68     		ldr	r3, [r7, #4]
 25333 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25334 0028 9BB2     		uxth	r3, r3
 25335 002a 23F00203 		bic	r3, r3, #2
 25336 002e 9AB2     		uxth	r2, r3
 25337 0030 7B68     		ldr	r3, [r7, #4]
 25338 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 25339              	.L33:
 477:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25340              		.loc 1 478 0
 25341 0034 07F10C07 		add	r7, r7, #12
 25342 0038 BD46     		mov	sp, r7
 25343 003a 80BC     		pop	{r7}
 25344 003c 7047     		bx	lr
 25345              		.cfi_endproc
 25346              	.LFE119:
 25348 003e 00BF     		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 25349              		.align	2
 25350              		.global	TIM_UpdateRequestConfig
 25351              		.thumb
 25352              		.thumb_func
 25354              	TIM_UpdateRequestConfig:
 25355              	.LFB120:
 479:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is the counter
 486:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is counter overflow/underflow.
 489:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25356              		.loc 1 492 0
 25357              		.cfi_startproc
 25358              		@ args = 0, pretend = 0, frame = 8
 25359              		@ frame_needed = 1, uses_anonymous_args = 0
 25360              		@ link register save eliminated.
 25361 0000 80B4     		push	{r7}
 25362              	.LCFI30:
 25363              		.cfi_def_cfa_offset 4
 25364 0002 83B0     		sub	sp, sp, #12
 25365              	.LCFI31:
 25366              		.cfi_def_cfa_offset 16
 25367 0004 00AF     		add	r7, sp, #0
 25368              		.cfi_offset 7, -4
 25369              	.LCFI32:
 25370              		.cfi_def_cfa_register 7
 25371 0006 7860     		str	r0, [r7, #4]
 25372 0008 0B46     		mov	r3, r1
 25373 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 493:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 25374              		.loc 1 497 0
 25375 000c 7B88     		ldrh	r3, [r7, #2]
 25376 000e 002B     		cmp	r3, #0
 25377 0010 08D0     		beq	.L37
 498:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 25378              		.loc 1 500 0
 25379 0012 7B68     		ldr	r3, [r7, #4]
 25380 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25381 0016 9BB2     		uxth	r3, r3
 25382 0018 43F00403 		orr	r3, r3, #4
 25383 001c 9AB2     		uxth	r2, r3
 25384 001e 7B68     		ldr	r3, [r7, #4]
 25385 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 25386 0022 07E0     		b	.L36
 25387              	.L37:
 501:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 25388              		.loc 1 505 0
 25389 0024 7B68     		ldr	r3, [r7, #4]
 25390 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25391 0028 9BB2     		uxth	r3, r3
 25392 002a 23F00403 		bic	r3, r3, #4
 25393 002e 9AB2     		uxth	r2, r3
 25394 0030 7B68     		ldr	r3, [r7, #4]
 25395 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 25396              	.L36:
 506:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25397              		.loc 1 507 0
 25398 0034 07F10C07 		add	r7, r7, #12
 25399 0038 BD46     		mov	sp, r7
 25400 003a 80BC     		pop	{r7}
 25401 003c 7047     		bx	lr
 25402              		.cfi_endproc
 25403              	.LFE120:
 25405 003e 00BF     		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 25406              		.align	2
 25407              		.global	TIM_ARRPreloadConfig
 25408              		.thumb
 25409              		.thumb_func
 25411              	TIM_ARRPreloadConfig:
 25412              	.LFB121:
 508:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25413              		.loc 1 517 0
 25414              		.cfi_startproc
 25415              		@ args = 0, pretend = 0, frame = 8
 25416              		@ frame_needed = 1, uses_anonymous_args = 0
 25417              		@ link register save eliminated.
 25418 0000 80B4     		push	{r7}
 25419              	.LCFI33:
 25420              		.cfi_def_cfa_offset 4
 25421 0002 83B0     		sub	sp, sp, #12
 25422              	.LCFI34:
 25423              		.cfi_def_cfa_offset 16
 25424 0004 00AF     		add	r7, sp, #0
 25425              		.cfi_offset 7, -4
 25426              	.LCFI35:
 25427              		.cfi_def_cfa_register 7
 25428 0006 7860     		str	r0, [r7, #4]
 25429 0008 0B46     		mov	r3, r1
 25430 000a FB70     		strb	r3, [r7, #3]
 518:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 25431              		.loc 1 522 0
 25432 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25433 000e 002B     		cmp	r3, #0
 25434 0010 08D0     		beq	.L40
 523:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 25435              		.loc 1 525 0
 25436 0012 7B68     		ldr	r3, [r7, #4]
 25437 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25438 0016 9BB2     		uxth	r3, r3
 25439 0018 43F08003 		orr	r3, r3, #128
 25440 001c 9AB2     		uxth	r2, r3
 25441 001e 7B68     		ldr	r3, [r7, #4]
 25442 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 25443 0022 07E0     		b	.L39
 25444              	.L40:
 526:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 25445              		.loc 1 530 0
 25446 0024 7B68     		ldr	r3, [r7, #4]
 25447 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25448 0028 9BB2     		uxth	r3, r3
 25449 002a 23F08003 		bic	r3, r3, #128
 25450 002e 9AB2     		uxth	r2, r3
 25451 0030 7B68     		ldr	r3, [r7, #4]
 25452 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 25453              	.L39:
 531:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25454              		.loc 1 532 0
 25455 0034 07F10C07 		add	r7, r7, #12
 25456 0038 BD46     		mov	sp, r7
 25457 003a 80BC     		pop	{r7}
 25458 003c 7047     		bx	lr
 25459              		.cfi_endproc
 25460              	.LFE121:
 25462 003e 00BF     		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 25463              		.align	2
 25464              		.global	TIM_SelectOnePulseMode
 25465              		.thumb
 25466              		.thumb_func
 25468              	TIM_SelectOnePulseMode:
 25469              	.LFB122:
 533:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25470              		.loc 1 544 0
 25471              		.cfi_startproc
 25472              		@ args = 0, pretend = 0, frame = 8
 25473              		@ frame_needed = 1, uses_anonymous_args = 0
 25474              		@ link register save eliminated.
 25475 0000 80B4     		push	{r7}
 25476              	.LCFI36:
 25477              		.cfi_def_cfa_offset 4
 25478 0002 83B0     		sub	sp, sp, #12
 25479              	.LCFI37:
 25480              		.cfi_def_cfa_offset 16
 25481 0004 00AF     		add	r7, sp, #0
 25482              		.cfi_offset 7, -4
 25483              	.LCFI38:
 25484              		.cfi_def_cfa_register 7
 25485 0006 7860     		str	r0, [r7, #4]
 25486 0008 0B46     		mov	r3, r1
 25487 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 545:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 25488              		.loc 1 550 0
 25489 000c 7B68     		ldr	r3, [r7, #4]
 25490 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25491 0010 9BB2     		uxth	r3, r3
 25492 0012 23F00803 		bic	r3, r3, #8
 25493 0016 9AB2     		uxth	r2, r3
 25494 0018 7B68     		ldr	r3, [r7, #4]
 25495 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 551:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 25496              		.loc 1 553 0
 25497 001c 7B68     		ldr	r3, [r7, #4]
 25498 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25499 0020 9AB2     		uxth	r2, r3
 25500 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25501 0024 42EA0303 		orr	r3, r2, r3
 25502 0028 9AB2     		uxth	r2, r3
 25503 002a 7B68     		ldr	r3, [r7, #4]
 25504 002c 1A80     		strh	r2, [r3, #0]	@ movhi
 554:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25505              		.loc 1 554 0
 25506 002e 07F10C07 		add	r7, r7, #12
 25507 0032 BD46     		mov	sp, r7
 25508 0034 80BC     		pop	{r7}
 25509 0036 7047     		bx	lr
 25510              		.cfi_endproc
 25511              	.LFE122:
 25513              		.section	.text.TIM_SetClockDivision,"ax",%progbits
 25514              		.align	2
 25515              		.global	TIM_SetClockDivision
 25516              		.thumb
 25517              		.thumb_func
 25519              	TIM_SetClockDivision:
 25520              	.LFB123:
 555:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25521              		.loc 1 567 0
 25522              		.cfi_startproc
 25523              		@ args = 0, pretend = 0, frame = 8
 25524              		@ frame_needed = 1, uses_anonymous_args = 0
 25525              		@ link register save eliminated.
 25526 0000 80B4     		push	{r7}
 25527              	.LCFI39:
 25528              		.cfi_def_cfa_offset 4
 25529 0002 83B0     		sub	sp, sp, #12
 25530              	.LCFI40:
 25531              		.cfi_def_cfa_offset 16
 25532 0004 00AF     		add	r7, sp, #0
 25533              		.cfi_offset 7, -4
 25534              	.LCFI41:
 25535              		.cfi_def_cfa_register 7
 25536 0006 7860     		str	r0, [r7, #4]
 25537 0008 0B46     		mov	r3, r1
 25538 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 568:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 25539              		.loc 1 573 0
 25540 000c 7B68     		ldr	r3, [r7, #4]
 25541 000e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25542 0010 9BB2     		uxth	r3, r3
 25543 0012 23F44073 		bic	r3, r3, #768
 25544 0016 9AB2     		uxth	r2, r3
 25545 0018 7B68     		ldr	r3, [r7, #4]
 25546 001a 1A80     		strh	r2, [r3, #0]	@ movhi
 574:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 25547              		.loc 1 576 0
 25548 001c 7B68     		ldr	r3, [r7, #4]
 25549 001e 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25550 0020 9AB2     		uxth	r2, r3
 25551 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 25552 0024 42EA0303 		orr	r3, r2, r3
 25553 0028 9AB2     		uxth	r2, r3
 25554 002a 7B68     		ldr	r3, [r7, #4]
 25555 002c 1A80     		strh	r2, [r3, #0]	@ movhi
 577:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25556              		.loc 1 577 0
 25557 002e 07F10C07 		add	r7, r7, #12
 25558 0032 BD46     		mov	sp, r7
 25559 0034 80BC     		pop	{r7}
 25560 0036 7047     		bx	lr
 25561              		.cfi_endproc
 25562              	.LFE123:
 25564              		.section	.text.TIM_Cmd,"ax",%progbits
 25565              		.align	2
 25566              		.global	TIM_Cmd
 25567              		.thumb
 25568              		.thumb_func
 25570              	TIM_Cmd:
 25571              	.LFB124:
 578:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25572              		.loc 1 587 0
 25573              		.cfi_startproc
 25574              		@ args = 0, pretend = 0, frame = 8
 25575              		@ frame_needed = 1, uses_anonymous_args = 0
 25576              		@ link register save eliminated.
 25577 0000 80B4     		push	{r7}
 25578              	.LCFI42:
 25579              		.cfi_def_cfa_offset 4
 25580 0002 83B0     		sub	sp, sp, #12
 25581              	.LCFI43:
 25582              		.cfi_def_cfa_offset 16
 25583 0004 00AF     		add	r7, sp, #0
 25584              		.cfi_offset 7, -4
 25585              	.LCFI44:
 25586              		.cfi_def_cfa_register 7
 25587 0006 7860     		str	r0, [r7, #4]
 25588 0008 0B46     		mov	r3, r1
 25589 000a FB70     		strb	r3, [r7, #3]
 588:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 25590              		.loc 1 592 0
 25591 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25592 000e 002B     		cmp	r3, #0
 25593 0010 08D0     		beq	.L45
 593:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 25594              		.loc 1 595 0
 25595 0012 7B68     		ldr	r3, [r7, #4]
 25596 0014 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25597 0016 9BB2     		uxth	r3, r3
 25598 0018 43F00103 		orr	r3, r3, #1
 25599 001c 9AB2     		uxth	r2, r3
 25600 001e 7B68     		ldr	r3, [r7, #4]
 25601 0020 1A80     		strh	r2, [r3, #0]	@ movhi
 25602 0022 07E0     		b	.L44
 25603              	.L45:
 596:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 25604              		.loc 1 600 0
 25605 0024 7B68     		ldr	r3, [r7, #4]
 25606 0026 1B88     		ldrh	r3, [r3, #0]	@ movhi
 25607 0028 9BB2     		uxth	r3, r3
 25608 002a 23F00103 		bic	r3, r3, #1
 25609 002e 9AB2     		uxth	r2, r3
 25610 0030 7B68     		ldr	r3, [r7, #4]
 25611 0032 1A80     		strh	r2, [r3, #0]	@ movhi
 25612              	.L44:
 601:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25613              		.loc 1 602 0
 25614 0034 07F10C07 		add	r7, r7, #12
 25615 0038 BD46     		mov	sp, r7
 25616 003a 80BC     		pop	{r7}
 25617 003c 7047     		bx	lr
 25618              		.cfi_endproc
 25619              	.LFE124:
 25621 003e 00BF     		.section	.text.TIM_OC1Init,"ax",%progbits
 25622              		.align	2
 25623              		.global	TIM_OC1Init
 25624              		.thumb
 25625              		.thumb_func
 25627              	TIM_OC1Init:
 25628              	.LFB125:
 603:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25629              		.loc 1 666 0
 25630              		.cfi_startproc
 25631              		@ args = 0, pretend = 0, frame = 16
 25632              		@ frame_needed = 1, uses_anonymous_args = 0
 25633              		@ link register save eliminated.
 25634 0000 80B4     		push	{r7}
 25635              	.LCFI45:
 25636              		.cfi_def_cfa_offset 4
 25637 0002 85B0     		sub	sp, sp, #20
 25638              	.LCFI46:
 25639              		.cfi_def_cfa_offset 24
 25640 0004 00AF     		add	r7, sp, #0
 25641              		.cfi_offset 7, -4
 25642              	.LCFI47:
 25643              		.cfi_def_cfa_register 7
 25644 0006 7860     		str	r0, [r7, #4]
 25645 0008 3960     		str	r1, [r7, #0]
 667:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 25646              		.loc 1 667 0
 25647 000a 4FF00003 		mov	r3, #0
 25648 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 25649 0010 4FF00003 		mov	r3, #0
 25650 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 25651 0016 4FF00003 		mov	r3, #0
 25652 001a BB81     		strh	r3, [r7, #12]	@ movhi
 668:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 25653              		.loc 1 676 0
 25654 001c 7B68     		ldr	r3, [r7, #4]
 25655 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 25656 0020 9BB2     		uxth	r3, r3
 25657 0022 23F00103 		bic	r3, r3, #1
 25658 0026 9AB2     		uxth	r2, r3
 25659 0028 7B68     		ldr	r3, [r7, #4]
 25660 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 677:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 25661              		.loc 1 679 0
 25662 002c 7B68     		ldr	r3, [r7, #4]
 25663 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 25664 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 680:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 25665              		.loc 1 681 0
 25666 0032 7B68     		ldr	r3, [r7, #4]
 25667 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 25668 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 682:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 25669              		.loc 1 684 0
 25670 0038 7B68     		ldr	r3, [r7, #4]
 25671 003a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 25672 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 685:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 25673              		.loc 1 687 0
 25674 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 25675 0040 23F07003 		bic	r3, r3, #112
 25676 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 688:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 25677              		.loc 1 688 0
 25678 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 25679 0048 23F00303 		bic	r3, r3, #3
 25680 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 689:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 25681              		.loc 1 690 0
 25682 004e 3B68     		ldr	r3, [r7, #0]
 25683 0050 1A88     		ldrh	r2, [r3, #0]
 25684 0052 7B89     		ldrh	r3, [r7, #10]	@ movhi
 25685 0054 42EA0303 		orr	r3, r2, r3
 25686 0058 7B81     		strh	r3, [r7, #10]	@ movhi
 691:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 25687              		.loc 1 693 0
 25688 005a FB89     		ldrh	r3, [r7, #14]	@ movhi
 25689 005c 23F00203 		bic	r3, r3, #2
 25690 0060 FB81     		strh	r3, [r7, #14]	@ movhi
 694:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 25691              		.loc 1 695 0
 25692 0062 3B68     		ldr	r3, [r7, #0]
 25693 0064 9A89     		ldrh	r2, [r3, #12]
 25694 0066 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25695 0068 42EA0303 		orr	r3, r2, r3
 25696 006c FB81     		strh	r3, [r7, #14]	@ movhi
 696:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 25697              		.loc 1 698 0
 25698 006e 3B68     		ldr	r3, [r7, #0]
 25699 0070 5A88     		ldrh	r2, [r3, #2]
 25700 0072 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25701 0074 42EA0303 		orr	r3, r2, r3
 25702 0078 FB81     		strh	r3, [r7, #14]	@ movhi
 699:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 25703              		.loc 1 700 0
 25704 007a 7A68     		ldr	r2, [r7, #4]
 25705 007c 204B     		ldr	r3, .L50
 25706 007e 9A42     		cmp	r2, r3
 25707 0080 03D0     		beq	.L48
 25708              		.loc 1 700 0 is_stmt 0 discriminator 1
 25709 0082 7A68     		ldr	r2, [r7, #4]
 25710 0084 1F4B     		ldr	r3, .L50+4
 25711 0086 9A42     		cmp	r2, r3
 25712 0088 27D1     		bne	.L49
 25713              	.L48:
 701:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 25714              		.loc 1 708 0 is_stmt 1
 25715 008a FB89     		ldrh	r3, [r7, #14]	@ movhi
 25716 008c 23F00803 		bic	r3, r3, #8
 25717 0090 FB81     		strh	r3, [r7, #14]	@ movhi
 709:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 25718              		.loc 1 710 0
 25719 0092 3B68     		ldr	r3, [r7, #0]
 25720 0094 DA89     		ldrh	r2, [r3, #14]
 25721 0096 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25722 0098 42EA0303 		orr	r3, r2, r3
 25723 009c FB81     		strh	r3, [r7, #14]	@ movhi
 711:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 25724              		.loc 1 712 0
 25725 009e FB89     		ldrh	r3, [r7, #14]	@ movhi
 25726 00a0 23F00403 		bic	r3, r3, #4
 25727 00a4 FB81     		strh	r3, [r7, #14]	@ movhi
 713:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 25728              		.loc 1 715 0
 25729 00a6 3B68     		ldr	r3, [r7, #0]
 25730 00a8 9A88     		ldrh	r2, [r3, #4]
 25731 00aa FB89     		ldrh	r3, [r7, #14]	@ movhi
 25732 00ac 42EA0303 		orr	r3, r2, r3
 25733 00b0 FB81     		strh	r3, [r7, #14]	@ movhi
 716:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 25734              		.loc 1 717 0
 25735 00b2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 25736 00b4 23F48073 		bic	r3, r3, #256
 25737 00b8 BB81     		strh	r3, [r7, #12]	@ movhi
 718:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 25738              		.loc 1 718 0
 25739 00ba BB89     		ldrh	r3, [r7, #12]	@ movhi
 25740 00bc 23F40073 		bic	r3, r3, #512
 25741 00c0 BB81     		strh	r3, [r7, #12]	@ movhi
 719:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 25742              		.loc 1 720 0
 25743 00c2 3B68     		ldr	r3, [r7, #0]
 25744 00c4 1A8A     		ldrh	r2, [r3, #16]
 25745 00c6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 25746 00c8 42EA0303 		orr	r3, r2, r3
 25747 00cc BB81     		strh	r3, [r7, #12]	@ movhi
 721:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 25748              		.loc 1 722 0
 25749 00ce 3B68     		ldr	r3, [r7, #0]
 25750 00d0 5A8A     		ldrh	r2, [r3, #18]
 25751 00d2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 25752 00d4 42EA0303 		orr	r3, r2, r3
 25753 00d8 BB81     		strh	r3, [r7, #12]	@ movhi
 25754              	.L49:
 723:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 25755              		.loc 1 725 0
 25756 00da 7B68     		ldr	r3, [r7, #4]
 25757 00dc BA89     		ldrh	r2, [r7, #12]	@ movhi
 25758 00de 9A80     		strh	r2, [r3, #4]	@ movhi
 726:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 25759              		.loc 1 728 0
 25760 00e0 7B68     		ldr	r3, [r7, #4]
 25761 00e2 7A89     		ldrh	r2, [r7, #10]	@ movhi
 25762 00e4 1A83     		strh	r2, [r3, #24]	@ movhi
 729:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 25763              		.loc 1 731 0
 25764 00e6 3B68     		ldr	r3, [r7, #0]
 25765 00e8 9A68     		ldr	r2, [r3, #8]
 25766 00ea 7B68     		ldr	r3, [r7, #4]
 25767 00ec 5A63     		str	r2, [r3, #52]
 732:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 25768              		.loc 1 734 0
 25769 00ee 7B68     		ldr	r3, [r7, #4]
 25770 00f0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 25771 00f2 1A84     		strh	r2, [r3, #32]	@ movhi
 735:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25772              		.loc 1 735 0
 25773 00f4 07F11407 		add	r7, r7, #20
 25774 00f8 BD46     		mov	sp, r7
 25775 00fa 80BC     		pop	{r7}
 25776 00fc 7047     		bx	lr
 25777              	.L51:
 25778 00fe 00BF     		.align	2
 25779              	.L50:
 25780 0100 00000140 		.word	1073807360
 25781 0104 00040140 		.word	1073808384
 25782              		.cfi_endproc
 25783              	.LFE125:
 25785              		.section	.text.TIM_OC2Init,"ax",%progbits
 25786              		.align	2
 25787              		.global	TIM_OC2Init
 25788              		.thumb
 25789              		.thumb_func
 25791              	TIM_OC2Init:
 25792              	.LFB126:
 736:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25793              		.loc 1 747 0
 25794              		.cfi_startproc
 25795              		@ args = 0, pretend = 0, frame = 16
 25796              		@ frame_needed = 1, uses_anonymous_args = 0
 25797              		@ link register save eliminated.
 25798 0000 80B4     		push	{r7}
 25799              	.LCFI48:
 25800              		.cfi_def_cfa_offset 4
 25801 0002 85B0     		sub	sp, sp, #20
 25802              	.LCFI49:
 25803              		.cfi_def_cfa_offset 24
 25804 0004 00AF     		add	r7, sp, #0
 25805              		.cfi_offset 7, -4
 25806              	.LCFI50:
 25807              		.cfi_def_cfa_register 7
 25808 0006 7860     		str	r0, [r7, #4]
 25809 0008 3960     		str	r1, [r7, #0]
 748:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 25810              		.loc 1 748 0
 25811 000a 4FF00003 		mov	r3, #0
 25812 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 25813 0010 4FF00003 		mov	r3, #0
 25814 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 25815 0016 4FF00003 		mov	r3, #0
 25816 001a BB81     		strh	r3, [r7, #12]	@ movhi
 749:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 25817              		.loc 1 757 0
 25818 001c 7B68     		ldr	r3, [r7, #4]
 25819 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 25820 0020 9BB2     		uxth	r3, r3
 25821 0022 23F01003 		bic	r3, r3, #16
 25822 0026 9AB2     		uxth	r2, r3
 25823 0028 7B68     		ldr	r3, [r7, #4]
 25824 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 758:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 25825              		.loc 1 760 0
 25826 002c 7B68     		ldr	r3, [r7, #4]
 25827 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 25828 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 761:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 25829              		.loc 1 762 0
 25830 0032 7B68     		ldr	r3, [r7, #4]
 25831 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 25832 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 763:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 25833              		.loc 1 765 0
 25834 0038 7B68     		ldr	r3, [r7, #4]
 25835 003a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 25836 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 766:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 25837              		.loc 1 768 0
 25838 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 25839 0040 23F4E043 		bic	r3, r3, #28672
 25840 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 769:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 25841              		.loc 1 769 0
 25842 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 25843 0048 23F44073 		bic	r3, r3, #768
 25844 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 770:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 25845              		.loc 1 772 0
 25846 004e 3B68     		ldr	r3, [r7, #0]
 25847 0050 1B88     		ldrh	r3, [r3, #0]
 25848 0052 4FEA0323 		lsl	r3, r3, #8
 25849 0056 9AB2     		uxth	r2, r3
 25850 0058 7B89     		ldrh	r3, [r7, #10]	@ movhi
 25851 005a 42EA0303 		orr	r3, r2, r3
 25852 005e 7B81     		strh	r3, [r7, #10]	@ movhi
 773:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 25853              		.loc 1 775 0
 25854 0060 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25855 0062 23F02003 		bic	r3, r3, #32
 25856 0066 FB81     		strh	r3, [r7, #14]	@ movhi
 776:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 25857              		.loc 1 777 0
 25858 0068 3B68     		ldr	r3, [r7, #0]
 25859 006a 9B89     		ldrh	r3, [r3, #12]
 25860 006c 4FEA0313 		lsl	r3, r3, #4
 25861 0070 9AB2     		uxth	r2, r3
 25862 0072 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25863 0074 42EA0303 		orr	r3, r2, r3
 25864 0078 FB81     		strh	r3, [r7, #14]	@ movhi
 778:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 25865              		.loc 1 780 0
 25866 007a 3B68     		ldr	r3, [r7, #0]
 25867 007c 5B88     		ldrh	r3, [r3, #2]
 25868 007e 4FEA0313 		lsl	r3, r3, #4
 25869 0082 9AB2     		uxth	r2, r3
 25870 0084 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25871 0086 42EA0303 		orr	r3, r2, r3
 25872 008a FB81     		strh	r3, [r7, #14]	@ movhi
 781:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 25873              		.loc 1 782 0
 25874 008c 7A68     		ldr	r2, [r7, #4]
 25875 008e 264B     		ldr	r3, .L55
 25876 0090 9A42     		cmp	r2, r3
 25877 0092 03D0     		beq	.L53
 25878              		.loc 1 782 0 is_stmt 0 discriminator 1
 25879 0094 7A68     		ldr	r2, [r7, #4]
 25880 0096 254B     		ldr	r3, .L55+4
 25881 0098 9A42     		cmp	r2, r3
 25882 009a 33D1     		bne	.L54
 25883              	.L53:
 783:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 25884              		.loc 1 790 0 is_stmt 1
 25885 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 25886 009e 23F08003 		bic	r3, r3, #128
 25887 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 791:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 25888              		.loc 1 792 0
 25889 00a4 3B68     		ldr	r3, [r7, #0]
 25890 00a6 DB89     		ldrh	r3, [r3, #14]
 25891 00a8 4FEA0313 		lsl	r3, r3, #4
 25892 00ac 9AB2     		uxth	r2, r3
 25893 00ae FB89     		ldrh	r3, [r7, #14]	@ movhi
 25894 00b0 42EA0303 		orr	r3, r2, r3
 25895 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 793:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 25896              		.loc 1 794 0
 25897 00b6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25898 00b8 23F04003 		bic	r3, r3, #64
 25899 00bc FB81     		strh	r3, [r7, #14]	@ movhi
 795:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 25900              		.loc 1 797 0
 25901 00be 3B68     		ldr	r3, [r7, #0]
 25902 00c0 9B88     		ldrh	r3, [r3, #4]
 25903 00c2 4FEA0313 		lsl	r3, r3, #4
 25904 00c6 9AB2     		uxth	r2, r3
 25905 00c8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 25906 00ca 42EA0303 		orr	r3, r2, r3
 25907 00ce FB81     		strh	r3, [r7, #14]	@ movhi
 798:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 25908              		.loc 1 799 0
 25909 00d0 BB89     		ldrh	r3, [r7, #12]	@ movhi
 25910 00d2 23F48063 		bic	r3, r3, #1024
 25911 00d6 BB81     		strh	r3, [r7, #12]	@ movhi
 800:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 25912              		.loc 1 800 0
 25913 00d8 BB89     		ldrh	r3, [r7, #12]	@ movhi
 25914 00da 23F40063 		bic	r3, r3, #2048
 25915 00de BB81     		strh	r3, [r7, #12]	@ movhi
 801:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 25916              		.loc 1 802 0
 25917 00e0 3B68     		ldr	r3, [r7, #0]
 25918 00e2 1B8A     		ldrh	r3, [r3, #16]
 25919 00e4 4FEA8303 		lsl	r3, r3, #2
 25920 00e8 9AB2     		uxth	r2, r3
 25921 00ea BB89     		ldrh	r3, [r7, #12]	@ movhi
 25922 00ec 42EA0303 		orr	r3, r2, r3
 25923 00f0 BB81     		strh	r3, [r7, #12]	@ movhi
 803:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 25924              		.loc 1 804 0
 25925 00f2 3B68     		ldr	r3, [r7, #0]
 25926 00f4 5B8A     		ldrh	r3, [r3, #18]
 25927 00f6 4FEA8303 		lsl	r3, r3, #2
 25928 00fa 9AB2     		uxth	r2, r3
 25929 00fc BB89     		ldrh	r3, [r7, #12]	@ movhi
 25930 00fe 42EA0303 		orr	r3, r2, r3
 25931 0102 BB81     		strh	r3, [r7, #12]	@ movhi
 25932              	.L54:
 805:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 25933              		.loc 1 807 0
 25934 0104 7B68     		ldr	r3, [r7, #4]
 25935 0106 BA89     		ldrh	r2, [r7, #12]	@ movhi
 25936 0108 9A80     		strh	r2, [r3, #4]	@ movhi
 808:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 25937              		.loc 1 810 0
 25938 010a 7B68     		ldr	r3, [r7, #4]
 25939 010c 7A89     		ldrh	r2, [r7, #10]	@ movhi
 25940 010e 1A83     		strh	r2, [r3, #24]	@ movhi
 811:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 25941              		.loc 1 813 0
 25942 0110 3B68     		ldr	r3, [r7, #0]
 25943 0112 9A68     		ldr	r2, [r3, #8]
 25944 0114 7B68     		ldr	r3, [r7, #4]
 25945 0116 9A63     		str	r2, [r3, #56]
 814:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 25946              		.loc 1 816 0
 25947 0118 7B68     		ldr	r3, [r7, #4]
 25948 011a FA89     		ldrh	r2, [r7, #14]	@ movhi
 25949 011c 1A84     		strh	r2, [r3, #32]	@ movhi
 817:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 25950              		.loc 1 817 0
 25951 011e 07F11407 		add	r7, r7, #20
 25952 0122 BD46     		mov	sp, r7
 25953 0124 80BC     		pop	{r7}
 25954 0126 7047     		bx	lr
 25955              	.L56:
 25956              		.align	2
 25957              	.L55:
 25958 0128 00000140 		.word	1073807360
 25959 012c 00040140 		.word	1073808384
 25960              		.cfi_endproc
 25961              	.LFE126:
 25963              		.section	.text.TIM_OC3Init,"ax",%progbits
 25964              		.align	2
 25965              		.global	TIM_OC3Init
 25966              		.thumb
 25967              		.thumb_func
 25969              	TIM_OC3Init:
 25970              	.LFB127:
 818:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 25971              		.loc 1 828 0
 25972              		.cfi_startproc
 25973              		@ args = 0, pretend = 0, frame = 16
 25974              		@ frame_needed = 1, uses_anonymous_args = 0
 25975              		@ link register save eliminated.
 25976 0000 80B4     		push	{r7}
 25977              	.LCFI51:
 25978              		.cfi_def_cfa_offset 4
 25979 0002 85B0     		sub	sp, sp, #20
 25980              	.LCFI52:
 25981              		.cfi_def_cfa_offset 24
 25982 0004 00AF     		add	r7, sp, #0
 25983              		.cfi_offset 7, -4
 25984              	.LCFI53:
 25985              		.cfi_def_cfa_register 7
 25986 0006 7860     		str	r0, [r7, #4]
 25987 0008 3960     		str	r1, [r7, #0]
 829:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 25988              		.loc 1 829 0
 25989 000a 4FF00003 		mov	r3, #0
 25990 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 25991 0010 4FF00003 		mov	r3, #0
 25992 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 25993 0016 4FF00003 		mov	r3, #0
 25994 001a BB81     		strh	r3, [r7, #12]	@ movhi
 830:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 25995              		.loc 1 838 0
 25996 001c 7B68     		ldr	r3, [r7, #4]
 25997 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 25998 0020 9BB2     		uxth	r3, r3
 25999 0022 23F48073 		bic	r3, r3, #256
 26000 0026 9AB2     		uxth	r2, r3
 26001 0028 7B68     		ldr	r3, [r7, #4]
 26002 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 839:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 26003              		.loc 1 841 0
 26004 002c 7B68     		ldr	r3, [r7, #4]
 26005 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26006 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 842:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 26007              		.loc 1 843 0
 26008 0032 7B68     		ldr	r3, [r7, #4]
 26009 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 26010 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 844:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 26011              		.loc 1 846 0
 26012 0038 7B68     		ldr	r3, [r7, #4]
 26013 003a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 26014 003c 7B81     		strh	r3, [r7, #10]	@ movhi
 847:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 26015              		.loc 1 849 0
 26016 003e 7B89     		ldrh	r3, [r7, #10]	@ movhi
 26017 0040 23F07003 		bic	r3, r3, #112
 26018 0044 7B81     		strh	r3, [r7, #10]	@ movhi
 850:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 26019              		.loc 1 850 0
 26020 0046 7B89     		ldrh	r3, [r7, #10]	@ movhi
 26021 0048 23F00303 		bic	r3, r3, #3
 26022 004c 7B81     		strh	r3, [r7, #10]	@ movhi
 851:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 26023              		.loc 1 852 0
 26024 004e 3B68     		ldr	r3, [r7, #0]
 26025 0050 1A88     		ldrh	r2, [r3, #0]
 26026 0052 7B89     		ldrh	r3, [r7, #10]	@ movhi
 26027 0054 42EA0303 		orr	r3, r2, r3
 26028 0058 7B81     		strh	r3, [r7, #10]	@ movhi
 853:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 26029              		.loc 1 855 0
 26030 005a FB89     		ldrh	r3, [r7, #14]	@ movhi
 26031 005c 23F40073 		bic	r3, r3, #512
 26032 0060 FB81     		strh	r3, [r7, #14]	@ movhi
 856:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 26033              		.loc 1 857 0
 26034 0062 3B68     		ldr	r3, [r7, #0]
 26035 0064 9B89     		ldrh	r3, [r3, #12]
 26036 0066 4FEA0323 		lsl	r3, r3, #8
 26037 006a 9AB2     		uxth	r2, r3
 26038 006c FB89     		ldrh	r3, [r7, #14]	@ movhi
 26039 006e 42EA0303 		orr	r3, r2, r3
 26040 0072 FB81     		strh	r3, [r7, #14]	@ movhi
 858:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 26041              		.loc 1 860 0
 26042 0074 3B68     		ldr	r3, [r7, #0]
 26043 0076 5B88     		ldrh	r3, [r3, #2]
 26044 0078 4FEA0323 		lsl	r3, r3, #8
 26045 007c 9AB2     		uxth	r2, r3
 26046 007e FB89     		ldrh	r3, [r7, #14]	@ movhi
 26047 0080 42EA0303 		orr	r3, r2, r3
 26048 0084 FB81     		strh	r3, [r7, #14]	@ movhi
 861:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 26049              		.loc 1 862 0
 26050 0086 7A68     		ldr	r2, [r7, #4]
 26051 0088 264B     		ldr	r3, .L60
 26052 008a 9A42     		cmp	r2, r3
 26053 008c 03D0     		beq	.L58
 26054              		.loc 1 862 0 is_stmt 0 discriminator 1
 26055 008e 7A68     		ldr	r2, [r7, #4]
 26056 0090 254B     		ldr	r3, .L60+4
 26057 0092 9A42     		cmp	r2, r3
 26058 0094 33D1     		bne	.L59
 26059              	.L58:
 863:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 26060              		.loc 1 870 0 is_stmt 1
 26061 0096 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26062 0098 23F40063 		bic	r3, r3, #2048
 26063 009c FB81     		strh	r3, [r7, #14]	@ movhi
 871:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 26064              		.loc 1 872 0
 26065 009e 3B68     		ldr	r3, [r7, #0]
 26066 00a0 DB89     		ldrh	r3, [r3, #14]
 26067 00a2 4FEA0323 		lsl	r3, r3, #8
 26068 00a6 9AB2     		uxth	r2, r3
 26069 00a8 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26070 00aa 42EA0303 		orr	r3, r2, r3
 26071 00ae FB81     		strh	r3, [r7, #14]	@ movhi
 873:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 26072              		.loc 1 874 0
 26073 00b0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26074 00b2 23F48063 		bic	r3, r3, #1024
 26075 00b6 FB81     		strh	r3, [r7, #14]	@ movhi
 875:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 26076              		.loc 1 877 0
 26077 00b8 3B68     		ldr	r3, [r7, #0]
 26078 00ba 9B88     		ldrh	r3, [r3, #4]
 26079 00bc 4FEA0323 		lsl	r3, r3, #8
 26080 00c0 9AB2     		uxth	r2, r3
 26081 00c2 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26082 00c4 42EA0303 		orr	r3, r2, r3
 26083 00c8 FB81     		strh	r3, [r7, #14]	@ movhi
 878:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 26084              		.loc 1 879 0
 26085 00ca BB89     		ldrh	r3, [r7, #12]	@ movhi
 26086 00cc 23F48053 		bic	r3, r3, #4096
 26087 00d0 BB81     		strh	r3, [r7, #12]	@ movhi
 880:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 26088              		.loc 1 880 0
 26089 00d2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 26090 00d4 23F40053 		bic	r3, r3, #8192
 26091 00d8 BB81     		strh	r3, [r7, #12]	@ movhi
 881:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 26092              		.loc 1 882 0
 26093 00da 3B68     		ldr	r3, [r7, #0]
 26094 00dc 1B8A     		ldrh	r3, [r3, #16]
 26095 00de 4FEA0313 		lsl	r3, r3, #4
 26096 00e2 9AB2     		uxth	r2, r3
 26097 00e4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 26098 00e6 42EA0303 		orr	r3, r2, r3
 26099 00ea BB81     		strh	r3, [r7, #12]	@ movhi
 883:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 26100              		.loc 1 884 0
 26101 00ec 3B68     		ldr	r3, [r7, #0]
 26102 00ee 5B8A     		ldrh	r3, [r3, #18]
 26103 00f0 4FEA0313 		lsl	r3, r3, #4
 26104 00f4 9AB2     		uxth	r2, r3
 26105 00f6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 26106 00f8 42EA0303 		orr	r3, r2, r3
 26107 00fc BB81     		strh	r3, [r7, #12]	@ movhi
 26108              	.L59:
 885:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 26109              		.loc 1 887 0
 26110 00fe 7B68     		ldr	r3, [r7, #4]
 26111 0100 BA89     		ldrh	r2, [r7, #12]	@ movhi
 26112 0102 9A80     		strh	r2, [r3, #4]	@ movhi
 888:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 26113              		.loc 1 890 0
 26114 0104 7B68     		ldr	r3, [r7, #4]
 26115 0106 7A89     		ldrh	r2, [r7, #10]	@ movhi
 26116 0108 9A83     		strh	r2, [r3, #28]	@ movhi
 891:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 26117              		.loc 1 893 0
 26118 010a 3B68     		ldr	r3, [r7, #0]
 26119 010c 9A68     		ldr	r2, [r3, #8]
 26120 010e 7B68     		ldr	r3, [r7, #4]
 26121 0110 DA63     		str	r2, [r3, #60]
 894:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 26122              		.loc 1 896 0
 26123 0112 7B68     		ldr	r3, [r7, #4]
 26124 0114 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26125 0116 1A84     		strh	r2, [r3, #32]	@ movhi
 897:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26126              		.loc 1 897 0
 26127 0118 07F11407 		add	r7, r7, #20
 26128 011c BD46     		mov	sp, r7
 26129 011e 80BC     		pop	{r7}
 26130 0120 7047     		bx	lr
 26131              	.L61:
 26132 0122 00BF     		.align	2
 26133              	.L60:
 26134 0124 00000140 		.word	1073807360
 26135 0128 00040140 		.word	1073808384
 26136              		.cfi_endproc
 26137              	.LFE127:
 26139              		.section	.text.TIM_OC4Init,"ax",%progbits
 26140              		.align	2
 26141              		.global	TIM_OC4Init
 26142              		.thumb
 26143              		.thumb_func
 26145              	TIM_OC4Init:
 26146              	.LFB128:
 898:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26147              		.loc 1 908 0
 26148              		.cfi_startproc
 26149              		@ args = 0, pretend = 0, frame = 16
 26150              		@ frame_needed = 1, uses_anonymous_args = 0
 26151              		@ link register save eliminated.
 26152 0000 80B4     		push	{r7}
 26153              	.LCFI54:
 26154              		.cfi_def_cfa_offset 4
 26155 0002 85B0     		sub	sp, sp, #20
 26156              	.LCFI55:
 26157              		.cfi_def_cfa_offset 24
 26158 0004 00AF     		add	r7, sp, #0
 26159              		.cfi_offset 7, -4
 26160              	.LCFI56:
 26161              		.cfi_def_cfa_register 7
 26162 0006 7860     		str	r0, [r7, #4]
 26163 0008 3960     		str	r1, [r7, #0]
 909:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 26164              		.loc 1 909 0
 26165 000a 4FF00003 		mov	r3, #0
 26166 000e BB81     		strh	r3, [r7, #12]	@ movhi
 26167 0010 4FF00003 		mov	r3, #0
 26168 0014 7B81     		strh	r3, [r7, #10]	@ movhi
 26169 0016 4FF00003 		mov	r3, #0
 26170 001a FB81     		strh	r3, [r7, #14]	@ movhi
 910:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 26171              		.loc 1 918 0
 26172 001c 7B68     		ldr	r3, [r7, #4]
 26173 001e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26174 0020 9BB2     		uxth	r3, r3
 26175 0022 23F48053 		bic	r3, r3, #4096
 26176 0026 9AB2     		uxth	r2, r3
 26177 0028 7B68     		ldr	r3, [r7, #4]
 26178 002a 1A84     		strh	r2, [r3, #32]	@ movhi
 919:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 26179              		.loc 1 921 0
 26180 002c 7B68     		ldr	r3, [r7, #4]
 26181 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26182 0030 7B81     		strh	r3, [r7, #10]	@ movhi
 922:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 26183              		.loc 1 923 0
 26184 0032 7B68     		ldr	r3, [r7, #4]
 26185 0034 9B88     		ldrh	r3, [r3, #4]	@ movhi
 26186 0036 FB81     		strh	r3, [r7, #14]	@ movhi
 924:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 26187              		.loc 1 926 0
 26188 0038 7B68     		ldr	r3, [r7, #4]
 26189 003a 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 26190 003c BB81     		strh	r3, [r7, #12]	@ movhi
 927:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 26191              		.loc 1 929 0
 26192 003e BB89     		ldrh	r3, [r7, #12]	@ movhi
 26193 0040 23F4E043 		bic	r3, r3, #28672
 26194 0044 BB81     		strh	r3, [r7, #12]	@ movhi
 930:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 26195              		.loc 1 930 0
 26196 0046 BB89     		ldrh	r3, [r7, #12]	@ movhi
 26197 0048 23F44073 		bic	r3, r3, #768
 26198 004c BB81     		strh	r3, [r7, #12]	@ movhi
 931:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 26199              		.loc 1 933 0
 26200 004e 3B68     		ldr	r3, [r7, #0]
 26201 0050 1B88     		ldrh	r3, [r3, #0]
 26202 0052 4FEA0323 		lsl	r3, r3, #8
 26203 0056 9AB2     		uxth	r2, r3
 26204 0058 BB89     		ldrh	r3, [r7, #12]	@ movhi
 26205 005a 42EA0303 		orr	r3, r2, r3
 26206 005e BB81     		strh	r3, [r7, #12]	@ movhi
 934:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 26207              		.loc 1 936 0
 26208 0060 7B89     		ldrh	r3, [r7, #10]	@ movhi
 26209 0062 23F40053 		bic	r3, r3, #8192
 26210 0066 7B81     		strh	r3, [r7, #10]	@ movhi
 937:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 26211              		.loc 1 938 0
 26212 0068 3B68     		ldr	r3, [r7, #0]
 26213 006a 9B89     		ldrh	r3, [r3, #12]
 26214 006c 4FEA0333 		lsl	r3, r3, #12
 26215 0070 9AB2     		uxth	r2, r3
 26216 0072 7B89     		ldrh	r3, [r7, #10]	@ movhi
 26217 0074 42EA0303 		orr	r3, r2, r3
 26218 0078 7B81     		strh	r3, [r7, #10]	@ movhi
 939:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 26219              		.loc 1 941 0
 26220 007a 3B68     		ldr	r3, [r7, #0]
 26221 007c 5B88     		ldrh	r3, [r3, #2]
 26222 007e 4FEA0333 		lsl	r3, r3, #12
 26223 0082 9AB2     		uxth	r2, r3
 26224 0084 7B89     		ldrh	r3, [r7, #10]	@ movhi
 26225 0086 42EA0303 		orr	r3, r2, r3
 26226 008a 7B81     		strh	r3, [r7, #10]	@ movhi
 942:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 26227              		.loc 1 943 0
 26228 008c 7A68     		ldr	r2, [r7, #4]
 26229 008e 134B     		ldr	r3, .L65
 26230 0090 9A42     		cmp	r2, r3
 26231 0092 03D0     		beq	.L63
 26232              		.loc 1 943 0 is_stmt 0 discriminator 1
 26233 0094 7A68     		ldr	r2, [r7, #4]
 26234 0096 124B     		ldr	r3, .L65+4
 26235 0098 9A42     		cmp	r2, r3
 26236 009a 0CD1     		bne	.L64
 26237              	.L63:
 944:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 26238              		.loc 1 947 0 is_stmt 1
 26239 009c FB89     		ldrh	r3, [r7, #14]	@ movhi
 26240 009e 23F48043 		bic	r3, r3, #16384
 26241 00a2 FB81     		strh	r3, [r7, #14]	@ movhi
 948:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 26242              		.loc 1 949 0
 26243 00a4 3B68     		ldr	r3, [r7, #0]
 26244 00a6 1B8A     		ldrh	r3, [r3, #16]
 26245 00a8 4FEA8313 		lsl	r3, r3, #6
 26246 00ac 9AB2     		uxth	r2, r3
 26247 00ae FB89     		ldrh	r3, [r7, #14]	@ movhi
 26248 00b0 42EA0303 		orr	r3, r2, r3
 26249 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 26250              	.L64:
 950:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 26251              		.loc 1 952 0
 26252 00b6 7B68     		ldr	r3, [r7, #4]
 26253 00b8 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26254 00ba 9A80     		strh	r2, [r3, #4]	@ movhi
 953:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 26255              		.loc 1 955 0
 26256 00bc 7B68     		ldr	r3, [r7, #4]
 26257 00be BA89     		ldrh	r2, [r7, #12]	@ movhi
 26258 00c0 9A83     		strh	r2, [r3, #28]	@ movhi
 956:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 26259              		.loc 1 958 0
 26260 00c2 3B68     		ldr	r3, [r7, #0]
 26261 00c4 9A68     		ldr	r2, [r3, #8]
 26262 00c6 7B68     		ldr	r3, [r7, #4]
 26263 00c8 1A64     		str	r2, [r3, #64]
 959:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 26264              		.loc 1 961 0
 26265 00ca 7B68     		ldr	r3, [r7, #4]
 26266 00cc 7A89     		ldrh	r2, [r7, #10]	@ movhi
 26267 00ce 1A84     		strh	r2, [r3, #32]	@ movhi
 962:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26268              		.loc 1 962 0
 26269 00d0 07F11407 		add	r7, r7, #20
 26270 00d4 BD46     		mov	sp, r7
 26271 00d6 80BC     		pop	{r7}
 26272 00d8 7047     		bx	lr
 26273              	.L66:
 26274 00da 00BF     		.align	2
 26275              	.L65:
 26276 00dc 00000140 		.word	1073807360
 26277 00e0 00040140 		.word	1073808384
 26278              		.cfi_endproc
 26279              	.LFE128:
 26281              		.section	.text.TIM_OCStructInit,"ax",%progbits
 26282              		.align	2
 26283              		.global	TIM_OCStructInit
 26284              		.thumb
 26285              		.thumb_func
 26287              	TIM_OCStructInit:
 26288              	.LFB129:
 963:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26289              		.loc 1 971 0
 26290              		.cfi_startproc
 26291              		@ args = 0, pretend = 0, frame = 8
 26292              		@ frame_needed = 1, uses_anonymous_args = 0
 26293              		@ link register save eliminated.
 26294 0000 80B4     		push	{r7}
 26295              	.LCFI57:
 26296              		.cfi_def_cfa_offset 4
 26297 0002 83B0     		sub	sp, sp, #12
 26298              	.LCFI58:
 26299              		.cfi_def_cfa_offset 16
 26300 0004 00AF     		add	r7, sp, #0
 26301              		.cfi_offset 7, -4
 26302              	.LCFI59:
 26303              		.cfi_def_cfa_register 7
 26304 0006 7860     		str	r0, [r7, #4]
 972:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 26305              		.loc 1 973 0
 26306 0008 7B68     		ldr	r3, [r7, #4]
 26307 000a 4FF00002 		mov	r2, #0
 26308 000e 1A80     		strh	r2, [r3, #0]	@ movhi
 974:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 26309              		.loc 1 974 0
 26310 0010 7B68     		ldr	r3, [r7, #4]
 26311 0012 4FF00002 		mov	r2, #0
 26312 0016 5A80     		strh	r2, [r3, #2]	@ movhi
 975:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 26313              		.loc 1 975 0
 26314 0018 7B68     		ldr	r3, [r7, #4]
 26315 001a 4FF00002 		mov	r2, #0
 26316 001e 9A80     		strh	r2, [r3, #4]	@ movhi
 976:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 26317              		.loc 1 976 0
 26318 0020 7B68     		ldr	r3, [r7, #4]
 26319 0022 4FF00002 		mov	r2, #0
 26320 0026 9A60     		str	r2, [r3, #8]
 977:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 26321              		.loc 1 977 0
 26322 0028 7B68     		ldr	r3, [r7, #4]
 26323 002a 4FF00002 		mov	r2, #0
 26324 002e 9A81     		strh	r2, [r3, #12]	@ movhi
 978:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 26325              		.loc 1 978 0
 26326 0030 7B68     		ldr	r3, [r7, #4]
 26327 0032 4FF00002 		mov	r2, #0
 26328 0036 DA81     		strh	r2, [r3, #14]	@ movhi
 979:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 26329              		.loc 1 979 0
 26330 0038 7B68     		ldr	r3, [r7, #4]
 26331 003a 4FF00002 		mov	r2, #0
 26332 003e 1A82     		strh	r2, [r3, #16]	@ movhi
 980:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 26333              		.loc 1 980 0
 26334 0040 7B68     		ldr	r3, [r7, #4]
 26335 0042 4FF00002 		mov	r2, #0
 26336 0046 5A82     		strh	r2, [r3, #18]	@ movhi
 981:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26337              		.loc 1 981 0
 26338 0048 07F10C07 		add	r7, r7, #12
 26339 004c BD46     		mov	sp, r7
 26340 004e 80BC     		pop	{r7}
 26341 0050 7047     		bx	lr
 26342              		.cfi_endproc
 26343              	.LFE129:
 26345 0052 00BF     		.section	.text.TIM_SelectOCxM,"ax",%progbits
 26346              		.align	2
 26347              		.global	TIM_SelectOCxM
 26348              		.thumb
 26349              		.thumb_func
 26351              	TIM_SelectOCxM:
 26352              	.LFB130:
 982:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26353              		.loc 1 1007 0
 26354              		.cfi_startproc
 26355              		@ args = 0, pretend = 0, frame = 16
 26356              		@ frame_needed = 1, uses_anonymous_args = 0
 26357              		@ link register save eliminated.
 26358 0000 80B4     		push	{r7}
 26359              	.LCFI60:
 26360              		.cfi_def_cfa_offset 4
 26361 0002 85B0     		sub	sp, sp, #20
 26362              	.LCFI61:
 26363              		.cfi_def_cfa_offset 24
 26364 0004 00AF     		add	r7, sp, #0
 26365              		.cfi_offset 7, -4
 26366              	.LCFI62:
 26367              		.cfi_def_cfa_register 7
 26368 0006 7860     		str	r0, [r7, #4]
 26369 0008 1346     		mov	r3, r2
 26370 000a 0A46     		mov	r2, r1	@ movhi
 26371 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 26372 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1008:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 26373              		.loc 1 1008 0
 26374 0010 4FF00003 		mov	r3, #0
 26375 0014 FB60     		str	r3, [r7, #12]
1009:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
 26376              		.loc 1 1009 0
 26377 0016 4FF00003 		mov	r3, #0
 26378 001a 7B81     		strh	r3, [r7, #10]	@ movhi
1010:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
 26379              		.loc 1 1016 0
 26380 001c 7B68     		ldr	r3, [r7, #4]
 26381 001e FB60     		str	r3, [r7, #12]
1017:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 26382              		.loc 1 1017 0
 26383 0020 FB68     		ldr	r3, [r7, #12]
 26384 0022 03F11803 		add	r3, r3, #24
 26385 0026 FB60     		str	r3, [r7, #12]
1018:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 26386              		.loc 1 1019 0
 26387 0028 7B88     		ldrh	r3, [r7, #2]
 26388 002a 4FF00102 		mov	r2, #1
 26389 002e 02FA03F3 		lsl	r3, r2, r3
 26390 0032 7B81     		strh	r3, [r7, #10]	@ movhi
1020:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 26391              		.loc 1 1022 0
 26392 0034 7B68     		ldr	r3, [r7, #4]
 26393 0036 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 26394 0038 9AB2     		uxth	r2, r3
 26395 003a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 26396 003c 6FEA0303 		mvn	r3, r3
 26397 0040 9BB2     		uxth	r3, r3
 26398 0042 02EA0303 		and	r3, r2, r3
 26399 0046 9AB2     		uxth	r2, r3
 26400 0048 7B68     		ldr	r3, [r7, #4]
 26401 004a 1A84     		strh	r2, [r3, #32]	@ movhi
1023:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 26402              		.loc 1 1024 0
 26403 004c 7B88     		ldrh	r3, [r7, #2]
 26404 004e 002B     		cmp	r3, #0
 26405 0050 02D0     		beq	.L69
 26406              		.loc 1 1024 0 is_stmt 0 discriminator 1
 26407 0052 7B88     		ldrh	r3, [r7, #2]
 26408 0054 082B     		cmp	r3, #8
 26409 0056 16D1     		bne	.L70
 26410              	.L69:
1025:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 26411              		.loc 1 1026 0 is_stmt 1
 26412 0058 7B88     		ldrh	r3, [r7, #2]
 26413 005a 4FEA5303 		lsr	r3, r3, #1
 26414 005e 9BB2     		uxth	r3, r3
 26415 0060 FA68     		ldr	r2, [r7, #12]
 26416 0062 D318     		adds	r3, r2, r3
 26417 0064 FB60     		str	r3, [r7, #12]
1027:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 26418              		.loc 1 1029 0
 26419 0066 FA68     		ldr	r2, [r7, #12]
 26420 0068 FB68     		ldr	r3, [r7, #12]
 26421 006a 1968     		ldr	r1, [r3, #0]
 26422 006c 4FF68F73 		movw	r3, #65423
 26423 0070 01EA0303 		and	r3, r1, r3
 26424 0074 1360     		str	r3, [r2, #0]
1030:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 26425              		.loc 1 1032 0
 26426 0076 FB68     		ldr	r3, [r7, #12]
 26427 0078 FA68     		ldr	r2, [r7, #12]
 26428 007a 1168     		ldr	r1, [r2, #0]
 26429 007c 3A88     		ldrh	r2, [r7, #0]
 26430 007e 41EA0202 		orr	r2, r1, r2
 26431 0082 1A60     		str	r2, [r3, #0]
 26432 0084 1BE0     		b	.L68
 26433              	.L70:
1033:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 26434              		.loc 1 1036 0
 26435 0086 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26436 0088 A3F10403 		sub	r3, r3, #4
 26437 008c 9BB2     		uxth	r3, r3
 26438 008e 4FEA5303 		lsr	r3, r3, #1
 26439 0092 9BB2     		uxth	r3, r3
 26440 0094 FA68     		ldr	r2, [r7, #12]
 26441 0096 D318     		adds	r3, r2, r3
 26442 0098 FB60     		str	r3, [r7, #12]
1037:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 26443              		.loc 1 1039 0
 26444 009a FA68     		ldr	r2, [r7, #12]
 26445 009c FB68     		ldr	r3, [r7, #12]
 26446 009e 1968     		ldr	r1, [r3, #0]
 26447 00a0 48F6FF73 		movw	r3, #36863
 26448 00a4 01EA0303 		and	r3, r1, r3
 26449 00a8 1360     		str	r3, [r2, #0]
1040:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 26450              		.loc 1 1042 0
 26451 00aa FB68     		ldr	r3, [r7, #12]
 26452 00ac FA68     		ldr	r2, [r7, #12]
 26453 00ae 1168     		ldr	r1, [r2, #0]
 26454 00b0 3A88     		ldrh	r2, [r7, #0]	@ movhi
 26455 00b2 4FEA0222 		lsl	r2, r2, #8
 26456 00b6 92B2     		uxth	r2, r2
 26457 00b8 41EA0202 		orr	r2, r1, r2
 26458 00bc 1A60     		str	r2, [r3, #0]
 26459              	.L68:
1043:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26460              		.loc 1 1044 0
 26461 00be 07F11407 		add	r7, r7, #20
 26462 00c2 BD46     		mov	sp, r7
 26463 00c4 80BC     		pop	{r7}
 26464 00c6 7047     		bx	lr
 26465              		.cfi_endproc
 26466              	.LFE130:
 26468              		.section	.text.TIM_SetCompare1,"ax",%progbits
 26469              		.align	2
 26470              		.global	TIM_SetCompare1
 26471              		.thumb
 26472              		.thumb_func
 26474              	TIM_SetCompare1:
 26475              	.LFB131:
1045:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26476              		.loc 1 1053 0
 26477              		.cfi_startproc
 26478              		@ args = 0, pretend = 0, frame = 8
 26479              		@ frame_needed = 1, uses_anonymous_args = 0
 26480              		@ link register save eliminated.
 26481 0000 80B4     		push	{r7}
 26482              	.LCFI63:
 26483              		.cfi_def_cfa_offset 4
 26484 0002 83B0     		sub	sp, sp, #12
 26485              	.LCFI64:
 26486              		.cfi_def_cfa_offset 16
 26487 0004 00AF     		add	r7, sp, #0
 26488              		.cfi_offset 7, -4
 26489              	.LCFI65:
 26490              		.cfi_def_cfa_register 7
 26491 0006 7860     		str	r0, [r7, #4]
 26492 0008 3960     		str	r1, [r7, #0]
1054:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 26493              		.loc 1 1058 0
 26494 000a 7B68     		ldr	r3, [r7, #4]
 26495 000c 3A68     		ldr	r2, [r7, #0]
 26496 000e 5A63     		str	r2, [r3, #52]
1059:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26497              		.loc 1 1059 0
 26498 0010 07F10C07 		add	r7, r7, #12
 26499 0014 BD46     		mov	sp, r7
 26500 0016 80BC     		pop	{r7}
 26501 0018 7047     		bx	lr
 26502              		.cfi_endproc
 26503              	.LFE131:
 26505 001a 00BF     		.section	.text.TIM_SetCompare2,"ax",%progbits
 26506              		.align	2
 26507              		.global	TIM_SetCompare2
 26508              		.thumb
 26509              		.thumb_func
 26511              	TIM_SetCompare2:
 26512              	.LFB132:
1060:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26513              		.loc 1 1069 0
 26514              		.cfi_startproc
 26515              		@ args = 0, pretend = 0, frame = 8
 26516              		@ frame_needed = 1, uses_anonymous_args = 0
 26517              		@ link register save eliminated.
 26518 0000 80B4     		push	{r7}
 26519              	.LCFI66:
 26520              		.cfi_def_cfa_offset 4
 26521 0002 83B0     		sub	sp, sp, #12
 26522              	.LCFI67:
 26523              		.cfi_def_cfa_offset 16
 26524 0004 00AF     		add	r7, sp, #0
 26525              		.cfi_offset 7, -4
 26526              	.LCFI68:
 26527              		.cfi_def_cfa_register 7
 26528 0006 7860     		str	r0, [r7, #4]
 26529 0008 3960     		str	r1, [r7, #0]
1070:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 26530              		.loc 1 1074 0
 26531 000a 7B68     		ldr	r3, [r7, #4]
 26532 000c 3A68     		ldr	r2, [r7, #0]
 26533 000e 9A63     		str	r2, [r3, #56]
1075:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26534              		.loc 1 1075 0
 26535 0010 07F10C07 		add	r7, r7, #12
 26536 0014 BD46     		mov	sp, r7
 26537 0016 80BC     		pop	{r7}
 26538 0018 7047     		bx	lr
 26539              		.cfi_endproc
 26540              	.LFE132:
 26542 001a 00BF     		.section	.text.TIM_SetCompare3,"ax",%progbits
 26543              		.align	2
 26544              		.global	TIM_SetCompare3
 26545              		.thumb
 26546              		.thumb_func
 26548              	TIM_SetCompare3:
 26549              	.LFB133:
1076:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26550              		.loc 1 1084 0
 26551              		.cfi_startproc
 26552              		@ args = 0, pretend = 0, frame = 8
 26553              		@ frame_needed = 1, uses_anonymous_args = 0
 26554              		@ link register save eliminated.
 26555 0000 80B4     		push	{r7}
 26556              	.LCFI69:
 26557              		.cfi_def_cfa_offset 4
 26558 0002 83B0     		sub	sp, sp, #12
 26559              	.LCFI70:
 26560              		.cfi_def_cfa_offset 16
 26561 0004 00AF     		add	r7, sp, #0
 26562              		.cfi_offset 7, -4
 26563              	.LCFI71:
 26564              		.cfi_def_cfa_register 7
 26565 0006 7860     		str	r0, [r7, #4]
 26566 0008 3960     		str	r1, [r7, #0]
1085:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 26567              		.loc 1 1089 0
 26568 000a 7B68     		ldr	r3, [r7, #4]
 26569 000c 3A68     		ldr	r2, [r7, #0]
 26570 000e DA63     		str	r2, [r3, #60]
1090:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26571              		.loc 1 1090 0
 26572 0010 07F10C07 		add	r7, r7, #12
 26573 0014 BD46     		mov	sp, r7
 26574 0016 80BC     		pop	{r7}
 26575 0018 7047     		bx	lr
 26576              		.cfi_endproc
 26577              	.LFE133:
 26579 001a 00BF     		.section	.text.TIM_SetCompare4,"ax",%progbits
 26580              		.align	2
 26581              		.global	TIM_SetCompare4
 26582              		.thumb
 26583              		.thumb_func
 26585              	TIM_SetCompare4:
 26586              	.LFB134:
1091:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26587              		.loc 1 1099 0
 26588              		.cfi_startproc
 26589              		@ args = 0, pretend = 0, frame = 8
 26590              		@ frame_needed = 1, uses_anonymous_args = 0
 26591              		@ link register save eliminated.
 26592 0000 80B4     		push	{r7}
 26593              	.LCFI72:
 26594              		.cfi_def_cfa_offset 4
 26595 0002 83B0     		sub	sp, sp, #12
 26596              	.LCFI73:
 26597              		.cfi_def_cfa_offset 16
 26598 0004 00AF     		add	r7, sp, #0
 26599              		.cfi_offset 7, -4
 26600              	.LCFI74:
 26601              		.cfi_def_cfa_register 7
 26602 0006 7860     		str	r0, [r7, #4]
 26603 0008 3960     		str	r1, [r7, #0]
1100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 26604              		.loc 1 1104 0
 26605 000a 7B68     		ldr	r3, [r7, #4]
 26606 000c 3A68     		ldr	r2, [r7, #0]
 26607 000e 1A64     		str	r2, [r3, #64]
1105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26608              		.loc 1 1105 0
 26609 0010 07F10C07 		add	r7, r7, #12
 26610 0014 BD46     		mov	sp, r7
 26611 0016 80BC     		pop	{r7}
 26612 0018 7047     		bx	lr
 26613              		.cfi_endproc
 26614              	.LFE134:
 26616 001a 00BF     		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 26617              		.align	2
 26618              		.global	TIM_ForcedOC1Config
 26619              		.thumb
 26620              		.thumb_func
 26622              	TIM_ForcedOC1Config:
 26623              	.LFB135:
1106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26624              		.loc 1 1117 0
 26625              		.cfi_startproc
 26626              		@ args = 0, pretend = 0, frame = 16
 26627              		@ frame_needed = 1, uses_anonymous_args = 0
 26628              		@ link register save eliminated.
 26629 0000 80B4     		push	{r7}
 26630              	.LCFI75:
 26631              		.cfi_def_cfa_offset 4
 26632 0002 85B0     		sub	sp, sp, #20
 26633              	.LCFI76:
 26634              		.cfi_def_cfa_offset 24
 26635 0004 00AF     		add	r7, sp, #0
 26636              		.cfi_offset 7, -4
 26637              	.LCFI77:
 26638              		.cfi_def_cfa_register 7
 26639 0006 7860     		str	r0, [r7, #4]
 26640 0008 0B46     		mov	r3, r1
 26641 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 26642              		.loc 1 1118 0
 26643 000c 4FF00003 		mov	r3, #0
 26644 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 26645              		.loc 1 1123 0
 26646 0012 7B68     		ldr	r3, [r7, #4]
 26647 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 26648 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 26649              		.loc 1 1126 0
 26650 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26651 001a 23F07003 		bic	r3, r3, #112
 26652 001e FB81     		strh	r3, [r7, #14]	@ movhi
1127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 26653              		.loc 1 1129 0
 26654 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26655 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26656 0024 42EA0303 		orr	r3, r2, r3
 26657 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 26658              		.loc 1 1132 0
 26659 002a 7B68     		ldr	r3, [r7, #4]
 26660 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 26661 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26662              		.loc 1 1133 0
 26663 0030 07F11407 		add	r7, r7, #20
 26664 0034 BD46     		mov	sp, r7
 26665 0036 80BC     		pop	{r7}
 26666 0038 7047     		bx	lr
 26667              		.cfi_endproc
 26668              	.LFE135:
 26670 003a 00BF     		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 26671              		.align	2
 26672              		.global	TIM_ForcedOC2Config
 26673              		.thumb
 26674              		.thumb_func
 26676              	TIM_ForcedOC2Config:
 26677              	.LFB136:
1134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26678              		.loc 1 1146 0
 26679              		.cfi_startproc
 26680              		@ args = 0, pretend = 0, frame = 16
 26681              		@ frame_needed = 1, uses_anonymous_args = 0
 26682              		@ link register save eliminated.
 26683 0000 80B4     		push	{r7}
 26684              	.LCFI78:
 26685              		.cfi_def_cfa_offset 4
 26686 0002 85B0     		sub	sp, sp, #20
 26687              	.LCFI79:
 26688              		.cfi_def_cfa_offset 24
 26689 0004 00AF     		add	r7, sp, #0
 26690              		.cfi_offset 7, -4
 26691              	.LCFI80:
 26692              		.cfi_def_cfa_register 7
 26693 0006 7860     		str	r0, [r7, #4]
 26694 0008 0B46     		mov	r3, r1
 26695 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 26696              		.loc 1 1147 0
 26697 000c 4FF00003 		mov	r3, #0
 26698 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 26699              		.loc 1 1152 0
 26700 0012 7B68     		ldr	r3, [r7, #4]
 26701 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 26702 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 26703              		.loc 1 1155 0
 26704 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26705 001a 23F4E043 		bic	r3, r3, #28672
 26706 001e FB81     		strh	r3, [r7, #14]	@ movhi
1156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 26707              		.loc 1 1158 0
 26708 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26709 0022 4FEA0323 		lsl	r3, r3, #8
 26710 0026 9AB2     		uxth	r2, r3
 26711 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26712 002a 42EA0303 		orr	r3, r2, r3
 26713 002e FB81     		strh	r3, [r7, #14]	@ movhi
1159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 26714              		.loc 1 1161 0
 26715 0030 7B68     		ldr	r3, [r7, #4]
 26716 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26717 0034 1A83     		strh	r2, [r3, #24]	@ movhi
1162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26718              		.loc 1 1162 0
 26719 0036 07F11407 		add	r7, r7, #20
 26720 003a BD46     		mov	sp, r7
 26721 003c 80BC     		pop	{r7}
 26722 003e 7047     		bx	lr
 26723              		.cfi_endproc
 26724              	.LFE136:
 26726              		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 26727              		.align	2
 26728              		.global	TIM_ForcedOC3Config
 26729              		.thumb
 26730              		.thumb_func
 26732              	TIM_ForcedOC3Config:
 26733              	.LFB137:
1163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26734              		.loc 1 1174 0
 26735              		.cfi_startproc
 26736              		@ args = 0, pretend = 0, frame = 16
 26737              		@ frame_needed = 1, uses_anonymous_args = 0
 26738              		@ link register save eliminated.
 26739 0000 80B4     		push	{r7}
 26740              	.LCFI81:
 26741              		.cfi_def_cfa_offset 4
 26742 0002 85B0     		sub	sp, sp, #20
 26743              	.LCFI82:
 26744              		.cfi_def_cfa_offset 24
 26745 0004 00AF     		add	r7, sp, #0
 26746              		.cfi_offset 7, -4
 26747              	.LCFI83:
 26748              		.cfi_def_cfa_register 7
 26749 0006 7860     		str	r0, [r7, #4]
 26750 0008 0B46     		mov	r3, r1
 26751 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 26752              		.loc 1 1175 0
 26753 000c 4FF00003 		mov	r3, #0
 26754 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 26755              		.loc 1 1181 0
 26756 0012 7B68     		ldr	r3, [r7, #4]
 26757 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 26758 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 26759              		.loc 1 1184 0
 26760 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26761 001a 23F07003 		bic	r3, r3, #112
 26762 001e FB81     		strh	r3, [r7, #14]	@ movhi
1185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 26763              		.loc 1 1187 0
 26764 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26765 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26766 0024 42EA0303 		orr	r3, r2, r3
 26767 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 26768              		.loc 1 1190 0
 26769 002a 7B68     		ldr	r3, [r7, #4]
 26770 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 26771 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26772              		.loc 1 1191 0
 26773 0030 07F11407 		add	r7, r7, #20
 26774 0034 BD46     		mov	sp, r7
 26775 0036 80BC     		pop	{r7}
 26776 0038 7047     		bx	lr
 26777              		.cfi_endproc
 26778              	.LFE137:
 26780 003a 00BF     		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 26781              		.align	2
 26782              		.global	TIM_ForcedOC4Config
 26783              		.thumb
 26784              		.thumb_func
 26786              	TIM_ForcedOC4Config:
 26787              	.LFB138:
1192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26788              		.loc 1 1203 0
 26789              		.cfi_startproc
 26790              		@ args = 0, pretend = 0, frame = 16
 26791              		@ frame_needed = 1, uses_anonymous_args = 0
 26792              		@ link register save eliminated.
 26793 0000 80B4     		push	{r7}
 26794              	.LCFI84:
 26795              		.cfi_def_cfa_offset 4
 26796 0002 85B0     		sub	sp, sp, #20
 26797              	.LCFI85:
 26798              		.cfi_def_cfa_offset 24
 26799 0004 00AF     		add	r7, sp, #0
 26800              		.cfi_offset 7, -4
 26801              	.LCFI86:
 26802              		.cfi_def_cfa_register 7
 26803 0006 7860     		str	r0, [r7, #4]
 26804 0008 0B46     		mov	r3, r1
 26805 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 26806              		.loc 1 1204 0
 26807 000c 4FF00003 		mov	r3, #0
 26808 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 26809              		.loc 1 1209 0
 26810 0012 7B68     		ldr	r3, [r7, #4]
 26811 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 26812 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 26813              		.loc 1 1212 0
 26814 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26815 001a 23F4E043 		bic	r3, r3, #28672
 26816 001e FB81     		strh	r3, [r7, #14]	@ movhi
1213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 26817              		.loc 1 1215 0
 26818 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26819 0022 4FEA0323 		lsl	r3, r3, #8
 26820 0026 9AB2     		uxth	r2, r3
 26821 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26822 002a 42EA0303 		orr	r3, r2, r3
 26823 002e FB81     		strh	r3, [r7, #14]	@ movhi
1216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 26824              		.loc 1 1218 0
 26825 0030 7B68     		ldr	r3, [r7, #4]
 26826 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26827 0034 9A83     		strh	r2, [r3, #28]	@ movhi
1219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26828              		.loc 1 1219 0
 26829 0036 07F11407 		add	r7, r7, #20
 26830 003a BD46     		mov	sp, r7
 26831 003c 80BC     		pop	{r7}
 26832 003e 7047     		bx	lr
 26833              		.cfi_endproc
 26834              	.LFE138:
 26836              		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 26837              		.align	2
 26838              		.global	TIM_OC1PreloadConfig
 26839              		.thumb
 26840              		.thumb_func
 26842              	TIM_OC1PreloadConfig:
 26843              	.LFB139:
1220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26844              		.loc 1 1231 0
 26845              		.cfi_startproc
 26846              		@ args = 0, pretend = 0, frame = 16
 26847              		@ frame_needed = 1, uses_anonymous_args = 0
 26848              		@ link register save eliminated.
 26849 0000 80B4     		push	{r7}
 26850              	.LCFI87:
 26851              		.cfi_def_cfa_offset 4
 26852 0002 85B0     		sub	sp, sp, #20
 26853              	.LCFI88:
 26854              		.cfi_def_cfa_offset 24
 26855 0004 00AF     		add	r7, sp, #0
 26856              		.cfi_offset 7, -4
 26857              	.LCFI89:
 26858              		.cfi_def_cfa_register 7
 26859 0006 7860     		str	r0, [r7, #4]
 26860 0008 0B46     		mov	r3, r1
 26861 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 26862              		.loc 1 1232 0
 26863 000c 4FF00003 		mov	r3, #0
 26864 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 26865              		.loc 1 1238 0
 26866 0012 7B68     		ldr	r3, [r7, #4]
 26867 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 26868 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 26869              		.loc 1 1241 0
 26870 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26871 001a 23F00803 		bic	r3, r3, #8
 26872 001e FB81     		strh	r3, [r7, #14]	@ movhi
1242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 26873              		.loc 1 1244 0
 26874 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26875 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26876 0024 42EA0303 		orr	r3, r2, r3
 26877 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 26878              		.loc 1 1247 0
 26879 002a 7B68     		ldr	r3, [r7, #4]
 26880 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 26881 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26882              		.loc 1 1248 0
 26883 0030 07F11407 		add	r7, r7, #20
 26884 0034 BD46     		mov	sp, r7
 26885 0036 80BC     		pop	{r7}
 26886 0038 7047     		bx	lr
 26887              		.cfi_endproc
 26888              	.LFE139:
 26890 003a 00BF     		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 26891              		.align	2
 26892              		.global	TIM_OC2PreloadConfig
 26893              		.thumb
 26894              		.thumb_func
 26896              	TIM_OC2PreloadConfig:
 26897              	.LFB140:
1249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26898              		.loc 1 1261 0
 26899              		.cfi_startproc
 26900              		@ args = 0, pretend = 0, frame = 16
 26901              		@ frame_needed = 1, uses_anonymous_args = 0
 26902              		@ link register save eliminated.
 26903 0000 80B4     		push	{r7}
 26904              	.LCFI90:
 26905              		.cfi_def_cfa_offset 4
 26906 0002 85B0     		sub	sp, sp, #20
 26907              	.LCFI91:
 26908              		.cfi_def_cfa_offset 24
 26909 0004 00AF     		add	r7, sp, #0
 26910              		.cfi_offset 7, -4
 26911              	.LCFI92:
 26912              		.cfi_def_cfa_register 7
 26913 0006 7860     		str	r0, [r7, #4]
 26914 0008 0B46     		mov	r3, r1
 26915 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 26916              		.loc 1 1262 0
 26917 000c 4FF00003 		mov	r3, #0
 26918 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 26919              		.loc 1 1268 0
 26920 0012 7B68     		ldr	r3, [r7, #4]
 26921 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 26922 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 26923              		.loc 1 1271 0
 26924 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26925 001a 23F40063 		bic	r3, r3, #2048
 26926 001e FB81     		strh	r3, [r7, #14]	@ movhi
1272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 26927              		.loc 1 1274 0
 26928 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26929 0022 4FEA0323 		lsl	r3, r3, #8
 26930 0026 9AB2     		uxth	r2, r3
 26931 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26932 002a 42EA0303 		orr	r3, r2, r3
 26933 002e FB81     		strh	r3, [r7, #14]	@ movhi
1275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 26934              		.loc 1 1277 0
 26935 0030 7B68     		ldr	r3, [r7, #4]
 26936 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26937 0034 1A83     		strh	r2, [r3, #24]	@ movhi
1278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26938              		.loc 1 1278 0
 26939 0036 07F11407 		add	r7, r7, #20
 26940 003a BD46     		mov	sp, r7
 26941 003c 80BC     		pop	{r7}
 26942 003e 7047     		bx	lr
 26943              		.cfi_endproc
 26944              	.LFE140:
 26946              		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 26947              		.align	2
 26948              		.global	TIM_OC3PreloadConfig
 26949              		.thumb
 26950              		.thumb_func
 26952              	TIM_OC3PreloadConfig:
 26953              	.LFB141:
1279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 26954              		.loc 1 1290 0
 26955              		.cfi_startproc
 26956              		@ args = 0, pretend = 0, frame = 16
 26957              		@ frame_needed = 1, uses_anonymous_args = 0
 26958              		@ link register save eliminated.
 26959 0000 80B4     		push	{r7}
 26960              	.LCFI93:
 26961              		.cfi_def_cfa_offset 4
 26962 0002 85B0     		sub	sp, sp, #20
 26963              	.LCFI94:
 26964              		.cfi_def_cfa_offset 24
 26965 0004 00AF     		add	r7, sp, #0
 26966              		.cfi_offset 7, -4
 26967              	.LCFI95:
 26968              		.cfi_def_cfa_register 7
 26969 0006 7860     		str	r0, [r7, #4]
 26970 0008 0B46     		mov	r3, r1
 26971 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 26972              		.loc 1 1291 0
 26973 000c 4FF00003 		mov	r3, #0
 26974 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 26975              		.loc 1 1297 0
 26976 0012 7B68     		ldr	r3, [r7, #4]
 26977 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 26978 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 26979              		.loc 1 1300 0
 26980 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 26981 001a 23F00803 		bic	r3, r3, #8
 26982 001e FB81     		strh	r3, [r7, #14]	@ movhi
1301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 26983              		.loc 1 1303 0
 26984 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 26985 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 26986 0024 42EA0303 		orr	r3, r2, r3
 26987 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 26988              		.loc 1 1306 0
 26989 002a 7B68     		ldr	r3, [r7, #4]
 26990 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 26991 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 26992              		.loc 1 1307 0
 26993 0030 07F11407 		add	r7, r7, #20
 26994 0034 BD46     		mov	sp, r7
 26995 0036 80BC     		pop	{r7}
 26996 0038 7047     		bx	lr
 26997              		.cfi_endproc
 26998              	.LFE141:
 27000 003a 00BF     		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 27001              		.align	2
 27002              		.global	TIM_OC4PreloadConfig
 27003              		.thumb
 27004              		.thumb_func
 27006              	TIM_OC4PreloadConfig:
 27007              	.LFB142:
1308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27008              		.loc 1 1319 0
 27009              		.cfi_startproc
 27010              		@ args = 0, pretend = 0, frame = 16
 27011              		@ frame_needed = 1, uses_anonymous_args = 0
 27012              		@ link register save eliminated.
 27013 0000 80B4     		push	{r7}
 27014              	.LCFI96:
 27015              		.cfi_def_cfa_offset 4
 27016 0002 85B0     		sub	sp, sp, #20
 27017              	.LCFI97:
 27018              		.cfi_def_cfa_offset 24
 27019 0004 00AF     		add	r7, sp, #0
 27020              		.cfi_offset 7, -4
 27021              	.LCFI98:
 27022              		.cfi_def_cfa_register 7
 27023 0006 7860     		str	r0, [r7, #4]
 27024 0008 0B46     		mov	r3, r1
 27025 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 27026              		.loc 1 1320 0
 27027 000c 4FF00003 		mov	r3, #0
 27028 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 27029              		.loc 1 1326 0
 27030 0012 7B68     		ldr	r3, [r7, #4]
 27031 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 27032 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 27033              		.loc 1 1329 0
 27034 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27035 001a 23F40063 		bic	r3, r3, #2048
 27036 001e FB81     		strh	r3, [r7, #14]	@ movhi
1330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 27037              		.loc 1 1332 0
 27038 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27039 0022 4FEA0323 		lsl	r3, r3, #8
 27040 0026 9AB2     		uxth	r2, r3
 27041 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27042 002a 42EA0303 		orr	r3, r2, r3
 27043 002e FB81     		strh	r3, [r7, #14]	@ movhi
1333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 27044              		.loc 1 1335 0
 27045 0030 7B68     		ldr	r3, [r7, #4]
 27046 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27047 0034 9A83     		strh	r2, [r3, #28]	@ movhi
1336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27048              		.loc 1 1336 0
 27049 0036 07F11407 		add	r7, r7, #20
 27050 003a BD46     		mov	sp, r7
 27051 003c 80BC     		pop	{r7}
 27052 003e 7047     		bx	lr
 27053              		.cfi_endproc
 27054              	.LFE142:
 27056              		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 27057              		.align	2
 27058              		.global	TIM_OC1FastConfig
 27059              		.thumb
 27060              		.thumb_func
 27062              	TIM_OC1FastConfig:
 27063              	.LFB143:
1337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27064              		.loc 1 1348 0
 27065              		.cfi_startproc
 27066              		@ args = 0, pretend = 0, frame = 16
 27067              		@ frame_needed = 1, uses_anonymous_args = 0
 27068              		@ link register save eliminated.
 27069 0000 80B4     		push	{r7}
 27070              	.LCFI99:
 27071              		.cfi_def_cfa_offset 4
 27072 0002 85B0     		sub	sp, sp, #20
 27073              	.LCFI100:
 27074              		.cfi_def_cfa_offset 24
 27075 0004 00AF     		add	r7, sp, #0
 27076              		.cfi_offset 7, -4
 27077              	.LCFI101:
 27078              		.cfi_def_cfa_register 7
 27079 0006 7860     		str	r0, [r7, #4]
 27080 0008 0B46     		mov	r3, r1
 27081 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1349:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 27082              		.loc 1 1349 0
 27083 000c 4FF00003 		mov	r3, #0
 27084 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1350:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 27085              		.loc 1 1356 0
 27086 0012 7B68     		ldr	r3, [r7, #4]
 27087 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 27088 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1357:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 27089              		.loc 1 1359 0
 27090 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27091 001a 23F00403 		bic	r3, r3, #4
 27092 001e FB81     		strh	r3, [r7, #14]	@ movhi
1360:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 27093              		.loc 1 1362 0
 27094 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27095 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27096 0024 42EA0303 		orr	r3, r2, r3
 27097 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1363:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 27098              		.loc 1 1365 0
 27099 002a 7B68     		ldr	r3, [r7, #4]
 27100 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 27101 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1366:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27102              		.loc 1 1366 0
 27103 0030 07F11407 		add	r7, r7, #20
 27104 0034 BD46     		mov	sp, r7
 27105 0036 80BC     		pop	{r7}
 27106 0038 7047     		bx	lr
 27107              		.cfi_endproc
 27108              	.LFE143:
 27110 003a 00BF     		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 27111              		.align	2
 27112              		.global	TIM_OC2FastConfig
 27113              		.thumb
 27114              		.thumb_func
 27116              	TIM_OC2FastConfig:
 27117              	.LFB144:
1367:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27118              		.loc 1 1379 0
 27119              		.cfi_startproc
 27120              		@ args = 0, pretend = 0, frame = 16
 27121              		@ frame_needed = 1, uses_anonymous_args = 0
 27122              		@ link register save eliminated.
 27123 0000 80B4     		push	{r7}
 27124              	.LCFI102:
 27125              		.cfi_def_cfa_offset 4
 27126 0002 85B0     		sub	sp, sp, #20
 27127              	.LCFI103:
 27128              		.cfi_def_cfa_offset 24
 27129 0004 00AF     		add	r7, sp, #0
 27130              		.cfi_offset 7, -4
 27131              	.LCFI104:
 27132              		.cfi_def_cfa_register 7
 27133 0006 7860     		str	r0, [r7, #4]
 27134 0008 0B46     		mov	r3, r1
 27135 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1380:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 27136              		.loc 1 1380 0
 27137 000c 4FF00003 		mov	r3, #0
 27138 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1381:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 27139              		.loc 1 1387 0
 27140 0012 7B68     		ldr	r3, [r7, #4]
 27141 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 27142 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1388:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 27143              		.loc 1 1390 0
 27144 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27145 001a 23F48063 		bic	r3, r3, #1024
 27146 001e FB81     		strh	r3, [r7, #14]	@ movhi
1391:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 27147              		.loc 1 1393 0
 27148 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27149 0022 4FEA0323 		lsl	r3, r3, #8
 27150 0026 9AB2     		uxth	r2, r3
 27151 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27152 002a 42EA0303 		orr	r3, r2, r3
 27153 002e FB81     		strh	r3, [r7, #14]	@ movhi
1394:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 27154              		.loc 1 1396 0
 27155 0030 7B68     		ldr	r3, [r7, #4]
 27156 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27157 0034 1A83     		strh	r2, [r3, #24]	@ movhi
1397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27158              		.loc 1 1397 0
 27159 0036 07F11407 		add	r7, r7, #20
 27160 003a BD46     		mov	sp, r7
 27161 003c 80BC     		pop	{r7}
 27162 003e 7047     		bx	lr
 27163              		.cfi_endproc
 27164              	.LFE144:
 27166              		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 27167              		.align	2
 27168              		.global	TIM_OC3FastConfig
 27169              		.thumb
 27170              		.thumb_func
 27172              	TIM_OC3FastConfig:
 27173              	.LFB145:
1398:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27174              		.loc 1 1409 0
 27175              		.cfi_startproc
 27176              		@ args = 0, pretend = 0, frame = 16
 27177              		@ frame_needed = 1, uses_anonymous_args = 0
 27178              		@ link register save eliminated.
 27179 0000 80B4     		push	{r7}
 27180              	.LCFI105:
 27181              		.cfi_def_cfa_offset 4
 27182 0002 85B0     		sub	sp, sp, #20
 27183              	.LCFI106:
 27184              		.cfi_def_cfa_offset 24
 27185 0004 00AF     		add	r7, sp, #0
 27186              		.cfi_offset 7, -4
 27187              	.LCFI107:
 27188              		.cfi_def_cfa_register 7
 27189 0006 7860     		str	r0, [r7, #4]
 27190 0008 0B46     		mov	r3, r1
 27191 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1410:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 27192              		.loc 1 1410 0
 27193 000c 4FF00003 		mov	r3, #0
 27194 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1411:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 27195              		.loc 1 1417 0
 27196 0012 7B68     		ldr	r3, [r7, #4]
 27197 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 27198 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1418:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 27199              		.loc 1 1420 0
 27200 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27201 001a 23F00403 		bic	r3, r3, #4
 27202 001e FB81     		strh	r3, [r7, #14]	@ movhi
1421:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 27203              		.loc 1 1423 0
 27204 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27205 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27206 0024 42EA0303 		orr	r3, r2, r3
 27207 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 27208              		.loc 1 1426 0
 27209 002a 7B68     		ldr	r3, [r7, #4]
 27210 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 27211 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1427:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27212              		.loc 1 1427 0
 27213 0030 07F11407 		add	r7, r7, #20
 27214 0034 BD46     		mov	sp, r7
 27215 0036 80BC     		pop	{r7}
 27216 0038 7047     		bx	lr
 27217              		.cfi_endproc
 27218              	.LFE145:
 27220 003a 00BF     		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 27221              		.align	2
 27222              		.global	TIM_OC4FastConfig
 27223              		.thumb
 27224              		.thumb_func
 27226              	TIM_OC4FastConfig:
 27227              	.LFB146:
1428:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27228              		.loc 1 1439 0
 27229              		.cfi_startproc
 27230              		@ args = 0, pretend = 0, frame = 16
 27231              		@ frame_needed = 1, uses_anonymous_args = 0
 27232              		@ link register save eliminated.
 27233 0000 80B4     		push	{r7}
 27234              	.LCFI108:
 27235              		.cfi_def_cfa_offset 4
 27236 0002 85B0     		sub	sp, sp, #20
 27237              	.LCFI109:
 27238              		.cfi_def_cfa_offset 24
 27239 0004 00AF     		add	r7, sp, #0
 27240              		.cfi_offset 7, -4
 27241              	.LCFI110:
 27242              		.cfi_def_cfa_register 7
 27243 0006 7860     		str	r0, [r7, #4]
 27244 0008 0B46     		mov	r3, r1
 27245 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1440:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 27246              		.loc 1 1440 0
 27247 000c 4FF00003 		mov	r3, #0
 27248 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1441:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 27249              		.loc 1 1447 0
 27250 0012 7B68     		ldr	r3, [r7, #4]
 27251 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 27252 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1448:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 27253              		.loc 1 1450 0
 27254 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27255 001a 23F48063 		bic	r3, r3, #1024
 27256 001e FB81     		strh	r3, [r7, #14]	@ movhi
1451:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 27257              		.loc 1 1453 0
 27258 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27259 0022 4FEA0323 		lsl	r3, r3, #8
 27260 0026 9AB2     		uxth	r2, r3
 27261 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27262 002a 42EA0303 		orr	r3, r2, r3
 27263 002e FB81     		strh	r3, [r7, #14]	@ movhi
1454:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 27264              		.loc 1 1456 0
 27265 0030 7B68     		ldr	r3, [r7, #4]
 27266 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27267 0034 9A83     		strh	r2, [r3, #28]	@ movhi
1457:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27268              		.loc 1 1457 0
 27269 0036 07F11407 		add	r7, r7, #20
 27270 003a BD46     		mov	sp, r7
 27271 003c 80BC     		pop	{r7}
 27272 003e 7047     		bx	lr
 27273              		.cfi_endproc
 27274              	.LFE146:
 27276              		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 27277              		.align	2
 27278              		.global	TIM_ClearOC1Ref
 27279              		.thumb
 27280              		.thumb_func
 27282              	TIM_ClearOC1Ref:
 27283              	.LFB147:
1458:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27284              		.loc 1 1469 0
 27285              		.cfi_startproc
 27286              		@ args = 0, pretend = 0, frame = 16
 27287              		@ frame_needed = 1, uses_anonymous_args = 0
 27288              		@ link register save eliminated.
 27289 0000 80B4     		push	{r7}
 27290              	.LCFI111:
 27291              		.cfi_def_cfa_offset 4
 27292 0002 85B0     		sub	sp, sp, #20
 27293              	.LCFI112:
 27294              		.cfi_def_cfa_offset 24
 27295 0004 00AF     		add	r7, sp, #0
 27296              		.cfi_offset 7, -4
 27297              	.LCFI113:
 27298              		.cfi_def_cfa_register 7
 27299 0006 7860     		str	r0, [r7, #4]
 27300 0008 0B46     		mov	r3, r1
 27301 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1470:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 27302              		.loc 1 1470 0
 27303 000c 4FF00003 		mov	r3, #0
 27304 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1471:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 27305              		.loc 1 1476 0
 27306 0012 7B68     		ldr	r3, [r7, #4]
 27307 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 27308 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1477:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 27309              		.loc 1 1479 0
 27310 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27311 001a 23F08003 		bic	r3, r3, #128
 27312 001e FB81     		strh	r3, [r7, #14]	@ movhi
1480:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 27313              		.loc 1 1482 0
 27314 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27315 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27316 0024 42EA0303 		orr	r3, r2, r3
 27317 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1483:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 27318              		.loc 1 1485 0
 27319 002a 7B68     		ldr	r3, [r7, #4]
 27320 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 27321 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1486:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27322              		.loc 1 1486 0
 27323 0030 07F11407 		add	r7, r7, #20
 27324 0034 BD46     		mov	sp, r7
 27325 0036 80BC     		pop	{r7}
 27326 0038 7047     		bx	lr
 27327              		.cfi_endproc
 27328              	.LFE147:
 27330 003a 00BF     		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 27331              		.align	2
 27332              		.global	TIM_ClearOC2Ref
 27333              		.thumb
 27334              		.thumb_func
 27336              	TIM_ClearOC2Ref:
 27337              	.LFB148:
1487:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27338              		.loc 1 1499 0
 27339              		.cfi_startproc
 27340              		@ args = 0, pretend = 0, frame = 16
 27341              		@ frame_needed = 1, uses_anonymous_args = 0
 27342              		@ link register save eliminated.
 27343 0000 80B4     		push	{r7}
 27344              	.LCFI114:
 27345              		.cfi_def_cfa_offset 4
 27346 0002 85B0     		sub	sp, sp, #20
 27347              	.LCFI115:
 27348              		.cfi_def_cfa_offset 24
 27349 0004 00AF     		add	r7, sp, #0
 27350              		.cfi_offset 7, -4
 27351              	.LCFI116:
 27352              		.cfi_def_cfa_register 7
 27353 0006 7860     		str	r0, [r7, #4]
 27354 0008 0B46     		mov	r3, r1
 27355 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1500:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 27356              		.loc 1 1500 0
 27357 000c 4FF00003 		mov	r3, #0
 27358 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1501:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 27359              		.loc 1 1506 0
 27360 0012 7B68     		ldr	r3, [r7, #4]
 27361 0014 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 27362 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1507:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 27363              		.loc 1 1509 0
 27364 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27365 001a 4FEA4343 		lsl	r3, r3, #17
 27366 001e 4FEA5343 		lsr	r3, r3, #17
 27367 0022 FB81     		strh	r3, [r7, #14]	@ movhi
1510:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 27368              		.loc 1 1512 0
 27369 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27370 0026 4FEA0323 		lsl	r3, r3, #8
 27371 002a 9AB2     		uxth	r2, r3
 27372 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 27373 002e 42EA0303 		orr	r3, r2, r3
 27374 0032 FB81     		strh	r3, [r7, #14]	@ movhi
1513:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 27375              		.loc 1 1515 0
 27376 0034 7B68     		ldr	r3, [r7, #4]
 27377 0036 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27378 0038 1A83     		strh	r2, [r3, #24]	@ movhi
1516:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27379              		.loc 1 1516 0
 27380 003a 07F11407 		add	r7, r7, #20
 27381 003e BD46     		mov	sp, r7
 27382 0040 80BC     		pop	{r7}
 27383 0042 7047     		bx	lr
 27384              		.cfi_endproc
 27385              	.LFE148:
 27387              		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 27388              		.align	2
 27389              		.global	TIM_ClearOC3Ref
 27390              		.thumb
 27391              		.thumb_func
 27393              	TIM_ClearOC3Ref:
 27394              	.LFB149:
1517:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27395              		.loc 1 1528 0
 27396              		.cfi_startproc
 27397              		@ args = 0, pretend = 0, frame = 16
 27398              		@ frame_needed = 1, uses_anonymous_args = 0
 27399              		@ link register save eliminated.
 27400 0000 80B4     		push	{r7}
 27401              	.LCFI117:
 27402              		.cfi_def_cfa_offset 4
 27403 0002 85B0     		sub	sp, sp, #20
 27404              	.LCFI118:
 27405              		.cfi_def_cfa_offset 24
 27406 0004 00AF     		add	r7, sp, #0
 27407              		.cfi_offset 7, -4
 27408              	.LCFI119:
 27409              		.cfi_def_cfa_register 7
 27410 0006 7860     		str	r0, [r7, #4]
 27411 0008 0B46     		mov	r3, r1
 27412 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1529:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 27413              		.loc 1 1529 0
 27414 000c 4FF00003 		mov	r3, #0
 27415 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1530:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 27416              		.loc 1 1535 0
 27417 0012 7B68     		ldr	r3, [r7, #4]
 27418 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 27419 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1536:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 27420              		.loc 1 1538 0
 27421 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27422 001a 23F08003 		bic	r3, r3, #128
 27423 001e FB81     		strh	r3, [r7, #14]	@ movhi
1539:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 27424              		.loc 1 1541 0
 27425 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27426 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27427 0024 42EA0303 		orr	r3, r2, r3
 27428 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1542:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 27429              		.loc 1 1544 0
 27430 002a 7B68     		ldr	r3, [r7, #4]
 27431 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 27432 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1545:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27433              		.loc 1 1545 0
 27434 0030 07F11407 		add	r7, r7, #20
 27435 0034 BD46     		mov	sp, r7
 27436 0036 80BC     		pop	{r7}
 27437 0038 7047     		bx	lr
 27438              		.cfi_endproc
 27439              	.LFE149:
 27441 003a 00BF     		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 27442              		.align	2
 27443              		.global	TIM_ClearOC4Ref
 27444              		.thumb
 27445              		.thumb_func
 27447              	TIM_ClearOC4Ref:
 27448              	.LFB150:
1546:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27449              		.loc 1 1557 0
 27450              		.cfi_startproc
 27451              		@ args = 0, pretend = 0, frame = 16
 27452              		@ frame_needed = 1, uses_anonymous_args = 0
 27453              		@ link register save eliminated.
 27454 0000 80B4     		push	{r7}
 27455              	.LCFI120:
 27456              		.cfi_def_cfa_offset 4
 27457 0002 85B0     		sub	sp, sp, #20
 27458              	.LCFI121:
 27459              		.cfi_def_cfa_offset 24
 27460 0004 00AF     		add	r7, sp, #0
 27461              		.cfi_offset 7, -4
 27462              	.LCFI122:
 27463              		.cfi_def_cfa_register 7
 27464 0006 7860     		str	r0, [r7, #4]
 27465 0008 0B46     		mov	r3, r1
 27466 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1558:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 27467              		.loc 1 1558 0
 27468 000c 4FF00003 		mov	r3, #0
 27469 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1559:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 27470              		.loc 1 1564 0
 27471 0012 7B68     		ldr	r3, [r7, #4]
 27472 0014 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 27473 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1565:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 27474              		.loc 1 1567 0
 27475 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27476 001a 4FEA4343 		lsl	r3, r3, #17
 27477 001e 4FEA5343 		lsr	r3, r3, #17
 27478 0022 FB81     		strh	r3, [r7, #14]	@ movhi
1568:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 27479              		.loc 1 1570 0
 27480 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27481 0026 4FEA0323 		lsl	r3, r3, #8
 27482 002a 9AB2     		uxth	r2, r3
 27483 002c FB89     		ldrh	r3, [r7, #14]	@ movhi
 27484 002e 42EA0303 		orr	r3, r2, r3
 27485 0032 FB81     		strh	r3, [r7, #14]	@ movhi
1571:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 27486              		.loc 1 1573 0
 27487 0034 7B68     		ldr	r3, [r7, #4]
 27488 0036 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27489 0038 9A83     		strh	r2, [r3, #28]	@ movhi
1574:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27490              		.loc 1 1574 0
 27491 003a 07F11407 		add	r7, r7, #20
 27492 003e BD46     		mov	sp, r7
 27493 0040 80BC     		pop	{r7}
 27494 0042 7047     		bx	lr
 27495              		.cfi_endproc
 27496              	.LFE150:
 27498              		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 27499              		.align	2
 27500              		.global	TIM_OC1PolarityConfig
 27501              		.thumb
 27502              		.thumb_func
 27504              	TIM_OC1PolarityConfig:
 27505              	.LFB151:
1575:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27506              		.loc 1 1586 0
 27507              		.cfi_startproc
 27508              		@ args = 0, pretend = 0, frame = 16
 27509              		@ frame_needed = 1, uses_anonymous_args = 0
 27510              		@ link register save eliminated.
 27511 0000 80B4     		push	{r7}
 27512              	.LCFI123:
 27513              		.cfi_def_cfa_offset 4
 27514 0002 85B0     		sub	sp, sp, #20
 27515              	.LCFI124:
 27516              		.cfi_def_cfa_offset 24
 27517 0004 00AF     		add	r7, sp, #0
 27518              		.cfi_offset 7, -4
 27519              	.LCFI125:
 27520              		.cfi_def_cfa_register 7
 27521 0006 7860     		str	r0, [r7, #4]
 27522 0008 0B46     		mov	r3, r1
 27523 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1587:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 27524              		.loc 1 1587 0
 27525 000c 4FF00003 		mov	r3, #0
 27526 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1588:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 27527              		.loc 1 1593 0
 27528 0012 7B68     		ldr	r3, [r7, #4]
 27529 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27530 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1594:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 27531              		.loc 1 1596 0
 27532 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27533 001a 23F00203 		bic	r3, r3, #2
 27534 001e FB81     		strh	r3, [r7, #14]	@ movhi
1597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 27535              		.loc 1 1597 0
 27536 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27537 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27538 0024 42EA0303 		orr	r3, r2, r3
 27539 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1598:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 27540              		.loc 1 1600 0
 27541 002a 7B68     		ldr	r3, [r7, #4]
 27542 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 27543 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1601:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27544              		.loc 1 1601 0
 27545 0030 07F11407 		add	r7, r7, #20
 27546 0034 BD46     		mov	sp, r7
 27547 0036 80BC     		pop	{r7}
 27548 0038 7047     		bx	lr
 27549              		.cfi_endproc
 27550              	.LFE151:
 27552 003a 00BF     		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 27553              		.align	2
 27554              		.global	TIM_OC1NPolarityConfig
 27555              		.thumb
 27556              		.thumb_func
 27558              	TIM_OC1NPolarityConfig:
 27559              	.LFB152:
1602:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27560              		.loc 1 1613 0
 27561              		.cfi_startproc
 27562              		@ args = 0, pretend = 0, frame = 16
 27563              		@ frame_needed = 1, uses_anonymous_args = 0
 27564              		@ link register save eliminated.
 27565 0000 80B4     		push	{r7}
 27566              	.LCFI126:
 27567              		.cfi_def_cfa_offset 4
 27568 0002 85B0     		sub	sp, sp, #20
 27569              	.LCFI127:
 27570              		.cfi_def_cfa_offset 24
 27571 0004 00AF     		add	r7, sp, #0
 27572              		.cfi_offset 7, -4
 27573              	.LCFI128:
 27574              		.cfi_def_cfa_register 7
 27575 0006 7860     		str	r0, [r7, #4]
 27576 0008 0B46     		mov	r3, r1
 27577 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1614:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 27578              		.loc 1 1614 0
 27579 000c 4FF00003 		mov	r3, #0
 27580 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1615:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 27581              		.loc 1 1619 0
 27582 0012 7B68     		ldr	r3, [r7, #4]
 27583 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27584 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1620:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 27585              		.loc 1 1622 0
 27586 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27587 001a 23F00803 		bic	r3, r3, #8
 27588 001e FB81     		strh	r3, [r7, #14]	@ movhi
1623:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 27589              		.loc 1 1623 0
 27590 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27591 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27592 0024 42EA0303 		orr	r3, r2, r3
 27593 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1624:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 27594              		.loc 1 1626 0
 27595 002a 7B68     		ldr	r3, [r7, #4]
 27596 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 27597 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1627:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27598              		.loc 1 1627 0
 27599 0030 07F11407 		add	r7, r7, #20
 27600 0034 BD46     		mov	sp, r7
 27601 0036 80BC     		pop	{r7}
 27602 0038 7047     		bx	lr
 27603              		.cfi_endproc
 27604              	.LFE152:
 27606 003a 00BF     		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 27607              		.align	2
 27608              		.global	TIM_OC2PolarityConfig
 27609              		.thumb
 27610              		.thumb_func
 27612              	TIM_OC2PolarityConfig:
 27613              	.LFB153:
1628:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27614              		.loc 1 1640 0
 27615              		.cfi_startproc
 27616              		@ args = 0, pretend = 0, frame = 16
 27617              		@ frame_needed = 1, uses_anonymous_args = 0
 27618              		@ link register save eliminated.
 27619 0000 80B4     		push	{r7}
 27620              	.LCFI129:
 27621              		.cfi_def_cfa_offset 4
 27622 0002 85B0     		sub	sp, sp, #20
 27623              	.LCFI130:
 27624              		.cfi_def_cfa_offset 24
 27625 0004 00AF     		add	r7, sp, #0
 27626              		.cfi_offset 7, -4
 27627              	.LCFI131:
 27628              		.cfi_def_cfa_register 7
 27629 0006 7860     		str	r0, [r7, #4]
 27630 0008 0B46     		mov	r3, r1
 27631 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1641:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 27632              		.loc 1 1641 0
 27633 000c 4FF00003 		mov	r3, #0
 27634 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1642:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 27635              		.loc 1 1647 0
 27636 0012 7B68     		ldr	r3, [r7, #4]
 27637 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27638 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1648:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 27639              		.loc 1 1650 0
 27640 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27641 001a 23F02003 		bic	r3, r3, #32
 27642 001e FB81     		strh	r3, [r7, #14]	@ movhi
1651:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 27643              		.loc 1 1651 0
 27644 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27645 0022 4FEA0313 		lsl	r3, r3, #4
 27646 0026 9AB2     		uxth	r2, r3
 27647 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27648 002a 42EA0303 		orr	r3, r2, r3
 27649 002e FB81     		strh	r3, [r7, #14]	@ movhi
1652:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 27650              		.loc 1 1654 0
 27651 0030 7B68     		ldr	r3, [r7, #4]
 27652 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27653 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1655:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27654              		.loc 1 1655 0
 27655 0036 07F11407 		add	r7, r7, #20
 27656 003a BD46     		mov	sp, r7
 27657 003c 80BC     		pop	{r7}
 27658 003e 7047     		bx	lr
 27659              		.cfi_endproc
 27660              	.LFE153:
 27662              		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 27663              		.align	2
 27664              		.global	TIM_OC2NPolarityConfig
 27665              		.thumb
 27666              		.thumb_func
 27668              	TIM_OC2NPolarityConfig:
 27669              	.LFB154:
1656:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27670              		.loc 1 1667 0
 27671              		.cfi_startproc
 27672              		@ args = 0, pretend = 0, frame = 16
 27673              		@ frame_needed = 1, uses_anonymous_args = 0
 27674              		@ link register save eliminated.
 27675 0000 80B4     		push	{r7}
 27676              	.LCFI132:
 27677              		.cfi_def_cfa_offset 4
 27678 0002 85B0     		sub	sp, sp, #20
 27679              	.LCFI133:
 27680              		.cfi_def_cfa_offset 24
 27681 0004 00AF     		add	r7, sp, #0
 27682              		.cfi_offset 7, -4
 27683              	.LCFI134:
 27684              		.cfi_def_cfa_register 7
 27685 0006 7860     		str	r0, [r7, #4]
 27686 0008 0B46     		mov	r3, r1
 27687 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1668:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 27688              		.loc 1 1668 0
 27689 000c 4FF00003 		mov	r3, #0
 27690 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1669:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 27691              		.loc 1 1674 0
 27692 0012 7B68     		ldr	r3, [r7, #4]
 27693 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27694 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1675:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 27695              		.loc 1 1677 0
 27696 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27697 001a 23F08003 		bic	r3, r3, #128
 27698 001e FB81     		strh	r3, [r7, #14]	@ movhi
1678:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 27699              		.loc 1 1678 0
 27700 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27701 0022 4FEA0313 		lsl	r3, r3, #4
 27702 0026 9AB2     		uxth	r2, r3
 27703 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27704 002a 42EA0303 		orr	r3, r2, r3
 27705 002e FB81     		strh	r3, [r7, #14]	@ movhi
1679:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 27706              		.loc 1 1681 0
 27707 0030 7B68     		ldr	r3, [r7, #4]
 27708 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27709 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1682:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27710              		.loc 1 1682 0
 27711 0036 07F11407 		add	r7, r7, #20
 27712 003a BD46     		mov	sp, r7
 27713 003c 80BC     		pop	{r7}
 27714 003e 7047     		bx	lr
 27715              		.cfi_endproc
 27716              	.LFE154:
 27718              		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 27719              		.align	2
 27720              		.global	TIM_OC3PolarityConfig
 27721              		.thumb
 27722              		.thumb_func
 27724              	TIM_OC3PolarityConfig:
 27725              	.LFB155:
1683:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27726              		.loc 1 1694 0
 27727              		.cfi_startproc
 27728              		@ args = 0, pretend = 0, frame = 16
 27729              		@ frame_needed = 1, uses_anonymous_args = 0
 27730              		@ link register save eliminated.
 27731 0000 80B4     		push	{r7}
 27732              	.LCFI135:
 27733              		.cfi_def_cfa_offset 4
 27734 0002 85B0     		sub	sp, sp, #20
 27735              	.LCFI136:
 27736              		.cfi_def_cfa_offset 24
 27737 0004 00AF     		add	r7, sp, #0
 27738              		.cfi_offset 7, -4
 27739              	.LCFI137:
 27740              		.cfi_def_cfa_register 7
 27741 0006 7860     		str	r0, [r7, #4]
 27742 0008 0B46     		mov	r3, r1
 27743 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1695:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 27744              		.loc 1 1695 0
 27745 000c 4FF00003 		mov	r3, #0
 27746 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1696:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 27747              		.loc 1 1701 0
 27748 0012 7B68     		ldr	r3, [r7, #4]
 27749 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27750 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1702:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 27751              		.loc 1 1704 0
 27752 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27753 001a 23F40073 		bic	r3, r3, #512
 27754 001e FB81     		strh	r3, [r7, #14]	@ movhi
1705:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 27755              		.loc 1 1705 0
 27756 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27757 0022 4FEA0323 		lsl	r3, r3, #8
 27758 0026 9AB2     		uxth	r2, r3
 27759 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27760 002a 42EA0303 		orr	r3, r2, r3
 27761 002e FB81     		strh	r3, [r7, #14]	@ movhi
1706:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 27762              		.loc 1 1708 0
 27763 0030 7B68     		ldr	r3, [r7, #4]
 27764 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27765 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1709:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27766              		.loc 1 1709 0
 27767 0036 07F11407 		add	r7, r7, #20
 27768 003a BD46     		mov	sp, r7
 27769 003c 80BC     		pop	{r7}
 27770 003e 7047     		bx	lr
 27771              		.cfi_endproc
 27772              	.LFE155:
 27774              		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 27775              		.align	2
 27776              		.global	TIM_OC3NPolarityConfig
 27777              		.thumb
 27778              		.thumb_func
 27780              	TIM_OC3NPolarityConfig:
 27781              	.LFB156:
1710:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27782              		.loc 1 1721 0
 27783              		.cfi_startproc
 27784              		@ args = 0, pretend = 0, frame = 16
 27785              		@ frame_needed = 1, uses_anonymous_args = 0
 27786              		@ link register save eliminated.
 27787 0000 80B4     		push	{r7}
 27788              	.LCFI138:
 27789              		.cfi_def_cfa_offset 4
 27790 0002 85B0     		sub	sp, sp, #20
 27791              	.LCFI139:
 27792              		.cfi_def_cfa_offset 24
 27793 0004 00AF     		add	r7, sp, #0
 27794              		.cfi_offset 7, -4
 27795              	.LCFI140:
 27796              		.cfi_def_cfa_register 7
 27797 0006 7860     		str	r0, [r7, #4]
 27798 0008 0B46     		mov	r3, r1
 27799 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1722:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 27800              		.loc 1 1722 0
 27801 000c 4FF00003 		mov	r3, #0
 27802 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1723:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 27803              		.loc 1 1728 0
 27804 0012 7B68     		ldr	r3, [r7, #4]
 27805 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27806 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1729:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 27807              		.loc 1 1731 0
 27808 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27809 001a 23F40063 		bic	r3, r3, #2048
 27810 001e FB81     		strh	r3, [r7, #14]	@ movhi
1732:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 27811              		.loc 1 1732 0
 27812 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27813 0022 4FEA0323 		lsl	r3, r3, #8
 27814 0026 9AB2     		uxth	r2, r3
 27815 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27816 002a 42EA0303 		orr	r3, r2, r3
 27817 002e FB81     		strh	r3, [r7, #14]	@ movhi
1733:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 27818              		.loc 1 1735 0
 27819 0030 7B68     		ldr	r3, [r7, #4]
 27820 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27821 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1736:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27822              		.loc 1 1736 0
 27823 0036 07F11407 		add	r7, r7, #20
 27824 003a BD46     		mov	sp, r7
 27825 003c 80BC     		pop	{r7}
 27826 003e 7047     		bx	lr
 27827              		.cfi_endproc
 27828              	.LFE156:
 27830              		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 27831              		.align	2
 27832              		.global	TIM_OC4PolarityConfig
 27833              		.thumb
 27834              		.thumb_func
 27836              	TIM_OC4PolarityConfig:
 27837              	.LFB157:
1737:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27838              		.loc 1 1748 0
 27839              		.cfi_startproc
 27840              		@ args = 0, pretend = 0, frame = 16
 27841              		@ frame_needed = 1, uses_anonymous_args = 0
 27842              		@ link register save eliminated.
 27843 0000 80B4     		push	{r7}
 27844              	.LCFI141:
 27845              		.cfi_def_cfa_offset 4
 27846 0002 85B0     		sub	sp, sp, #20
 27847              	.LCFI142:
 27848              		.cfi_def_cfa_offset 24
 27849 0004 00AF     		add	r7, sp, #0
 27850              		.cfi_offset 7, -4
 27851              	.LCFI143:
 27852              		.cfi_def_cfa_register 7
 27853 0006 7860     		str	r0, [r7, #4]
 27854 0008 0B46     		mov	r3, r1
 27855 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1749:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 27856              		.loc 1 1749 0
 27857 000c 4FF00003 		mov	r3, #0
 27858 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1750:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 27859              		.loc 1 1755 0
 27860 0012 7B68     		ldr	r3, [r7, #4]
 27861 0014 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27862 0016 FB81     		strh	r3, [r7, #14]	@ movhi
1756:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 27863              		.loc 1 1758 0
 27864 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27865 001a 23F40053 		bic	r3, r3, #8192
 27866 001e FB81     		strh	r3, [r7, #14]	@ movhi
1759:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 27867              		.loc 1 1759 0
 27868 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 27869 0022 4FEA0333 		lsl	r3, r3, #12
 27870 0026 9AB2     		uxth	r2, r3
 27871 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27872 002a 42EA0303 		orr	r3, r2, r3
 27873 002e FB81     		strh	r3, [r7, #14]	@ movhi
1760:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 27874              		.loc 1 1762 0
 27875 0030 7B68     		ldr	r3, [r7, #4]
 27876 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 27877 0034 1A84     		strh	r2, [r3, #32]	@ movhi
1763:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27878              		.loc 1 1763 0
 27879 0036 07F11407 		add	r7, r7, #20
 27880 003a BD46     		mov	sp, r7
 27881 003c 80BC     		pop	{r7}
 27882 003e 7047     		bx	lr
 27883              		.cfi_endproc
 27884              	.LFE157:
 27886              		.section	.text.TIM_CCxCmd,"ax",%progbits
 27887              		.align	2
 27888              		.global	TIM_CCxCmd
 27889              		.thumb
 27890              		.thumb_func
 27892              	TIM_CCxCmd:
 27893              	.LFB158:
1764:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27894              		.loc 1 1779 0
 27895              		.cfi_startproc
 27896              		@ args = 0, pretend = 0, frame = 16
 27897              		@ frame_needed = 1, uses_anonymous_args = 0
 27898              		@ link register save eliminated.
 27899 0000 80B4     		push	{r7}
 27900              	.LCFI144:
 27901              		.cfi_def_cfa_offset 4
 27902 0002 85B0     		sub	sp, sp, #20
 27903              	.LCFI145:
 27904              		.cfi_def_cfa_offset 24
 27905 0004 00AF     		add	r7, sp, #0
 27906              		.cfi_offset 7, -4
 27907              	.LCFI146:
 27908              		.cfi_def_cfa_register 7
 27909 0006 7860     		str	r0, [r7, #4]
 27910 0008 1346     		mov	r3, r2
 27911 000a 0A46     		mov	r2, r1	@ movhi
 27912 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 27913 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1780:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 27914              		.loc 1 1780 0
 27915 0010 4FF00003 		mov	r3, #0
 27916 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1781:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 27917              		.loc 1 1787 0
 27918 0016 7B88     		ldrh	r3, [r7, #2]
 27919 0018 4FF00102 		mov	r2, #1
 27920 001c 02FA03F3 		lsl	r3, r2, r3
 27921 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1788:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 27922              		.loc 1 1790 0
 27923 0022 7B68     		ldr	r3, [r7, #4]
 27924 0024 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27925 0026 9AB2     		uxth	r2, r3
 27926 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27927 002a 6FEA0303 		mvn	r3, r3
 27928 002e 9BB2     		uxth	r3, r3
 27929 0030 02EA0303 		and	r3, r2, r3
 27930 0034 9AB2     		uxth	r2, r3
 27931 0036 7B68     		ldr	r3, [r7, #4]
 27932 0038 1A84     		strh	r2, [r3, #32]	@ movhi
1791:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 27933              		.loc 1 1793 0
 27934 003a 7B68     		ldr	r3, [r7, #4]
 27935 003c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27936 003e 9AB2     		uxth	r2, r3
 27937 0040 3988     		ldrh	r1, [r7, #0]
 27938 0042 7B88     		ldrh	r3, [r7, #2]
 27939 0044 01FA03F3 		lsl	r3, r1, r3
 27940 0048 9BB2     		uxth	r3, r3
 27941 004a 42EA0303 		orr	r3, r2, r3
 27942 004e 9AB2     		uxth	r2, r3
 27943 0050 7B68     		ldr	r3, [r7, #4]
 27944 0052 1A84     		strh	r2, [r3, #32]	@ movhi
1794:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 27945              		.loc 1 1794 0
 27946 0054 07F11407 		add	r7, r7, #20
 27947 0058 BD46     		mov	sp, r7
 27948 005a 80BC     		pop	{r7}
 27949 005c 7047     		bx	lr
 27950              		.cfi_endproc
 27951              	.LFE158:
 27953 005e 00BF     		.section	.text.TIM_CCxNCmd,"ax",%progbits
 27954              		.align	2
 27955              		.global	TIM_CCxNCmd
 27956              		.thumb
 27957              		.thumb_func
 27959              	TIM_CCxNCmd:
 27960              	.LFB159:
1795:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 27961              		.loc 1 1809 0
 27962              		.cfi_startproc
 27963              		@ args = 0, pretend = 0, frame = 16
 27964              		@ frame_needed = 1, uses_anonymous_args = 0
 27965              		@ link register save eliminated.
 27966 0000 80B4     		push	{r7}
 27967              	.LCFI147:
 27968              		.cfi_def_cfa_offset 4
 27969 0002 85B0     		sub	sp, sp, #20
 27970              	.LCFI148:
 27971              		.cfi_def_cfa_offset 24
 27972 0004 00AF     		add	r7, sp, #0
 27973              		.cfi_offset 7, -4
 27974              	.LCFI149:
 27975              		.cfi_def_cfa_register 7
 27976 0006 7860     		str	r0, [r7, #4]
 27977 0008 1346     		mov	r3, r2
 27978 000a 0A46     		mov	r2, r1	@ movhi
 27979 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 27980 000e 3B80     		strh	r3, [r7, #0]	@ movhi
1810:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 27981              		.loc 1 1810 0
 27982 0010 4FF00003 		mov	r3, #0
 27983 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1811:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 27984              		.loc 1 1817 0
 27985 0016 7B88     		ldrh	r3, [r7, #2]
 27986 0018 4FF00402 		mov	r2, #4
 27987 001c 02FA03F3 		lsl	r3, r2, r3
 27988 0020 FB81     		strh	r3, [r7, #14]	@ movhi
1818:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 27989              		.loc 1 1820 0
 27990 0022 7B68     		ldr	r3, [r7, #4]
 27991 0024 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 27992 0026 9AB2     		uxth	r2, r3
 27993 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 27994 002a 6FEA0303 		mvn	r3, r3
 27995 002e 9BB2     		uxth	r3, r3
 27996 0030 02EA0303 		and	r3, r2, r3
 27997 0034 9AB2     		uxth	r2, r3
 27998 0036 7B68     		ldr	r3, [r7, #4]
 27999 0038 1A84     		strh	r2, [r3, #32]	@ movhi
1821:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 28000              		.loc 1 1823 0
 28001 003a 7B68     		ldr	r3, [r7, #4]
 28002 003c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 28003 003e 9AB2     		uxth	r2, r3
 28004 0040 3988     		ldrh	r1, [r7, #0]
 28005 0042 7B88     		ldrh	r3, [r7, #2]
 28006 0044 01FA03F3 		lsl	r3, r1, r3
 28007 0048 9BB2     		uxth	r3, r3
 28008 004a 42EA0303 		orr	r3, r2, r3
 28009 004e 9AB2     		uxth	r2, r3
 28010 0050 7B68     		ldr	r3, [r7, #4]
 28011 0052 1A84     		strh	r2, [r3, #32]	@ movhi
1824:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28012              		.loc 1 1824 0
 28013 0054 07F11407 		add	r7, r7, #20
 28014 0058 BD46     		mov	sp, r7
 28015 005a 80BC     		pop	{r7}
 28016 005c 7047     		bx	lr
 28017              		.cfi_endproc
 28018              	.LFE159:
 28020 005e 00BF     		.section	.text.TIM_ICInit,"ax",%progbits
 28021              		.align	2
 28022              		.global	TIM_ICInit
 28023              		.thumb
 28024              		.thumb_func
 28026              	TIM_ICInit:
 28027              	.LFB160:
1825:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28028              		.loc 1 1891 0
 28029              		.cfi_startproc
 28030              		@ args = 0, pretend = 0, frame = 8
 28031              		@ frame_needed = 1, uses_anonymous_args = 0
 28032 0000 80B5     		push	{r7, lr}
 28033              	.LCFI150:
 28034              		.cfi_def_cfa_offset 8
 28035 0002 82B0     		sub	sp, sp, #8
 28036              	.LCFI151:
 28037              		.cfi_def_cfa_offset 16
 28038 0004 00AF     		add	r7, sp, #0
 28039              		.cfi_offset 14, -4
 28040              		.cfi_offset 7, -8
 28041              	.LCFI152:
 28042              		.cfi_def_cfa_register 7
 28043 0006 7860     		str	r0, [r7, #4]
 28044 0008 3960     		str	r1, [r7, #0]
1892:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 28045              		.loc 1 1899 0
 28046 000a 3B68     		ldr	r3, [r7, #0]
 28047 000c 1B88     		ldrh	r3, [r3, #0]
 28048 000e 002B     		cmp	r3, #0
 28049 0010 0FD1     		bne	.L102
1900:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 28050              		.loc 1 1902 0
 28051 0012 3B68     		ldr	r3, [r7, #0]
 28052 0014 5988     		ldrh	r1, [r3, #2]
1903:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 28053              		.loc 1 1903 0
 28054 0016 3B68     		ldr	r3, [r7, #0]
1902:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 28055              		.loc 1 1902 0
 28056 0018 9A88     		ldrh	r2, [r3, #4]
1904:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 28057              		.loc 1 1904 0
 28058 001a 3B68     		ldr	r3, [r7, #0]
1902:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 28059              		.loc 1 1902 0
 28060 001c 1B89     		ldrh	r3, [r3, #8]
 28061 001e 7868     		ldr	r0, [r7, #4]
 28062 0020 FFF7FEFF 		bl	TI1_Config
1905:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 28063              		.loc 1 1906 0
 28064 0024 3B68     		ldr	r3, [r7, #0]
 28065 0026 DB88     		ldrh	r3, [r3, #6]
 28066 0028 7868     		ldr	r0, [r7, #4]
 28067 002a 1946     		mov	r1, r3
 28068 002c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 28069 0030 36E0     		b	.L101
 28070              	.L102:
1907:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 28071              		.loc 1 1908 0
 28072 0032 3B68     		ldr	r3, [r7, #0]
 28073 0034 1B88     		ldrh	r3, [r3, #0]
 28074 0036 042B     		cmp	r3, #4
 28075 0038 0FD1     		bne	.L104
1909:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1912:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 28076              		.loc 1 1912 0
 28077 003a 3B68     		ldr	r3, [r7, #0]
 28078 003c 5988     		ldrh	r1, [r3, #2]
1913:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 28079              		.loc 1 1913 0
 28080 003e 3B68     		ldr	r3, [r7, #0]
1912:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 28081              		.loc 1 1912 0
 28082 0040 9A88     		ldrh	r2, [r3, #4]
1914:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 28083              		.loc 1 1914 0
 28084 0042 3B68     		ldr	r3, [r7, #0]
1912:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 28085              		.loc 1 1912 0
 28086 0044 1B89     		ldrh	r3, [r3, #8]
 28087 0046 7868     		ldr	r0, [r7, #4]
 28088 0048 FFF7FEFF 		bl	TI2_Config
1915:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1916:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 28089              		.loc 1 1916 0
 28090 004c 3B68     		ldr	r3, [r7, #0]
 28091 004e DB88     		ldrh	r3, [r3, #6]
 28092 0050 7868     		ldr	r0, [r7, #4]
 28093 0052 1946     		mov	r1, r3
 28094 0054 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 28095 0058 22E0     		b	.L101
 28096              	.L104:
1917:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1918:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 28097              		.loc 1 1918 0
 28098 005a 3B68     		ldr	r3, [r7, #0]
 28099 005c 1B88     		ldrh	r3, [r3, #0]
 28100 005e 082B     		cmp	r3, #8
 28101 0060 0FD1     		bne	.L105
1919:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1920:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1921:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1922:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 28102              		.loc 1 1922 0
 28103 0062 3B68     		ldr	r3, [r7, #0]
 28104 0064 5988     		ldrh	r1, [r3, #2]
1923:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 28105              		.loc 1 1923 0
 28106 0066 3B68     		ldr	r3, [r7, #0]
1922:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 28107              		.loc 1 1922 0
 28108 0068 9A88     		ldrh	r2, [r3, #4]
1924:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 28109              		.loc 1 1924 0
 28110 006a 3B68     		ldr	r3, [r7, #0]
1922:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 28111              		.loc 1 1922 0
 28112 006c 1B89     		ldrh	r3, [r3, #8]
 28113 006e 7868     		ldr	r0, [r7, #4]
 28114 0070 FFF7FEFF 		bl	TI3_Config
1925:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1926:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 28115              		.loc 1 1926 0
 28116 0074 3B68     		ldr	r3, [r7, #0]
 28117 0076 DB88     		ldrh	r3, [r3, #6]
 28118 0078 7868     		ldr	r0, [r7, #4]
 28119 007a 1946     		mov	r1, r3
 28120 007c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 28121 0080 0EE0     		b	.L101
 28122              	.L105:
1927:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1928:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1929:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1930:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1931:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1932:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 28123              		.loc 1 1932 0
 28124 0082 3B68     		ldr	r3, [r7, #0]
 28125 0084 5988     		ldrh	r1, [r3, #2]
1933:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
 28126              		.loc 1 1933 0
 28127 0086 3B68     		ldr	r3, [r7, #0]
1932:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 28128              		.loc 1 1932 0
 28129 0088 9A88     		ldrh	r2, [r3, #4]
1934:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 28130              		.loc 1 1934 0
 28131 008a 3B68     		ldr	r3, [r7, #0]
1932:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 28132              		.loc 1 1932 0
 28133 008c 1B89     		ldrh	r3, [r3, #8]
 28134 008e 7868     		ldr	r0, [r7, #4]
 28135 0090 FFF7FEFF 		bl	TI4_Config
1935:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1936:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 28136              		.loc 1 1936 0
 28137 0094 3B68     		ldr	r3, [r7, #0]
 28138 0096 DB88     		ldrh	r3, [r3, #6]
 28139 0098 7868     		ldr	r0, [r7, #4]
 28140 009a 1946     		mov	r1, r3
 28141 009c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 28142              	.L101:
1937:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1938:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28143              		.loc 1 1938 0
 28144 00a0 07F10807 		add	r7, r7, #8
 28145 00a4 BD46     		mov	sp, r7
 28146 00a6 80BD     		pop	{r7, pc}
 28147              		.cfi_endproc
 28148              	.LFE160:
 28150              		.section	.text.TIM_ICStructInit,"ax",%progbits
 28151              		.align	2
 28152              		.global	TIM_ICStructInit
 28153              		.thumb
 28154              		.thumb_func
 28156              	TIM_ICStructInit:
 28157              	.LFB161:
1939:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1940:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1941:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1942:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1943:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1944:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1945:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1946:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1947:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28158              		.loc 1 1947 0
 28159              		.cfi_startproc
 28160              		@ args = 0, pretend = 0, frame = 8
 28161              		@ frame_needed = 1, uses_anonymous_args = 0
 28162              		@ link register save eliminated.
 28163 0000 80B4     		push	{r7}
 28164              	.LCFI153:
 28165              		.cfi_def_cfa_offset 4
 28166 0002 83B0     		sub	sp, sp, #12
 28167              	.LCFI154:
 28168              		.cfi_def_cfa_offset 16
 28169 0004 00AF     		add	r7, sp, #0
 28170              		.cfi_offset 7, -4
 28171              	.LCFI155:
 28172              		.cfi_def_cfa_register 7
 28173 0006 7860     		str	r0, [r7, #4]
1948:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1949:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 28174              		.loc 1 1949 0
 28175 0008 7B68     		ldr	r3, [r7, #4]
 28176 000a 4FF00002 		mov	r2, #0
 28177 000e 1A80     		strh	r2, [r3, #0]	@ movhi
1950:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 28178              		.loc 1 1950 0
 28179 0010 7B68     		ldr	r3, [r7, #4]
 28180 0012 4FF00002 		mov	r2, #0
 28181 0016 5A80     		strh	r2, [r3, #2]	@ movhi
1951:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 28182              		.loc 1 1951 0
 28183 0018 7B68     		ldr	r3, [r7, #4]
 28184 001a 4FF00102 		mov	r2, #1
 28185 001e 9A80     		strh	r2, [r3, #4]	@ movhi
1952:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 28186              		.loc 1 1952 0
 28187 0020 7B68     		ldr	r3, [r7, #4]
 28188 0022 4FF00002 		mov	r2, #0
 28189 0026 DA80     		strh	r2, [r3, #6]	@ movhi
1953:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 28190              		.loc 1 1953 0
 28191 0028 7B68     		ldr	r3, [r7, #4]
 28192 002a 4FF00002 		mov	r2, #0
 28193 002e 1A81     		strh	r2, [r3, #8]	@ movhi
1954:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28194              		.loc 1 1954 0
 28195 0030 07F10C07 		add	r7, r7, #12
 28196 0034 BD46     		mov	sp, r7
 28197 0036 80BC     		pop	{r7}
 28198 0038 7047     		bx	lr
 28199              		.cfi_endproc
 28200              	.LFE161:
 28202 003a 00BF     		.section	.text.TIM_PWMIConfig,"ax",%progbits
 28203              		.align	2
 28204              		.global	TIM_PWMIConfig
 28205              		.thumb
 28206              		.thumb_func
 28208              	TIM_PWMIConfig:
 28209              	.LFB162:
1955:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1956:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1957:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1958:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1959:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1960:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1961:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1962:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1963:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1964:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1965:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1966:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28210              		.loc 1 1966 0
 28211              		.cfi_startproc
 28212              		@ args = 0, pretend = 0, frame = 16
 28213              		@ frame_needed = 1, uses_anonymous_args = 0
 28214 0000 80B5     		push	{r7, lr}
 28215              	.LCFI156:
 28216              		.cfi_def_cfa_offset 8
 28217 0002 84B0     		sub	sp, sp, #16
 28218              	.LCFI157:
 28219              		.cfi_def_cfa_offset 24
 28220 0004 00AF     		add	r7, sp, #0
 28221              		.cfi_offset 14, -4
 28222              		.cfi_offset 7, -8
 28223              	.LCFI158:
 28224              		.cfi_def_cfa_register 7
 28225 0006 7860     		str	r0, [r7, #4]
 28226 0008 3960     		str	r1, [r7, #0]
1967:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 28227              		.loc 1 1967 0
 28228 000a 4FF00003 		mov	r3, #0
 28229 000e FB81     		strh	r3, [r7, #14]	@ movhi
1968:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 28230              		.loc 1 1968 0
 28231 0010 4FF00103 		mov	r3, #1
 28232 0014 BB81     		strh	r3, [r7, #12]	@ movhi
1969:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1971:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1972:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1973:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1974:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 28233              		.loc 1 1974 0
 28234 0016 3B68     		ldr	r3, [r7, #0]
 28235 0018 5B88     		ldrh	r3, [r3, #2]
 28236 001a 002B     		cmp	r3, #0
 28237 001c 03D1     		bne	.L108
1975:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1976:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 28238              		.loc 1 1976 0
 28239 001e 4FF00203 		mov	r3, #2
 28240 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 28241 0024 02E0     		b	.L109
 28242              	.L108:
1977:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1978:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1979:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1980:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 28243              		.loc 1 1980 0
 28244 0026 4FF00003 		mov	r3, #0
 28245 002a FB81     		strh	r3, [r7, #14]	@ movhi
 28246              	.L109:
1981:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1982:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1983:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 28247              		.loc 1 1983 0
 28248 002c 3B68     		ldr	r3, [r7, #0]
 28249 002e 9B88     		ldrh	r3, [r3, #4]
 28250 0030 012B     		cmp	r3, #1
 28251 0032 03D1     		bne	.L110
1984:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1985:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 28252              		.loc 1 1985 0
 28253 0034 4FF00203 		mov	r3, #2
 28254 0038 BB81     		strh	r3, [r7, #12]	@ movhi
 28255 003a 02E0     		b	.L111
 28256              	.L110:
1986:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1987:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1988:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1989:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 28257              		.loc 1 1989 0
 28258 003c 4FF00103 		mov	r3, #1
 28259 0040 BB81     		strh	r3, [r7, #12]	@ movhi
 28260              	.L111:
1990:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1991:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 28261              		.loc 1 1991 0
 28262 0042 3B68     		ldr	r3, [r7, #0]
 28263 0044 1B88     		ldrh	r3, [r3, #0]
 28264 0046 002B     		cmp	r3, #0
 28265 0048 1CD1     		bne	.L112
1992:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1993:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1994:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 28266              		.loc 1 1994 0
 28267 004a 3B68     		ldr	r3, [r7, #0]
 28268 004c 5988     		ldrh	r1, [r3, #2]
 28269 004e 3B68     		ldr	r3, [r7, #0]
 28270 0050 9A88     		ldrh	r2, [r3, #4]
1995:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 28271              		.loc 1 1995 0
 28272 0052 3B68     		ldr	r3, [r7, #0]
1994:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 28273              		.loc 1 1994 0
 28274 0054 1B89     		ldrh	r3, [r3, #8]
 28275 0056 7868     		ldr	r0, [r7, #4]
 28276 0058 FFF7FEFF 		bl	TI1_Config
1996:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1997:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 28277              		.loc 1 1997 0
 28278 005c 3B68     		ldr	r3, [r7, #0]
 28279 005e DB88     		ldrh	r3, [r3, #6]
 28280 0060 7868     		ldr	r0, [r7, #4]
 28281 0062 1946     		mov	r1, r3
 28282 0064 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1998:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1999:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 28283              		.loc 1 1999 0
 28284 0068 3B68     		ldr	r3, [r7, #0]
 28285 006a 1B89     		ldrh	r3, [r3, #8]
 28286 006c F989     		ldrh	r1, [r7, #14]
 28287 006e BA89     		ldrh	r2, [r7, #12]
 28288 0070 7868     		ldr	r0, [r7, #4]
 28289 0072 FFF7FEFF 		bl	TI2_Config
2000:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2001:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 28290              		.loc 1 2001 0
 28291 0076 3B68     		ldr	r3, [r7, #0]
 28292 0078 DB88     		ldrh	r3, [r3, #6]
 28293 007a 7868     		ldr	r0, [r7, #4]
 28294 007c 1946     		mov	r1, r3
 28295 007e FFF7FEFF 		bl	TIM_SetIC2Prescaler
 28296 0082 1BE0     		b	.L107
 28297              	.L112:
2002:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2003:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2004:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2005:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2006:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 28298              		.loc 1 2006 0
 28299 0084 3B68     		ldr	r3, [r7, #0]
 28300 0086 5988     		ldrh	r1, [r3, #2]
 28301 0088 3B68     		ldr	r3, [r7, #0]
 28302 008a 9A88     		ldrh	r2, [r3, #4]
2007:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
 28303              		.loc 1 2007 0
 28304 008c 3B68     		ldr	r3, [r7, #0]
2006:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 28305              		.loc 1 2006 0
 28306 008e 1B89     		ldrh	r3, [r3, #8]
 28307 0090 7868     		ldr	r0, [r7, #4]
 28308 0092 FFF7FEFF 		bl	TI2_Config
2008:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2009:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 28309              		.loc 1 2009 0
 28310 0096 3B68     		ldr	r3, [r7, #0]
 28311 0098 DB88     		ldrh	r3, [r3, #6]
 28312 009a 7868     		ldr	r0, [r7, #4]
 28313 009c 1946     		mov	r1, r3
 28314 009e FFF7FEFF 		bl	TIM_SetIC2Prescaler
2010:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2011:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 28315              		.loc 1 2011 0
 28316 00a2 3B68     		ldr	r3, [r7, #0]
 28317 00a4 1B89     		ldrh	r3, [r3, #8]
 28318 00a6 F989     		ldrh	r1, [r7, #14]
 28319 00a8 BA89     		ldrh	r2, [r7, #12]
 28320 00aa 7868     		ldr	r0, [r7, #4]
 28321 00ac FFF7FEFF 		bl	TI1_Config
2012:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2013:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 28322              		.loc 1 2013 0
 28323 00b0 3B68     		ldr	r3, [r7, #0]
 28324 00b2 DB88     		ldrh	r3, [r3, #6]
 28325 00b4 7868     		ldr	r0, [r7, #4]
 28326 00b6 1946     		mov	r1, r3
 28327 00b8 FFF7FEFF 		bl	TIM_SetIC1Prescaler
 28328              	.L107:
2014:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2015:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28329              		.loc 1 2015 0
 28330 00bc 07F11007 		add	r7, r7, #16
 28331 00c0 BD46     		mov	sp, r7
 28332 00c2 80BD     		pop	{r7, pc}
 28333              		.cfi_endproc
 28334              	.LFE162:
 28336              		.section	.text.TIM_GetCapture1,"ax",%progbits
 28337              		.align	2
 28338              		.global	TIM_GetCapture1
 28339              		.thumb
 28340              		.thumb_func
 28342              	TIM_GetCapture1:
 28343              	.LFB163:
2016:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2017:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2018:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2019:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2020:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2021:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2022:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2023:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28344              		.loc 1 2023 0
 28345              		.cfi_startproc
 28346              		@ args = 0, pretend = 0, frame = 8
 28347              		@ frame_needed = 1, uses_anonymous_args = 0
 28348              		@ link register save eliminated.
 28349 0000 80B4     		push	{r7}
 28350              	.LCFI159:
 28351              		.cfi_def_cfa_offset 4
 28352 0002 83B0     		sub	sp, sp, #12
 28353              	.LCFI160:
 28354              		.cfi_def_cfa_offset 16
 28355 0004 00AF     		add	r7, sp, #0
 28356              		.cfi_offset 7, -4
 28357              	.LCFI161:
 28358              		.cfi_def_cfa_register 7
 28359 0006 7860     		str	r0, [r7, #4]
2024:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2025:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2026:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2027:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2028:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 28360              		.loc 1 2028 0
 28361 0008 7B68     		ldr	r3, [r7, #4]
 28362 000a 5B6B     		ldr	r3, [r3, #52]
2029:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28363              		.loc 1 2029 0
 28364 000c 1846     		mov	r0, r3
 28365 000e 07F10C07 		add	r7, r7, #12
 28366 0012 BD46     		mov	sp, r7
 28367 0014 80BC     		pop	{r7}
 28368 0016 7047     		bx	lr
 28369              		.cfi_endproc
 28370              	.LFE163:
 28372              		.section	.text.TIM_GetCapture2,"ax",%progbits
 28373              		.align	2
 28374              		.global	TIM_GetCapture2
 28375              		.thumb
 28376              		.thumb_func
 28378              	TIM_GetCapture2:
 28379              	.LFB164:
2030:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2031:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2032:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2033:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2034:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2035:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2036:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2037:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2038:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28380              		.loc 1 2038 0
 28381              		.cfi_startproc
 28382              		@ args = 0, pretend = 0, frame = 8
 28383              		@ frame_needed = 1, uses_anonymous_args = 0
 28384              		@ link register save eliminated.
 28385 0000 80B4     		push	{r7}
 28386              	.LCFI162:
 28387              		.cfi_def_cfa_offset 4
 28388 0002 83B0     		sub	sp, sp, #12
 28389              	.LCFI163:
 28390              		.cfi_def_cfa_offset 16
 28391 0004 00AF     		add	r7, sp, #0
 28392              		.cfi_offset 7, -4
 28393              	.LCFI164:
 28394              		.cfi_def_cfa_register 7
 28395 0006 7860     		str	r0, [r7, #4]
2039:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2040:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2041:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2042:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2043:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 28396              		.loc 1 2043 0
 28397 0008 7B68     		ldr	r3, [r7, #4]
 28398 000a 9B6B     		ldr	r3, [r3, #56]
2044:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28399              		.loc 1 2044 0
 28400 000c 1846     		mov	r0, r3
 28401 000e 07F10C07 		add	r7, r7, #12
 28402 0012 BD46     		mov	sp, r7
 28403 0014 80BC     		pop	{r7}
 28404 0016 7047     		bx	lr
 28405              		.cfi_endproc
 28406              	.LFE164:
 28408              		.section	.text.TIM_GetCapture3,"ax",%progbits
 28409              		.align	2
 28410              		.global	TIM_GetCapture3
 28411              		.thumb
 28412              		.thumb_func
 28414              	TIM_GetCapture3:
 28415              	.LFB165:
2045:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2046:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2047:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2048:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2049:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2050:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2051:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2052:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28416              		.loc 1 2052 0
 28417              		.cfi_startproc
 28418              		@ args = 0, pretend = 0, frame = 8
 28419              		@ frame_needed = 1, uses_anonymous_args = 0
 28420              		@ link register save eliminated.
 28421 0000 80B4     		push	{r7}
 28422              	.LCFI165:
 28423              		.cfi_def_cfa_offset 4
 28424 0002 83B0     		sub	sp, sp, #12
 28425              	.LCFI166:
 28426              		.cfi_def_cfa_offset 16
 28427 0004 00AF     		add	r7, sp, #0
 28428              		.cfi_offset 7, -4
 28429              	.LCFI167:
 28430              		.cfi_def_cfa_register 7
 28431 0006 7860     		str	r0, [r7, #4]
2053:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2054:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2055:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2056:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2057:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 28432              		.loc 1 2057 0
 28433 0008 7B68     		ldr	r3, [r7, #4]
 28434 000a DB6B     		ldr	r3, [r3, #60]
2058:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28435              		.loc 1 2058 0
 28436 000c 1846     		mov	r0, r3
 28437 000e 07F10C07 		add	r7, r7, #12
 28438 0012 BD46     		mov	sp, r7
 28439 0014 80BC     		pop	{r7}
 28440 0016 7047     		bx	lr
 28441              		.cfi_endproc
 28442              	.LFE165:
 28444              		.section	.text.TIM_GetCapture4,"ax",%progbits
 28445              		.align	2
 28446              		.global	TIM_GetCapture4
 28447              		.thumb
 28448              		.thumb_func
 28450              	TIM_GetCapture4:
 28451              	.LFB166:
2059:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2060:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2061:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2062:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2063:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2064:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2065:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2066:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28452              		.loc 1 2066 0
 28453              		.cfi_startproc
 28454              		@ args = 0, pretend = 0, frame = 8
 28455              		@ frame_needed = 1, uses_anonymous_args = 0
 28456              		@ link register save eliminated.
 28457 0000 80B4     		push	{r7}
 28458              	.LCFI168:
 28459              		.cfi_def_cfa_offset 4
 28460 0002 83B0     		sub	sp, sp, #12
 28461              	.LCFI169:
 28462              		.cfi_def_cfa_offset 16
 28463 0004 00AF     		add	r7, sp, #0
 28464              		.cfi_offset 7, -4
 28465              	.LCFI170:
 28466              		.cfi_def_cfa_register 7
 28467 0006 7860     		str	r0, [r7, #4]
2067:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2068:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2069:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2070:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2071:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 28468              		.loc 1 2071 0
 28469 0008 7B68     		ldr	r3, [r7, #4]
 28470 000a 1B6C     		ldr	r3, [r3, #64]
2072:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28471              		.loc 1 2072 0
 28472 000c 1846     		mov	r0, r3
 28473 000e 07F10C07 		add	r7, r7, #12
 28474 0012 BD46     		mov	sp, r7
 28475 0014 80BC     		pop	{r7}
 28476 0016 7047     		bx	lr
 28477              		.cfi_endproc
 28478              	.LFE166:
 28480              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 28481              		.align	2
 28482              		.global	TIM_SetIC1Prescaler
 28483              		.thumb
 28484              		.thumb_func
 28486              	TIM_SetIC1Prescaler:
 28487              	.LFB167:
2073:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2074:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2075:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2076:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2077:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2078:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2079:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2080:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2081:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2082:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2083:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2084:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2085:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2086:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28488              		.loc 1 2086 0
 28489              		.cfi_startproc
 28490              		@ args = 0, pretend = 0, frame = 8
 28491              		@ frame_needed = 1, uses_anonymous_args = 0
 28492              		@ link register save eliminated.
 28493 0000 80B4     		push	{r7}
 28494              	.LCFI171:
 28495              		.cfi_def_cfa_offset 4
 28496 0002 83B0     		sub	sp, sp, #12
 28497              	.LCFI172:
 28498              		.cfi_def_cfa_offset 16
 28499 0004 00AF     		add	r7, sp, #0
 28500              		.cfi_offset 7, -4
 28501              	.LCFI173:
 28502              		.cfi_def_cfa_register 7
 28503 0006 7860     		str	r0, [r7, #4]
 28504 0008 0B46     		mov	r3, r1
 28505 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2087:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2088:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2089:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2090:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2092:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 28506              		.loc 1 2092 0
 28507 000c 7B68     		ldr	r3, [r7, #4]
 28508 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 28509 0010 9BB2     		uxth	r3, r3
 28510 0012 23F00C03 		bic	r3, r3, #12
 28511 0016 9AB2     		uxth	r2, r3
 28512 0018 7B68     		ldr	r3, [r7, #4]
 28513 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2093:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2094:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2095:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 28514              		.loc 1 2095 0
 28515 001c 7B68     		ldr	r3, [r7, #4]
 28516 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 28517 0020 9AB2     		uxth	r2, r3
 28518 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28519 0024 42EA0303 		orr	r3, r2, r3
 28520 0028 9AB2     		uxth	r2, r3
 28521 002a 7B68     		ldr	r3, [r7, #4]
 28522 002c 1A83     		strh	r2, [r3, #24]	@ movhi
2096:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28523              		.loc 1 2096 0
 28524 002e 07F10C07 		add	r7, r7, #12
 28525 0032 BD46     		mov	sp, r7
 28526 0034 80BC     		pop	{r7}
 28527 0036 7047     		bx	lr
 28528              		.cfi_endproc
 28529              	.LFE167:
 28531              		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 28532              		.align	2
 28533              		.global	TIM_SetIC2Prescaler
 28534              		.thumb
 28535              		.thumb_func
 28537              	TIM_SetIC2Prescaler:
 28538              	.LFB168:
2097:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2098:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2099:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28539              		.loc 1 2111 0
 28540              		.cfi_startproc
 28541              		@ args = 0, pretend = 0, frame = 8
 28542              		@ frame_needed = 1, uses_anonymous_args = 0
 28543              		@ link register save eliminated.
 28544 0000 80B4     		push	{r7}
 28545              	.LCFI174:
 28546              		.cfi_def_cfa_offset 4
 28547 0002 83B0     		sub	sp, sp, #12
 28548              	.LCFI175:
 28549              		.cfi_def_cfa_offset 16
 28550 0004 00AF     		add	r7, sp, #0
 28551              		.cfi_offset 7, -4
 28552              	.LCFI176:
 28553              		.cfi_def_cfa_register 7
 28554 0006 7860     		str	r0, [r7, #4]
 28555 0008 0B46     		mov	r3, r1
 28556 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 28557              		.loc 1 2117 0
 28558 000c 7B68     		ldr	r3, [r7, #4]
 28559 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 28560 0010 9BB2     		uxth	r3, r3
 28561 0012 23F44063 		bic	r3, r3, #3072
 28562 0016 9AB2     		uxth	r2, r3
 28563 0018 7B68     		ldr	r3, [r7, #4]
 28564 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 28565              		.loc 1 2120 0
 28566 001c 7B68     		ldr	r3, [r7, #4]
 28567 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 28568 0020 9AB2     		uxth	r2, r3
 28569 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28570 0024 4FEA0323 		lsl	r3, r3, #8
 28571 0028 9BB2     		uxth	r3, r3
 28572 002a 42EA0303 		orr	r3, r2, r3
 28573 002e 9AB2     		uxth	r2, r3
 28574 0030 7B68     		ldr	r3, [r7, #4]
 28575 0032 1A83     		strh	r2, [r3, #24]	@ movhi
2121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28576              		.loc 1 2121 0
 28577 0034 07F10C07 		add	r7, r7, #12
 28578 0038 BD46     		mov	sp, r7
 28579 003a 80BC     		pop	{r7}
 28580 003c 7047     		bx	lr
 28581              		.cfi_endproc
 28582              	.LFE168:
 28584 003e 00BF     		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 28585              		.align	2
 28586              		.global	TIM_SetIC3Prescaler
 28587              		.thumb
 28588              		.thumb_func
 28590              	TIM_SetIC3Prescaler:
 28591              	.LFB169:
2122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28592              		.loc 1 2135 0
 28593              		.cfi_startproc
 28594              		@ args = 0, pretend = 0, frame = 8
 28595              		@ frame_needed = 1, uses_anonymous_args = 0
 28596              		@ link register save eliminated.
 28597 0000 80B4     		push	{r7}
 28598              	.LCFI177:
 28599              		.cfi_def_cfa_offset 4
 28600 0002 83B0     		sub	sp, sp, #12
 28601              	.LCFI178:
 28602              		.cfi_def_cfa_offset 16
 28603 0004 00AF     		add	r7, sp, #0
 28604              		.cfi_offset 7, -4
 28605              	.LCFI179:
 28606              		.cfi_def_cfa_register 7
 28607 0006 7860     		str	r0, [r7, #4]
 28608 0008 0B46     		mov	r3, r1
 28609 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 28610              		.loc 1 2141 0
 28611 000c 7B68     		ldr	r3, [r7, #4]
 28612 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 28613 0010 9BB2     		uxth	r3, r3
 28614 0012 23F00C03 		bic	r3, r3, #12
 28615 0016 9AB2     		uxth	r2, r3
 28616 0018 7B68     		ldr	r3, [r7, #4]
 28617 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 28618              		.loc 1 2144 0
 28619 001c 7B68     		ldr	r3, [r7, #4]
 28620 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 28621 0020 9AB2     		uxth	r2, r3
 28622 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28623 0024 42EA0303 		orr	r3, r2, r3
 28624 0028 9AB2     		uxth	r2, r3
 28625 002a 7B68     		ldr	r3, [r7, #4]
 28626 002c 9A83     		strh	r2, [r3, #28]	@ movhi
2145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28627              		.loc 1 2145 0
 28628 002e 07F10C07 		add	r7, r7, #12
 28629 0032 BD46     		mov	sp, r7
 28630 0034 80BC     		pop	{r7}
 28631 0036 7047     		bx	lr
 28632              		.cfi_endproc
 28633              	.LFE169:
 28635              		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 28636              		.align	2
 28637              		.global	TIM_SetIC4Prescaler
 28638              		.thumb
 28639              		.thumb_func
 28641              	TIM_SetIC4Prescaler:
 28642              	.LFB170:
2146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 28643              		.loc 1 2159 0
 28644              		.cfi_startproc
 28645              		@ args = 0, pretend = 0, frame = 8
 28646              		@ frame_needed = 1, uses_anonymous_args = 0
 28647              		@ link register save eliminated.
 28648 0000 80B4     		push	{r7}
 28649              	.LCFI180:
 28650              		.cfi_def_cfa_offset 4
 28651 0002 83B0     		sub	sp, sp, #12
 28652              	.LCFI181:
 28653              		.cfi_def_cfa_offset 16
 28654 0004 00AF     		add	r7, sp, #0
 28655              		.cfi_offset 7, -4
 28656              	.LCFI182:
 28657              		.cfi_def_cfa_register 7
 28658 0006 7860     		str	r0, [r7, #4]
 28659 0008 0B46     		mov	r3, r1
 28660 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 28661              		.loc 1 2165 0
 28662 000c 7B68     		ldr	r3, [r7, #4]
 28663 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 28664 0010 9BB2     		uxth	r3, r3
 28665 0012 23F44063 		bic	r3, r3, #3072
 28666 0016 9AB2     		uxth	r2, r3
 28667 0018 7B68     		ldr	r3, [r7, #4]
 28668 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 28669              		.loc 1 2168 0
 28670 001c 7B68     		ldr	r3, [r7, #4]
 28671 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 28672 0020 9AB2     		uxth	r2, r3
 28673 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 28674 0024 4FEA0323 		lsl	r3, r3, #8
 28675 0028 9BB2     		uxth	r3, r3
 28676 002a 42EA0303 		orr	r3, r2, r3
 28677 002e 9AB2     		uxth	r2, r3
 28678 0030 7B68     		ldr	r3, [r7, #4]
 28679 0032 9A83     		strh	r2, [r3, #28]	@ movhi
2169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28680              		.loc 1 2169 0
 28681 0034 07F10C07 		add	r7, r7, #12
 28682 0038 BD46     		mov	sp, r7
 28683 003a 80BC     		pop	{r7}
 28684 003c 7047     		bx	lr
 28685              		.cfi_endproc
 28686              	.LFE170:
 28688 003e 00BF     		.section	.text.TIM_BDTRConfig,"ax",%progbits
 28689              		.align	2
 28690              		.global	TIM_BDTRConfig
 28691              		.thumb
 28692              		.thumb_func
 28694              	TIM_BDTRConfig:
 28695              	.LFB171:
2170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28696              		.loc 1 2212 0
 28697              		.cfi_startproc
 28698              		@ args = 0, pretend = 0, frame = 8
 28699              		@ frame_needed = 1, uses_anonymous_args = 0
 28700              		@ link register save eliminated.
 28701 0000 80B4     		push	{r7}
 28702              	.LCFI183:
 28703              		.cfi_def_cfa_offset 4
 28704 0002 83B0     		sub	sp, sp, #12
 28705              	.LCFI184:
 28706              		.cfi_def_cfa_offset 16
 28707 0004 00AF     		add	r7, sp, #0
 28708              		.cfi_offset 7, -4
 28709              	.LCFI185:
 28710              		.cfi_def_cfa_register 7
 28711 0006 7860     		str	r0, [r7, #4]
 28712 0008 3960     		str	r1, [r7, #0]
2213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 28713              		.loc 1 2224 0
 28714 000a 3B68     		ldr	r3, [r7, #0]
 28715 000c 1A88     		ldrh	r2, [r3, #0]
 28716 000e 3B68     		ldr	r3, [r7, #0]
 28717 0010 5B88     		ldrh	r3, [r3, #2]
 28718 0012 42EA0303 		orr	r3, r2, r3
 28719 0016 9AB2     		uxth	r2, r3
2225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 28720              		.loc 1 2225 0
 28721 0018 3B68     		ldr	r3, [r7, #0]
 28722 001a 9B88     		ldrh	r3, [r3, #4]
2224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 28723              		.loc 1 2224 0
 28724 001c 42EA0303 		orr	r3, r2, r3
 28725 0020 9AB2     		uxth	r2, r3
 28726              		.loc 1 2225 0
 28727 0022 3B68     		ldr	r3, [r7, #0]
 28728 0024 DB88     		ldrh	r3, [r3, #6]
2224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 28729              		.loc 1 2224 0
 28730 0026 42EA0303 		orr	r3, r2, r3
 28731 002a 9AB2     		uxth	r2, r3
2226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 28732              		.loc 1 2226 0
 28733 002c 3B68     		ldr	r3, [r7, #0]
 28734 002e 1B89     		ldrh	r3, [r3, #8]
2224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 28735              		.loc 1 2224 0
 28736 0030 42EA0303 		orr	r3, r2, r3
 28737 0034 9AB2     		uxth	r2, r3
 28738              		.loc 1 2226 0
 28739 0036 3B68     		ldr	r3, [r7, #0]
 28740 0038 5B89     		ldrh	r3, [r3, #10]
2224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 28741              		.loc 1 2224 0
 28742 003a 42EA0303 		orr	r3, r2, r3
 28743 003e 9AB2     		uxth	r2, r3
2227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 28744              		.loc 1 2227 0
 28745 0040 3B68     		ldr	r3, [r7, #0]
 28746 0042 9B89     		ldrh	r3, [r3, #12]
2224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 28747              		.loc 1 2224 0
 28748 0044 42EA0303 		orr	r3, r2, r3
 28749 0048 9AB2     		uxth	r2, r3
 28750 004a 7B68     		ldr	r3, [r7, #4]
 28751 004c A3F84420 		strh	r2, [r3, #68]	@ movhi
2228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28752              		.loc 1 2228 0
 28753 0050 07F10C07 		add	r7, r7, #12
 28754 0054 BD46     		mov	sp, r7
 28755 0056 80BC     		pop	{r7}
 28756 0058 7047     		bx	lr
 28757              		.cfi_endproc
 28758              	.LFE171:
 28760 005a 00BF     		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 28761              		.align	2
 28762              		.global	TIM_BDTRStructInit
 28763              		.thumb
 28764              		.thumb_func
 28766              	TIM_BDTRStructInit:
 28767              	.LFB172:
2229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28768              		.loc 1 2237 0
 28769              		.cfi_startproc
 28770              		@ args = 0, pretend = 0, frame = 8
 28771              		@ frame_needed = 1, uses_anonymous_args = 0
 28772              		@ link register save eliminated.
 28773 0000 80B4     		push	{r7}
 28774              	.LCFI186:
 28775              		.cfi_def_cfa_offset 4
 28776 0002 83B0     		sub	sp, sp, #12
 28777              	.LCFI187:
 28778              		.cfi_def_cfa_offset 16
 28779 0004 00AF     		add	r7, sp, #0
 28780              		.cfi_offset 7, -4
 28781              	.LCFI188:
 28782              		.cfi_def_cfa_register 7
 28783 0006 7860     		str	r0, [r7, #4]
2238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 28784              		.loc 1 2239 0
 28785 0008 7B68     		ldr	r3, [r7, #4]
 28786 000a 4FF00002 		mov	r2, #0
 28787 000e 1A80     		strh	r2, [r3, #0]	@ movhi
2240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 28788              		.loc 1 2240 0
 28789 0010 7B68     		ldr	r3, [r7, #4]
 28790 0012 4FF00002 		mov	r2, #0
 28791 0016 5A80     		strh	r2, [r3, #2]	@ movhi
2241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 28792              		.loc 1 2241 0
 28793 0018 7B68     		ldr	r3, [r7, #4]
 28794 001a 4FF00002 		mov	r2, #0
 28795 001e 9A80     		strh	r2, [r3, #4]	@ movhi
2242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 28796              		.loc 1 2242 0
 28797 0020 7B68     		ldr	r3, [r7, #4]
 28798 0022 4FF00002 		mov	r2, #0
 28799 0026 DA80     		strh	r2, [r3, #6]	@ movhi
2243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 28800              		.loc 1 2243 0
 28801 0028 7B68     		ldr	r3, [r7, #4]
 28802 002a 4FF00002 		mov	r2, #0
 28803 002e 1A81     		strh	r2, [r3, #8]	@ movhi
2244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 28804              		.loc 1 2244 0
 28805 0030 7B68     		ldr	r3, [r7, #4]
 28806 0032 4FF00002 		mov	r2, #0
 28807 0036 5A81     		strh	r2, [r3, #10]	@ movhi
2245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 28808              		.loc 1 2245 0
 28809 0038 7B68     		ldr	r3, [r7, #4]
 28810 003a 4FF00002 		mov	r2, #0
 28811 003e 9A81     		strh	r2, [r3, #12]	@ movhi
2246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28812              		.loc 1 2246 0
 28813 0040 07F10C07 		add	r7, r7, #12
 28814 0044 BD46     		mov	sp, r7
 28815 0046 80BC     		pop	{r7}
 28816 0048 7047     		bx	lr
 28817              		.cfi_endproc
 28818              	.LFE172:
 28820 004a 00BF     		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 28821              		.align	2
 28822              		.global	TIM_CtrlPWMOutputs
 28823              		.thumb
 28824              		.thumb_func
 28826              	TIM_CtrlPWMOutputs:
 28827              	.LFB173:
2247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28828              		.loc 1 2256 0
 28829              		.cfi_startproc
 28830              		@ args = 0, pretend = 0, frame = 8
 28831              		@ frame_needed = 1, uses_anonymous_args = 0
 28832              		@ link register save eliminated.
 28833 0000 80B4     		push	{r7}
 28834              	.LCFI189:
 28835              		.cfi_def_cfa_offset 4
 28836 0002 83B0     		sub	sp, sp, #12
 28837              	.LCFI190:
 28838              		.cfi_def_cfa_offset 16
 28839 0004 00AF     		add	r7, sp, #0
 28840              		.cfi_offset 7, -4
 28841              	.LCFI191:
 28842              		.cfi_def_cfa_register 7
 28843 0006 7860     		str	r0, [r7, #4]
 28844 0008 0B46     		mov	r3, r1
 28845 000a FB70     		strb	r3, [r7, #3]
2257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 28846              		.loc 1 2261 0
 28847 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 28848 000e 002B     		cmp	r3, #0
 28849 0010 0CD0     		beq	.L125
2262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 28850              		.loc 1 2264 0
 28851 0012 7B68     		ldr	r3, [r7, #4]
 28852 0014 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 28853 0018 9BB2     		uxth	r3, r3
 28854 001a 6FEA4343 		mvn	r3, r3, lsl #17
 28855 001e 6FEA5343 		mvn	r3, r3, lsr #17
 28856 0022 9AB2     		uxth	r2, r3
 28857 0024 7B68     		ldr	r3, [r7, #4]
 28858 0026 A3F84420 		strh	r2, [r3, #68]	@ movhi
 28859 002a 0BE0     		b	.L124
 28860              	.L125:
2265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 28861              		.loc 1 2269 0
 28862 002c 7B68     		ldr	r3, [r7, #4]
 28863 002e B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 28864 0032 9BB2     		uxth	r3, r3
 28865 0034 4FEA4343 		lsl	r3, r3, #17
 28866 0038 4FEA5343 		lsr	r3, r3, #17
 28867 003c 9AB2     		uxth	r2, r3
 28868 003e 7B68     		ldr	r3, [r7, #4]
 28869 0040 A3F84420 		strh	r2, [r3, #68]	@ movhi
 28870              	.L124:
2270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28871              		.loc 1 2271 0
 28872 0044 07F10C07 		add	r7, r7, #12
 28873 0048 BD46     		mov	sp, r7
 28874 004a 80BC     		pop	{r7}
 28875 004c 7047     		bx	lr
 28876              		.cfi_endproc
 28877              	.LFE173:
 28879 004e 00BF     		.section	.text.TIM_SelectCOM,"ax",%progbits
 28880              		.align	2
 28881              		.global	TIM_SelectCOM
 28882              		.thumb
 28883              		.thumb_func
 28885              	TIM_SelectCOM:
 28886              	.LFB174:
2272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 28887              		.loc 1 2281 0
 28888              		.cfi_startproc
 28889              		@ args = 0, pretend = 0, frame = 8
 28890              		@ frame_needed = 1, uses_anonymous_args = 0
 28891              		@ link register save eliminated.
 28892 0000 80B4     		push	{r7}
 28893              	.LCFI192:
 28894              		.cfi_def_cfa_offset 4
 28895 0002 83B0     		sub	sp, sp, #12
 28896              	.LCFI193:
 28897              		.cfi_def_cfa_offset 16
 28898 0004 00AF     		add	r7, sp, #0
 28899              		.cfi_offset 7, -4
 28900              	.LCFI194:
 28901              		.cfi_def_cfa_register 7
 28902 0006 7860     		str	r0, [r7, #4]
 28903 0008 0B46     		mov	r3, r1
 28904 000a FB70     		strb	r3, [r7, #3]
2282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 28905              		.loc 1 2286 0
 28906 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 28907 000e 002B     		cmp	r3, #0
 28908 0010 08D0     		beq	.L128
2287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 28909              		.loc 1 2289 0
 28910 0012 7B68     		ldr	r3, [r7, #4]
 28911 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28912 0016 9BB2     		uxth	r3, r3
 28913 0018 43F00403 		orr	r3, r3, #4
 28914 001c 9AB2     		uxth	r2, r3
 28915 001e 7B68     		ldr	r3, [r7, #4]
 28916 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 28917 0022 07E0     		b	.L127
 28918              	.L128:
2290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 28919              		.loc 1 2294 0
 28920 0024 7B68     		ldr	r3, [r7, #4]
 28921 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28922 0028 9BB2     		uxth	r3, r3
 28923 002a 23F00403 		bic	r3, r3, #4
 28924 002e 9AB2     		uxth	r2, r3
 28925 0030 7B68     		ldr	r3, [r7, #4]
 28926 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 28927              	.L127:
2295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28928              		.loc 1 2296 0
 28929 0034 07F10C07 		add	r7, r7, #12
 28930 0038 BD46     		mov	sp, r7
 28931 003a 80BC     		pop	{r7}
 28932 003c 7047     		bx	lr
 28933              		.cfi_endproc
 28934              	.LFE174:
 28936 003e 00BF     		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 28937              		.align	2
 28938              		.global	TIM_CCPreloadControl
 28939              		.thumb
 28940              		.thumb_func
 28942              	TIM_CCPreloadControl:
 28943              	.LFB175:
2297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 28944              		.loc 1 2306 0
 28945              		.cfi_startproc
 28946              		@ args = 0, pretend = 0, frame = 8
 28947              		@ frame_needed = 1, uses_anonymous_args = 0
 28948              		@ link register save eliminated.
 28949 0000 80B4     		push	{r7}
 28950              	.LCFI195:
 28951              		.cfi_def_cfa_offset 4
 28952 0002 83B0     		sub	sp, sp, #12
 28953              	.LCFI196:
 28954              		.cfi_def_cfa_offset 16
 28955 0004 00AF     		add	r7, sp, #0
 28956              		.cfi_offset 7, -4
 28957              	.LCFI197:
 28958              		.cfi_def_cfa_register 7
 28959 0006 7860     		str	r0, [r7, #4]
 28960 0008 0B46     		mov	r3, r1
 28961 000a FB70     		strb	r3, [r7, #3]
2307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 28962              		.loc 1 2310 0
 28963 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 28964 000e 002B     		cmp	r3, #0
 28965 0010 08D0     		beq	.L131
2311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 28966              		.loc 1 2313 0
 28967 0012 7B68     		ldr	r3, [r7, #4]
 28968 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28969 0016 9BB2     		uxth	r3, r3
 28970 0018 43F00103 		orr	r3, r3, #1
 28971 001c 9AB2     		uxth	r2, r3
 28972 001e 7B68     		ldr	r3, [r7, #4]
 28973 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 28974 0022 07E0     		b	.L130
 28975              	.L131:
2314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 28976              		.loc 1 2318 0
 28977 0024 7B68     		ldr	r3, [r7, #4]
 28978 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 28979 0028 9BB2     		uxth	r3, r3
 28980 002a 23F00103 		bic	r3, r3, #1
 28981 002e 9AB2     		uxth	r2, r3
 28982 0030 7B68     		ldr	r3, [r7, #4]
 28983 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 28984              	.L130:
2319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 28985              		.loc 1 2320 0
 28986 0034 07F10C07 		add	r7, r7, #12
 28987 0038 BD46     		mov	sp, r7
 28988 003a 80BC     		pop	{r7}
 28989 003c 7047     		bx	lr
 28990              		.cfi_endproc
 28991              	.LFE175:
 28993 003e 00BF     		.section	.text.TIM_ITConfig,"ax",%progbits
 28994              		.align	2
 28995              		.global	TIM_ITConfig
 28996              		.thumb
 28997              		.thumb_func
 28999              	TIM_ITConfig:
 29000              	.LFB176:
2321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2339:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2340:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2341:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2342:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2343:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2344:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2345:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2346:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2347:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2348:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2349:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2350:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2351:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2352:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2353:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2354:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2357:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2358:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2359:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2360:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2363:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 29001              		.loc 1 2363 0
 29002              		.cfi_startproc
 29003              		@ args = 0, pretend = 0, frame = 8
 29004              		@ frame_needed = 1, uses_anonymous_args = 0
 29005              		@ link register save eliminated.
 29006 0000 80B4     		push	{r7}
 29007              	.LCFI198:
 29008              		.cfi_def_cfa_offset 4
 29009 0002 83B0     		sub	sp, sp, #12
 29010              	.LCFI199:
 29011              		.cfi_def_cfa_offset 16
 29012 0004 00AF     		add	r7, sp, #0
 29013              		.cfi_offset 7, -4
 29014              	.LCFI200:
 29015              		.cfi_def_cfa_register 7
 29016 0006 7860     		str	r0, [r7, #4]
 29017 0008 1346     		mov	r3, r2
 29018 000a 0A46     		mov	r2, r1	@ movhi
 29019 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 29020 000e 7B70     		strb	r3, [r7, #1]
2364:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2365:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2366:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2367:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2368:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2369:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 29021              		.loc 1 2369 0
 29022 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 29023 0012 002B     		cmp	r3, #0
 29024 0014 09D0     		beq	.L134
2370:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 29025              		.loc 1 2372 0
 29026 0016 7B68     		ldr	r3, [r7, #4]
 29027 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 29028 001a 9AB2     		uxth	r2, r3
 29029 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29030 001e 42EA0303 		orr	r3, r2, r3
 29031 0022 9AB2     		uxth	r2, r3
 29032 0024 7B68     		ldr	r3, [r7, #4]
 29033 0026 9A81     		strh	r2, [r3, #12]	@ movhi
 29034 0028 0BE0     		b	.L133
 29035              	.L134:
2373:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2374:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2377:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 29036              		.loc 1 2377 0
 29037 002a 7B68     		ldr	r3, [r7, #4]
 29038 002c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 29039 002e 9AB2     		uxth	r2, r3
 29040 0030 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29041 0032 6FEA0303 		mvn	r3, r3
 29042 0036 9BB2     		uxth	r3, r3
 29043 0038 02EA0303 		and	r3, r2, r3
 29044 003c 9AB2     		uxth	r2, r3
 29045 003e 7B68     		ldr	r3, [r7, #4]
 29046 0040 9A81     		strh	r2, [r3, #12]	@ movhi
 29047              	.L133:
2378:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2379:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29048              		.loc 1 2379 0
 29049 0042 07F10C07 		add	r7, r7, #12
 29050 0046 BD46     		mov	sp, r7
 29051 0048 80BC     		pop	{r7}
 29052 004a 7047     		bx	lr
 29053              		.cfi_endproc
 29054              	.LFE176:
 29056              		.section	.text.TIM_GenerateEvent,"ax",%progbits
 29057              		.align	2
 29058              		.global	TIM_GenerateEvent
 29059              		.thumb
 29060              		.thumb_func
 29062              	TIM_GenerateEvent:
 29063              	.LFB177:
2380:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2381:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2382:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2383:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2384:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2385:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2386:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2387:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2388:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2389:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2390:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2391:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2392:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2393:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2394:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2395:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2396:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2398:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2399:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2400:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2401:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 29064              		.loc 1 2401 0
 29065              		.cfi_startproc
 29066              		@ args = 0, pretend = 0, frame = 8
 29067              		@ frame_needed = 1, uses_anonymous_args = 0
 29068              		@ link register save eliminated.
 29069 0000 80B4     		push	{r7}
 29070              	.LCFI201:
 29071              		.cfi_def_cfa_offset 4
 29072 0002 83B0     		sub	sp, sp, #12
 29073              	.LCFI202:
 29074              		.cfi_def_cfa_offset 16
 29075 0004 00AF     		add	r7, sp, #0
 29076              		.cfi_offset 7, -4
 29077              	.LCFI203:
 29078              		.cfi_def_cfa_register 7
 29079 0006 7860     		str	r0, [r7, #4]
 29080 0008 0B46     		mov	r3, r1
 29081 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2402:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2403:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2404:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2405:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2406:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2407:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 29082              		.loc 1 2407 0
 29083 000c 7B68     		ldr	r3, [r7, #4]
 29084 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 29085 0010 9A82     		strh	r2, [r3, #20]	@ movhi
2408:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29086              		.loc 1 2408 0
 29087 0012 07F10C07 		add	r7, r7, #12
 29088 0016 BD46     		mov	sp, r7
 29089 0018 80BC     		pop	{r7}
 29090 001a 7047     		bx	lr
 29091              		.cfi_endproc
 29092              	.LFE177:
 29094              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 29095              		.align	2
 29096              		.global	TIM_GetFlagStatus
 29097              		.thumb
 29098              		.thumb_func
 29100              	TIM_GetFlagStatus:
 29101              	.LFB178:
2409:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2410:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2411:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2412:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2413:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2414:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2415:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2416:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2417:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2418:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2419:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2420:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2421:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2422:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2423:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2425:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2426:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2427:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2429:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2430:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2431:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2432:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2433:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2434:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 29102              		.loc 1 2434 0
 29103              		.cfi_startproc
 29104              		@ args = 0, pretend = 0, frame = 16
 29105              		@ frame_needed = 1, uses_anonymous_args = 0
 29106              		@ link register save eliminated.
 29107 0000 80B4     		push	{r7}
 29108              	.LCFI204:
 29109              		.cfi_def_cfa_offset 4
 29110 0002 85B0     		sub	sp, sp, #20
 29111              	.LCFI205:
 29112              		.cfi_def_cfa_offset 24
 29113 0004 00AF     		add	r7, sp, #0
 29114              		.cfi_offset 7, -4
 29115              	.LCFI206:
 29116              		.cfi_def_cfa_register 7
 29117 0006 7860     		str	r0, [r7, #4]
 29118 0008 0B46     		mov	r3, r1
 29119 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2435:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 29120              		.loc 1 2435 0
 29121 000c 4FF00003 		mov	r3, #0
 29122 0010 FB73     		strb	r3, [r7, #15]
2436:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2437:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2438:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2439:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2440:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2441:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 29123              		.loc 1 2441 0
 29124 0012 7B68     		ldr	r3, [r7, #4]
 29125 0014 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 29126 0016 9AB2     		uxth	r2, r3
 29127 0018 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29128 001a 02EA0303 		and	r3, r2, r3
 29129 001e 9BB2     		uxth	r3, r3
 29130 0020 002B     		cmp	r3, #0
 29131 0022 03D0     		beq	.L138
2442:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2443:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 29132              		.loc 1 2443 0
 29133 0024 4FF00103 		mov	r3, #1
 29134 0028 FB73     		strb	r3, [r7, #15]
 29135 002a 02E0     		b	.L139
 29136              	.L138:
2444:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2445:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2446:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2447:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 29137              		.loc 1 2447 0
 29138 002c 4FF00003 		mov	r3, #0
 29139 0030 FB73     		strb	r3, [r7, #15]
 29140              	.L139:
2448:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2449:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 29141              		.loc 1 2449 0
 29142 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2450:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29143              		.loc 1 2450 0
 29144 0034 1846     		mov	r0, r3
 29145 0036 07F11407 		add	r7, r7, #20
 29146 003a BD46     		mov	sp, r7
 29147 003c 80BC     		pop	{r7}
 29148 003e 7047     		bx	lr
 29149              		.cfi_endproc
 29150              	.LFE178:
 29152              		.section	.text.TIM_ClearFlag,"ax",%progbits
 29153              		.align	2
 29154              		.global	TIM_ClearFlag
 29155              		.thumb
 29156              		.thumb_func
 29158              	TIM_ClearFlag:
 29159              	.LFB179:
2451:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2452:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2453:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2454:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2455:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2456:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2457:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2458:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2459:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2460:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2461:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2462:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2463:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2464:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2465:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2466:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2467:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2468:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2469:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2470:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2471:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2472:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2473:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2474:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2475:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2476:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 29160              		.loc 1 2476 0
 29161              		.cfi_startproc
 29162              		@ args = 0, pretend = 0, frame = 8
 29163              		@ frame_needed = 1, uses_anonymous_args = 0
 29164              		@ link register save eliminated.
 29165 0000 80B4     		push	{r7}
 29166              	.LCFI207:
 29167              		.cfi_def_cfa_offset 4
 29168 0002 83B0     		sub	sp, sp, #12
 29169              	.LCFI208:
 29170              		.cfi_def_cfa_offset 16
 29171 0004 00AF     		add	r7, sp, #0
 29172              		.cfi_offset 7, -4
 29173              	.LCFI209:
 29174              		.cfi_def_cfa_register 7
 29175 0006 7860     		str	r0, [r7, #4]
 29176 0008 0B46     		mov	r3, r1
 29177 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2477:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2478:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2479:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2480:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2481:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 29178              		.loc 1 2481 0
 29179 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29180 000e 6FEA0303 		mvn	r3, r3
 29181 0012 9AB2     		uxth	r2, r3
 29182 0014 7B68     		ldr	r3, [r7, #4]
 29183 0016 1A82     		strh	r2, [r3, #16]	@ movhi
2482:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29184              		.loc 1 2482 0
 29185 0018 07F10C07 		add	r7, r7, #12
 29186 001c BD46     		mov	sp, r7
 29187 001e 80BC     		pop	{r7}
 29188 0020 7047     		bx	lr
 29189              		.cfi_endproc
 29190              	.LFE179:
 29192 0022 00BF     		.section	.text.TIM_GetITStatus,"ax",%progbits
 29193              		.align	2
 29194              		.global	TIM_GetITStatus
 29195              		.thumb
 29196              		.thumb_func
 29198              	TIM_GetITStatus:
 29199              	.LFB180:
2483:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2484:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2485:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2486:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2487:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2488:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2489:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2490:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2491:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2492:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2493:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2494:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2495:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2496:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2497:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2498:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2499:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2500:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2501:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2502:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2503:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2504:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29200              		.loc 1 2504 0
 29201              		.cfi_startproc
 29202              		@ args = 0, pretend = 0, frame = 16
 29203              		@ frame_needed = 1, uses_anonymous_args = 0
 29204              		@ link register save eliminated.
 29205 0000 80B4     		push	{r7}
 29206              	.LCFI210:
 29207              		.cfi_def_cfa_offset 4
 29208 0002 85B0     		sub	sp, sp, #20
 29209              	.LCFI211:
 29210              		.cfi_def_cfa_offset 24
 29211 0004 00AF     		add	r7, sp, #0
 29212              		.cfi_offset 7, -4
 29213              	.LCFI212:
 29214              		.cfi_def_cfa_register 7
 29215 0006 7860     		str	r0, [r7, #4]
 29216 0008 0B46     		mov	r3, r1
 29217 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2505:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 29218              		.loc 1 2505 0
 29219 000c 4FF00003 		mov	r3, #0
 29220 0010 FB73     		strb	r3, [r7, #15]
2506:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 29221              		.loc 1 2506 0
 29222 0012 4FF00003 		mov	r3, #0
 29223 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 29224 0018 4FF00003 		mov	r3, #0
 29225 001c 7B81     		strh	r3, [r7, #10]	@ movhi
2507:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2508:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2509:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2510:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2511:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 29226              		.loc 1 2511 0
 29227 001e 7B68     		ldr	r3, [r7, #4]
 29228 0020 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 29229 0022 9AB2     		uxth	r2, r3
 29230 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29231 0026 02EA0303 		and	r3, r2, r3
 29232 002a BB81     		strh	r3, [r7, #12]	@ movhi
2512:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2513:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 29233              		.loc 1 2513 0
 29234 002c 7B68     		ldr	r3, [r7, #4]
 29235 002e 9B89     		ldrh	r3, [r3, #12]	@ movhi
 29236 0030 9AB2     		uxth	r2, r3
 29237 0032 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29238 0034 02EA0303 		and	r3, r2, r3
 29239 0038 7B81     		strh	r3, [r7, #10]	@ movhi
2514:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 29240              		.loc 1 2514 0
 29241 003a BB89     		ldrh	r3, [r7, #12]
 29242 003c 002B     		cmp	r3, #0
 29243 003e 06D0     		beq	.L142
 29244              		.loc 1 2514 0 is_stmt 0 discriminator 1
 29245 0040 7B89     		ldrh	r3, [r7, #10]
 29246 0042 002B     		cmp	r3, #0
 29247 0044 03D0     		beq	.L142
2515:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2516:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 29248              		.loc 1 2516 0 is_stmt 1
 29249 0046 4FF00103 		mov	r3, #1
 29250 004a FB73     		strb	r3, [r7, #15]
 29251 004c 02E0     		b	.L143
 29252              	.L142:
2517:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2518:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2519:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2520:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 29253              		.loc 1 2520 0
 29254 004e 4FF00003 		mov	r3, #0
 29255 0052 FB73     		strb	r3, [r7, #15]
 29256              	.L143:
2521:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2522:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 29257              		.loc 1 2522 0
 29258 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2523:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29259              		.loc 1 2523 0
 29260 0056 1846     		mov	r0, r3
 29261 0058 07F11407 		add	r7, r7, #20
 29262 005c BD46     		mov	sp, r7
 29263 005e 80BC     		pop	{r7}
 29264 0060 7047     		bx	lr
 29265              		.cfi_endproc
 29266              	.LFE180:
 29268 0062 00BF     		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 29269              		.align	2
 29270              		.global	TIM_ClearITPendingBit
 29271              		.thumb
 29272              		.thumb_func
 29274              	TIM_ClearITPendingBit:
 29275              	.LFB181:
2524:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2525:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2526:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2527:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2528:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2529:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2530:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2531:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2532:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2533:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2534:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2535:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2536:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2537:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2538:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2539:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2540:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2541:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2542:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2543:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2544:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2545:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29276              		.loc 1 2545 0
 29277              		.cfi_startproc
 29278              		@ args = 0, pretend = 0, frame = 8
 29279              		@ frame_needed = 1, uses_anonymous_args = 0
 29280              		@ link register save eliminated.
 29281 0000 80B4     		push	{r7}
 29282              	.LCFI213:
 29283              		.cfi_def_cfa_offset 4
 29284 0002 83B0     		sub	sp, sp, #12
 29285              	.LCFI214:
 29286              		.cfi_def_cfa_offset 16
 29287 0004 00AF     		add	r7, sp, #0
 29288              		.cfi_offset 7, -4
 29289              	.LCFI215:
 29290              		.cfi_def_cfa_register 7
 29291 0006 7860     		str	r0, [r7, #4]
 29292 0008 0B46     		mov	r3, r1
 29293 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2546:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2547:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2548:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2549:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2550:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 29294              		.loc 1 2550 0
 29295 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29296 000e 6FEA0303 		mvn	r3, r3
 29297 0012 9AB2     		uxth	r2, r3
 29298 0014 7B68     		ldr	r3, [r7, #4]
 29299 0016 1A82     		strh	r2, [r3, #16]	@ movhi
2551:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29300              		.loc 1 2551 0
 29301 0018 07F10C07 		add	r7, r7, #12
 29302 001c BD46     		mov	sp, r7
 29303 001e 80BC     		pop	{r7}
 29304 0020 7047     		bx	lr
 29305              		.cfi_endproc
 29306              	.LFE181:
 29308 0022 00BF     		.section	.text.TIM_DMAConfig,"ax",%progbits
 29309              		.align	2
 29310              		.global	TIM_DMAConfig
 29311              		.thumb
 29312              		.thumb_func
 29314              	TIM_DMAConfig:
 29315              	.LFB182:
2552:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2553:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2554:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2555:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2556:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2557:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2558:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2559:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2560:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2561:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2562:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2563:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2564:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2565:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2566:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2567:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2568:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2569:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2570:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2571:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2572:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2573:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2574:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2575:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2576:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2577:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2578:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2579:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2580:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2581:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2582:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29316              		.loc 1 2582 0
 29317              		.cfi_startproc
 29318              		@ args = 0, pretend = 0, frame = 8
 29319              		@ frame_needed = 1, uses_anonymous_args = 0
 29320              		@ link register save eliminated.
 29321 0000 80B4     		push	{r7}
 29322              	.LCFI216:
 29323              		.cfi_def_cfa_offset 4
 29324 0002 83B0     		sub	sp, sp, #12
 29325              	.LCFI217:
 29326              		.cfi_def_cfa_offset 16
 29327 0004 00AF     		add	r7, sp, #0
 29328              		.cfi_offset 7, -4
 29329              	.LCFI218:
 29330              		.cfi_def_cfa_register 7
 29331 0006 7860     		str	r0, [r7, #4]
 29332 0008 1346     		mov	r3, r2
 29333 000a 0A46     		mov	r2, r1	@ movhi
 29334 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 29335 000e 3B80     		strh	r3, [r7, #0]	@ movhi
2583:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2584:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2585:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2586:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2587:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2588:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2589:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 29336              		.loc 1 2589 0
 29337 0010 7A88     		ldrh	r2, [r7, #2]	@ movhi
 29338 0012 3B88     		ldrh	r3, [r7, #0]	@ movhi
 29339 0014 42EA0303 		orr	r3, r2, r3
 29340 0018 9AB2     		uxth	r2, r3
 29341 001a 7B68     		ldr	r3, [r7, #4]
 29342 001c A3F84820 		strh	r2, [r3, #72]	@ movhi
2590:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29343              		.loc 1 2590 0
 29344 0020 07F10C07 		add	r7, r7, #12
 29345 0024 BD46     		mov	sp, r7
 29346 0026 80BC     		pop	{r7}
 29347 0028 7047     		bx	lr
 29348              		.cfi_endproc
 29349              	.LFE182:
 29351 002a 00BF     		.section	.text.TIM_DMACmd,"ax",%progbits
 29352              		.align	2
 29353              		.global	TIM_DMACmd
 29354              		.thumb
 29355              		.thumb_func
 29357              	TIM_DMACmd:
 29358              	.LFB183:
2591:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2592:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2593:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2594:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2595:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2596:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2598:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2599:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2600:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2601:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2602:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2603:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2604:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2605:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2606:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2607:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2608:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2609:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 29359              		.loc 1 2609 0
 29360              		.cfi_startproc
 29361              		@ args = 0, pretend = 0, frame = 8
 29362              		@ frame_needed = 1, uses_anonymous_args = 0
 29363              		@ link register save eliminated.
 29364 0000 80B4     		push	{r7}
 29365              	.LCFI219:
 29366              		.cfi_def_cfa_offset 4
 29367 0002 83B0     		sub	sp, sp, #12
 29368              	.LCFI220:
 29369              		.cfi_def_cfa_offset 16
 29370 0004 00AF     		add	r7, sp, #0
 29371              		.cfi_offset 7, -4
 29372              	.LCFI221:
 29373              		.cfi_def_cfa_register 7
 29374 0006 7860     		str	r0, [r7, #4]
 29375 0008 1346     		mov	r3, r2
 29376 000a 0A46     		mov	r2, r1	@ movhi
 29377 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 29378 000e 7B70     		strb	r3, [r7, #1]
2610:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2611:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2612:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2613:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2614:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2615:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 29379              		.loc 1 2615 0
 29380 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 29381 0012 002B     		cmp	r3, #0
 29382 0014 09D0     		beq	.L147
2616:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2617:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2618:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 29383              		.loc 1 2618 0
 29384 0016 7B68     		ldr	r3, [r7, #4]
 29385 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 29386 001a 9AB2     		uxth	r2, r3
 29387 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29388 001e 42EA0303 		orr	r3, r2, r3
 29389 0022 9AB2     		uxth	r2, r3
 29390 0024 7B68     		ldr	r3, [r7, #4]
 29391 0026 9A81     		strh	r2, [r3, #12]	@ movhi
 29392 0028 0BE0     		b	.L146
 29393              	.L147:
2619:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2620:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2621:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2622:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2623:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 29394              		.loc 1 2623 0
 29395 002a 7B68     		ldr	r3, [r7, #4]
 29396 002c 9B89     		ldrh	r3, [r3, #12]	@ movhi
 29397 002e 9AB2     		uxth	r2, r3
 29398 0030 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29399 0032 6FEA0303 		mvn	r3, r3
 29400 0036 9BB2     		uxth	r3, r3
 29401 0038 02EA0303 		and	r3, r2, r3
 29402 003c 9AB2     		uxth	r2, r3
 29403 003e 7B68     		ldr	r3, [r7, #4]
 29404 0040 9A81     		strh	r2, [r3, #12]	@ movhi
 29405              	.L146:
2624:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2625:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29406              		.loc 1 2625 0
 29407 0042 07F10C07 		add	r7, r7, #12
 29408 0046 BD46     		mov	sp, r7
 29409 0048 80BC     		pop	{r7}
 29410 004a 7047     		bx	lr
 29411              		.cfi_endproc
 29412              	.LFE183:
 29414              		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 29415              		.align	2
 29416              		.global	TIM_SelectCCDMA
 29417              		.thumb
 29418              		.thumb_func
 29420              	TIM_SelectCCDMA:
 29421              	.LFB184:
2626:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2627:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2628:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2629:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2630:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2631:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2632:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2633:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2634:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2635:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29422              		.loc 1 2635 0
 29423              		.cfi_startproc
 29424              		@ args = 0, pretend = 0, frame = 8
 29425              		@ frame_needed = 1, uses_anonymous_args = 0
 29426              		@ link register save eliminated.
 29427 0000 80B4     		push	{r7}
 29428              	.LCFI222:
 29429              		.cfi_def_cfa_offset 4
 29430 0002 83B0     		sub	sp, sp, #12
 29431              	.LCFI223:
 29432              		.cfi_def_cfa_offset 16
 29433 0004 00AF     		add	r7, sp, #0
 29434              		.cfi_offset 7, -4
 29435              	.LCFI224:
 29436              		.cfi_def_cfa_register 7
 29437 0006 7860     		str	r0, [r7, #4]
 29438 0008 0B46     		mov	r3, r1
 29439 000a FB70     		strb	r3, [r7, #3]
2636:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2637:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2638:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2639:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2640:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 29440              		.loc 1 2640 0
 29441 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 29442 000e 002B     		cmp	r3, #0
 29443 0010 08D0     		beq	.L150
2641:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2642:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2643:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 29444              		.loc 1 2643 0
 29445 0012 7B68     		ldr	r3, [r7, #4]
 29446 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 29447 0016 9BB2     		uxth	r3, r3
 29448 0018 43F00803 		orr	r3, r3, #8
 29449 001c 9AB2     		uxth	r2, r3
 29450 001e 7B68     		ldr	r3, [r7, #4]
 29451 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 29452 0022 07E0     		b	.L149
 29453              	.L150:
2644:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2645:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2646:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2647:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2648:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 29454              		.loc 1 2648 0
 29455 0024 7B68     		ldr	r3, [r7, #4]
 29456 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 29457 0028 9BB2     		uxth	r3, r3
 29458 002a 23F00803 		bic	r3, r3, #8
 29459 002e 9AB2     		uxth	r2, r3
 29460 0030 7B68     		ldr	r3, [r7, #4]
 29461 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 29462              	.L149:
2649:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2650:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29463              		.loc 1 2650 0
 29464 0034 07F10C07 		add	r7, r7, #12
 29465 0038 BD46     		mov	sp, r7
 29466 003a 80BC     		pop	{r7}
 29467 003c 7047     		bx	lr
 29468              		.cfi_endproc
 29469              	.LFE184:
 29471 003e 00BF     		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 29472              		.align	2
 29473              		.global	TIM_InternalClockConfig
 29474              		.thumb
 29475              		.thumb_func
 29477              	TIM_InternalClockConfig:
 29478              	.LFB185:
2651:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2652:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2653:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2654:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2655:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2656:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2657:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2658:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2659:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2660:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2661:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2662:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2663:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2664:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2665:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2666:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2667:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2668:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2669:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2670:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2671:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2672:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2673:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2674:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29479              		.loc 1 2674 0
 29480              		.cfi_startproc
 29481              		@ args = 0, pretend = 0, frame = 8
 29482              		@ frame_needed = 1, uses_anonymous_args = 0
 29483              		@ link register save eliminated.
 29484 0000 80B4     		push	{r7}
 29485              	.LCFI225:
 29486              		.cfi_def_cfa_offset 4
 29487 0002 83B0     		sub	sp, sp, #12
 29488              	.LCFI226:
 29489              		.cfi_def_cfa_offset 16
 29490 0004 00AF     		add	r7, sp, #0
 29491              		.cfi_offset 7, -4
 29492              	.LCFI227:
 29493              		.cfi_def_cfa_register 7
 29494 0006 7860     		str	r0, [r7, #4]
2675:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2676:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2677:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2678:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2679:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 29495              		.loc 1 2679 0
 29496 0008 7B68     		ldr	r3, [r7, #4]
 29497 000a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29498 000c 9BB2     		uxth	r3, r3
 29499 000e 23F00703 		bic	r3, r3, #7
 29500 0012 9AB2     		uxth	r2, r3
 29501 0014 7B68     		ldr	r3, [r7, #4]
 29502 0016 1A81     		strh	r2, [r3, #8]	@ movhi
2680:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29503              		.loc 1 2680 0
 29504 0018 07F10C07 		add	r7, r7, #12
 29505 001c BD46     		mov	sp, r7
 29506 001e 80BC     		pop	{r7}
 29507 0020 7047     		bx	lr
 29508              		.cfi_endproc
 29509              	.LFE185:
 29511 0022 00BF     		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 29512              		.align	2
 29513              		.global	TIM_ITRxExternalClockConfig
 29514              		.thumb
 29515              		.thumb_func
 29517              	TIM_ITRxExternalClockConfig:
 29518              	.LFB186:
2681:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2682:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2683:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2684:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2685:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2686:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2687:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2688:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2689:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2690:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2691:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2692:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2693:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2694:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2695:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29519              		.loc 1 2695 0
 29520              		.cfi_startproc
 29521              		@ args = 0, pretend = 0, frame = 8
 29522              		@ frame_needed = 1, uses_anonymous_args = 0
 29523 0000 80B5     		push	{r7, lr}
 29524              	.LCFI228:
 29525              		.cfi_def_cfa_offset 8
 29526 0002 82B0     		sub	sp, sp, #8
 29527              	.LCFI229:
 29528              		.cfi_def_cfa_offset 16
 29529 0004 00AF     		add	r7, sp, #0
 29530              		.cfi_offset 14, -4
 29531              		.cfi_offset 7, -8
 29532              	.LCFI230:
 29533              		.cfi_def_cfa_register 7
 29534 0006 7860     		str	r0, [r7, #4]
 29535 0008 0B46     		mov	r3, r1
 29536 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2696:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2697:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2698:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2699:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2701:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 29537              		.loc 1 2701 0
 29538 000c 7B88     		ldrh	r3, [r7, #2]
 29539 000e 7868     		ldr	r0, [r7, #4]
 29540 0010 1946     		mov	r1, r3
 29541 0012 FFF7FEFF 		bl	TIM_SelectInputTrigger
2702:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2703:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2704:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 29542              		.loc 1 2704 0
 29543 0016 7B68     		ldr	r3, [r7, #4]
 29544 0018 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29545 001a 9BB2     		uxth	r3, r3
 29546 001c 43F00703 		orr	r3, r3, #7
 29547 0020 9AB2     		uxth	r2, r3
 29548 0022 7B68     		ldr	r3, [r7, #4]
 29549 0024 1A81     		strh	r2, [r3, #8]	@ movhi
2705:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29550              		.loc 1 2705 0
 29551 0026 07F10807 		add	r7, r7, #8
 29552 002a BD46     		mov	sp, r7
 29553 002c 80BD     		pop	{r7, pc}
 29554              		.cfi_endproc
 29555              	.LFE186:
 29557 002e 00BF     		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 29558              		.align	2
 29559              		.global	TIM_TIxExternalClockConfig
 29560              		.thumb
 29561              		.thumb_func
 29563              	TIM_TIxExternalClockConfig:
 29564              	.LFB187:
2706:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2707:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2708:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2709:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2710:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2711:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2712:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2713:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2714:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2715:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2716:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2717:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2718:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2719:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2720:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2721:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2722:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2723:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2724:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2725:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2726:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29565              		.loc 1 2726 0
 29566              		.cfi_startproc
 29567              		@ args = 0, pretend = 0, frame = 16
 29568              		@ frame_needed = 1, uses_anonymous_args = 0
 29569 0000 80B5     		push	{r7, lr}
 29570              	.LCFI231:
 29571              		.cfi_def_cfa_offset 8
 29572 0002 84B0     		sub	sp, sp, #16
 29573              	.LCFI232:
 29574              		.cfi_def_cfa_offset 24
 29575 0004 00AF     		add	r7, sp, #0
 29576              		.cfi_offset 14, -4
 29577              		.cfi_offset 7, -8
 29578              	.LCFI233:
 29579              		.cfi_def_cfa_register 7
 29580 0006 F860     		str	r0, [r7, #12]
 29581 0008 7981     		strh	r1, [r7, #10]	@ movhi
 29582 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 29583 000c FB80     		strh	r3, [r7, #6]	@ movhi
2727:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2728:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2729:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2730:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2731:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2732:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2733:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 29584              		.loc 1 2733 0
 29585 000e 7B89     		ldrh	r3, [r7, #10]
 29586 0010 602B     		cmp	r3, #96
 29587 0012 08D1     		bne	.L155
2734:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2735:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 29588              		.loc 1 2735 0
 29589 0014 3A89     		ldrh	r2, [r7, #8]
 29590 0016 FB88     		ldrh	r3, [r7, #6]
 29591 0018 F868     		ldr	r0, [r7, #12]
 29592 001a 1146     		mov	r1, r2
 29593 001c 4FF00102 		mov	r2, #1
 29594 0020 FFF7FEFF 		bl	TI2_Config
 29595 0024 07E0     		b	.L156
 29596              	.L155:
2736:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2737:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2738:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2739:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 29597              		.loc 1 2739 0
 29598 0026 3A89     		ldrh	r2, [r7, #8]
 29599 0028 FB88     		ldrh	r3, [r7, #6]
 29600 002a F868     		ldr	r0, [r7, #12]
 29601 002c 1146     		mov	r1, r2
 29602 002e 4FF00102 		mov	r2, #1
 29603 0032 FFF7FEFF 		bl	TI1_Config
 29604              	.L156:
2740:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2741:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2742:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 29605              		.loc 1 2742 0
 29606 0036 7B89     		ldrh	r3, [r7, #10]
 29607 0038 F868     		ldr	r0, [r7, #12]
 29608 003a 1946     		mov	r1, r3
 29609 003c FFF7FEFF 		bl	TIM_SelectInputTrigger
2743:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2744:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 29610              		.loc 1 2744 0
 29611 0040 FB68     		ldr	r3, [r7, #12]
 29612 0042 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29613 0044 9BB2     		uxth	r3, r3
 29614 0046 43F00703 		orr	r3, r3, #7
 29615 004a 9AB2     		uxth	r2, r3
 29616 004c FB68     		ldr	r3, [r7, #12]
 29617 004e 1A81     		strh	r2, [r3, #8]	@ movhi
2745:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29618              		.loc 1 2745 0
 29619 0050 07F11007 		add	r7, r7, #16
 29620 0054 BD46     		mov	sp, r7
 29621 0056 80BD     		pop	{r7, pc}
 29622              		.cfi_endproc
 29623              	.LFE187:
 29625              		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 29626              		.align	2
 29627              		.global	TIM_ETRClockMode1Config
 29628              		.thumb
 29629              		.thumb_func
 29631              	TIM_ETRClockMode1Config:
 29632              	.LFB188:
2746:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2747:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2748:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2749:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2750:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2751:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2752:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2753:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2754:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2755:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2756:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2757:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2758:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2759:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2760:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2761:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2762:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2763:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2764:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2765:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2766:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29633              		.loc 1 2766 0
 29634              		.cfi_startproc
 29635              		@ args = 0, pretend = 0, frame = 24
 29636              		@ frame_needed = 1, uses_anonymous_args = 0
 29637 0000 80B5     		push	{r7, lr}
 29638              	.LCFI234:
 29639              		.cfi_def_cfa_offset 8
 29640 0002 86B0     		sub	sp, sp, #24
 29641              	.LCFI235:
 29642              		.cfi_def_cfa_offset 32
 29643 0004 00AF     		add	r7, sp, #0
 29644              		.cfi_offset 14, -4
 29645              		.cfi_offset 7, -8
 29646              	.LCFI236:
 29647              		.cfi_def_cfa_register 7
 29648 0006 F860     		str	r0, [r7, #12]
 29649 0008 7981     		strh	r1, [r7, #10]	@ movhi
 29650 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 29651 000c FB80     		strh	r3, [r7, #6]	@ movhi
2767:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 29652              		.loc 1 2767 0
 29653 000e 4FF00003 		mov	r3, #0
 29654 0012 FB82     		strh	r3, [r7, #22]	@ movhi
2768:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2769:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2770:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2771:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2772:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2773:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2774:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2775:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 29655              		.loc 1 2775 0
 29656 0014 7989     		ldrh	r1, [r7, #10]
 29657 0016 3A89     		ldrh	r2, [r7, #8]
 29658 0018 FB88     		ldrh	r3, [r7, #6]
 29659 001a F868     		ldr	r0, [r7, #12]
 29660 001c FFF7FEFF 		bl	TIM_ETRConfig
2776:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2777:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2778:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 29661              		.loc 1 2778 0
 29662 0020 FB68     		ldr	r3, [r7, #12]
 29663 0022 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29664 0024 FB82     		strh	r3, [r7, #22]	@ movhi
2779:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2781:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 29665              		.loc 1 2781 0
 29666 0026 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29667 0028 23F00703 		bic	r3, r3, #7
 29668 002c FB82     		strh	r3, [r7, #22]	@ movhi
2782:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2784:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 29669              		.loc 1 2784 0
 29670 002e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29671 0030 43F00703 		orr	r3, r3, #7
 29672 0034 FB82     		strh	r3, [r7, #22]	@ movhi
2785:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2786:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2787:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 29673              		.loc 1 2787 0
 29674 0036 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29675 0038 23F07003 		bic	r3, r3, #112
 29676 003c FB82     		strh	r3, [r7, #22]	@ movhi
2788:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 29677              		.loc 1 2788 0
 29678 003e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29679 0040 43F07003 		orr	r3, r3, #112
 29680 0044 FB82     		strh	r3, [r7, #22]	@ movhi
2789:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2790:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2791:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 29681              		.loc 1 2791 0
 29682 0046 FB68     		ldr	r3, [r7, #12]
 29683 0048 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 29684 004a 1A81     		strh	r2, [r3, #8]	@ movhi
2792:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29685              		.loc 1 2792 0
 29686 004c 07F11807 		add	r7, r7, #24
 29687 0050 BD46     		mov	sp, r7
 29688 0052 80BD     		pop	{r7, pc}
 29689              		.cfi_endproc
 29690              	.LFE188:
 29692              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 29693              		.align	2
 29694              		.global	TIM_ETRClockMode2Config
 29695              		.thumb
 29696              		.thumb_func
 29698              	TIM_ETRClockMode2Config:
 29699              	.LFB189:
2793:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2794:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2795:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2796:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2797:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2798:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2799:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2800:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2801:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2802:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2803:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2804:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2805:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2806:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2807:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2808:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2809:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2810:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2811:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2812:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2813:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29700              		.loc 1 2813 0
 29701              		.cfi_startproc
 29702              		@ args = 0, pretend = 0, frame = 16
 29703              		@ frame_needed = 1, uses_anonymous_args = 0
 29704 0000 80B5     		push	{r7, lr}
 29705              	.LCFI237:
 29706              		.cfi_def_cfa_offset 8
 29707 0002 84B0     		sub	sp, sp, #16
 29708              	.LCFI238:
 29709              		.cfi_def_cfa_offset 24
 29710 0004 00AF     		add	r7, sp, #0
 29711              		.cfi_offset 14, -4
 29712              		.cfi_offset 7, -8
 29713              	.LCFI239:
 29714              		.cfi_def_cfa_register 7
 29715 0006 F860     		str	r0, [r7, #12]
 29716 0008 7981     		strh	r1, [r7, #10]	@ movhi
 29717 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 29718 000c FB80     		strh	r3, [r7, #6]	@ movhi
2814:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2815:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2816:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2817:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2818:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2819:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2821:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 29719              		.loc 1 2821 0
 29720 000e 7989     		ldrh	r1, [r7, #10]
 29721 0010 3A89     		ldrh	r2, [r7, #8]
 29722 0012 FB88     		ldrh	r3, [r7, #6]
 29723 0014 F868     		ldr	r0, [r7, #12]
 29724 0016 FFF7FEFF 		bl	TIM_ETRConfig
2822:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2823:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2824:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 29725              		.loc 1 2824 0
 29726 001a FB68     		ldr	r3, [r7, #12]
 29727 001c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29728 001e 9BB2     		uxth	r3, r3
 29729 0020 43F48043 		orr	r3, r3, #16384
 29730 0024 9AB2     		uxth	r2, r3
 29731 0026 FB68     		ldr	r3, [r7, #12]
 29732 0028 1A81     		strh	r2, [r3, #8]	@ movhi
2825:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29733              		.loc 1 2825 0
 29734 002a 07F11007 		add	r7, r7, #16
 29735 002e BD46     		mov	sp, r7
 29736 0030 80BD     		pop	{r7, pc}
 29737              		.cfi_endproc
 29738              	.LFE189:
 29740 0032 00BF     		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 29741              		.align	2
 29742              		.global	TIM_SelectInputTrigger
 29743              		.thumb
 29744              		.thumb_func
 29746              	TIM_SelectInputTrigger:
 29747              	.LFB190:
2826:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2827:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2828:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2829:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2830:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2831:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2832:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2833:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2834:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2835:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2836:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2837:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2838:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2839:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2840:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2841:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2842:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2843:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2844:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2845:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2846:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2847:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2848:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2849:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2850:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2851:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2852:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2853:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2854:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2855:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2856:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2857:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2858:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2859:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2860:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2861:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2862:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2863:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2864:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2865:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2866:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2867:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2868:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2869:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2870:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2871:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2872:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2873:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2874:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2875:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2876:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2877:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2878:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2879:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2880:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29748              		.loc 1 2880 0
 29749              		.cfi_startproc
 29750              		@ args = 0, pretend = 0, frame = 16
 29751              		@ frame_needed = 1, uses_anonymous_args = 0
 29752              		@ link register save eliminated.
 29753 0000 80B4     		push	{r7}
 29754              	.LCFI240:
 29755              		.cfi_def_cfa_offset 4
 29756 0002 85B0     		sub	sp, sp, #20
 29757              	.LCFI241:
 29758              		.cfi_def_cfa_offset 24
 29759 0004 00AF     		add	r7, sp, #0
 29760              		.cfi_offset 7, -4
 29761              	.LCFI242:
 29762              		.cfi_def_cfa_register 7
 29763 0006 7860     		str	r0, [r7, #4]
 29764 0008 0B46     		mov	r3, r1
 29765 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2881:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 29766              		.loc 1 2881 0
 29767 000c 4FF00003 		mov	r3, #0
 29768 0010 FB81     		strh	r3, [r7, #14]	@ movhi
2882:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2883:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2884:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2885:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2886:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2888:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 29769              		.loc 1 2888 0
 29770 0012 7B68     		ldr	r3, [r7, #4]
 29771 0014 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29772 0016 FB81     		strh	r3, [r7, #14]	@ movhi
2889:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2891:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 29773              		.loc 1 2891 0
 29774 0018 FB89     		ldrh	r3, [r7, #14]	@ movhi
 29775 001a 23F07003 		bic	r3, r3, #112
 29776 001e FB81     		strh	r3, [r7, #14]	@ movhi
2892:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2894:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 29777              		.loc 1 2894 0
 29778 0020 FA89     		ldrh	r2, [r7, #14]	@ movhi
 29779 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29780 0024 42EA0303 		orr	r3, r2, r3
 29781 0028 FB81     		strh	r3, [r7, #14]	@ movhi
2895:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2896:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2897:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 29782              		.loc 1 2897 0
 29783 002a 7B68     		ldr	r3, [r7, #4]
 29784 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 29785 002e 1A81     		strh	r2, [r3, #8]	@ movhi
2898:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29786              		.loc 1 2898 0
 29787 0030 07F11407 		add	r7, r7, #20
 29788 0034 BD46     		mov	sp, r7
 29789 0036 80BC     		pop	{r7}
 29790 0038 7047     		bx	lr
 29791              		.cfi_endproc
 29792              	.LFE190:
 29794 003a 00BF     		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 29795              		.align	2
 29796              		.global	TIM_SelectOutputTrigger
 29797              		.thumb
 29798              		.thumb_func
 29800              	TIM_SelectOutputTrigger:
 29801              	.LFB191:
2899:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2900:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2901:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2902:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2903:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2904:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2905:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2906:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2907:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2908:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2909:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2910:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2911:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2912:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2913:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2914:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2915:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2916:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2917:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2918:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2919:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2920:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2921:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2922:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2923:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29802              		.loc 1 2923 0
 29803              		.cfi_startproc
 29804              		@ args = 0, pretend = 0, frame = 8
 29805              		@ frame_needed = 1, uses_anonymous_args = 0
 29806              		@ link register save eliminated.
 29807 0000 80B4     		push	{r7}
 29808              	.LCFI243:
 29809              		.cfi_def_cfa_offset 4
 29810 0002 83B0     		sub	sp, sp, #12
 29811              	.LCFI244:
 29812              		.cfi_def_cfa_offset 16
 29813 0004 00AF     		add	r7, sp, #0
 29814              		.cfi_offset 7, -4
 29815              	.LCFI245:
 29816              		.cfi_def_cfa_register 7
 29817 0006 7860     		str	r0, [r7, #4]
 29818 0008 0B46     		mov	r3, r1
 29819 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2924:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2925:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2926:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2927:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2928:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2929:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 29820              		.loc 1 2929 0
 29821 000c 7B68     		ldr	r3, [r7, #4]
 29822 000e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 29823 0010 9BB2     		uxth	r3, r3
 29824 0012 23F07003 		bic	r3, r3, #112
 29825 0016 9AB2     		uxth	r2, r3
 29826 0018 7B68     		ldr	r3, [r7, #4]
 29827 001a 9A80     		strh	r2, [r3, #4]	@ movhi
2930:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2931:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 29828              		.loc 1 2931 0
 29829 001c 7B68     		ldr	r3, [r7, #4]
 29830 001e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 29831 0020 9AB2     		uxth	r2, r3
 29832 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29833 0024 42EA0303 		orr	r3, r2, r3
 29834 0028 9AB2     		uxth	r2, r3
 29835 002a 7B68     		ldr	r3, [r7, #4]
 29836 002c 9A80     		strh	r2, [r3, #4]	@ movhi
2932:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29837              		.loc 1 2932 0
 29838 002e 07F10C07 		add	r7, r7, #12
 29839 0032 BD46     		mov	sp, r7
 29840 0034 80BC     		pop	{r7}
 29841 0036 7047     		bx	lr
 29842              		.cfi_endproc
 29843              	.LFE191:
 29845              		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 29846              		.align	2
 29847              		.global	TIM_SelectSlaveMode
 29848              		.thumb
 29849              		.thumb_func
 29851              	TIM_SelectSlaveMode:
 29852              	.LFB192:
2933:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2934:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2935:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2936:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2937:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2938:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2939:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2940:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2941:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2942:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2943:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2944:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2945:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2946:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2947:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29853              		.loc 1 2947 0
 29854              		.cfi_startproc
 29855              		@ args = 0, pretend = 0, frame = 8
 29856              		@ frame_needed = 1, uses_anonymous_args = 0
 29857              		@ link register save eliminated.
 29858 0000 80B4     		push	{r7}
 29859              	.LCFI246:
 29860              		.cfi_def_cfa_offset 4
 29861 0002 83B0     		sub	sp, sp, #12
 29862              	.LCFI247:
 29863              		.cfi_def_cfa_offset 16
 29864 0004 00AF     		add	r7, sp, #0
 29865              		.cfi_offset 7, -4
 29866              	.LCFI248:
 29867              		.cfi_def_cfa_register 7
 29868 0006 7860     		str	r0, [r7, #4]
 29869 0008 0B46     		mov	r3, r1
 29870 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2948:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2949:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2950:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2951:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2953:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 29871              		.loc 1 2953 0
 29872 000c 7B68     		ldr	r3, [r7, #4]
 29873 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29874 0010 9BB2     		uxth	r3, r3
 29875 0012 23F00703 		bic	r3, r3, #7
 29876 0016 9AB2     		uxth	r2, r3
 29877 0018 7B68     		ldr	r3, [r7, #4]
 29878 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2954:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2955:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2956:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 29879              		.loc 1 2956 0
 29880 001c 7B68     		ldr	r3, [r7, #4]
 29881 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29882 0020 9AB2     		uxth	r2, r3
 29883 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29884 0024 42EA0303 		orr	r3, r2, r3
 29885 0028 9AB2     		uxth	r2, r3
 29886 002a 7B68     		ldr	r3, [r7, #4]
 29887 002c 1A81     		strh	r2, [r3, #8]	@ movhi
2957:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29888              		.loc 1 2957 0
 29889 002e 07F10C07 		add	r7, r7, #12
 29890 0032 BD46     		mov	sp, r7
 29891 0034 80BC     		pop	{r7}
 29892 0036 7047     		bx	lr
 29893              		.cfi_endproc
 29894              	.LFE192:
 29896              		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 29897              		.align	2
 29898              		.global	TIM_SelectMasterSlaveMode
 29899              		.thumb
 29900              		.thumb_func
 29902              	TIM_SelectMasterSlaveMode:
 29903              	.LFB193:
2958:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2959:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2960:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2961:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2962:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2963:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2964:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2965:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2966:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2967:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2968:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2969:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2970:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29904              		.loc 1 2970 0
 29905              		.cfi_startproc
 29906              		@ args = 0, pretend = 0, frame = 8
 29907              		@ frame_needed = 1, uses_anonymous_args = 0
 29908              		@ link register save eliminated.
 29909 0000 80B4     		push	{r7}
 29910              	.LCFI249:
 29911              		.cfi_def_cfa_offset 4
 29912 0002 83B0     		sub	sp, sp, #12
 29913              	.LCFI250:
 29914              		.cfi_def_cfa_offset 16
 29915 0004 00AF     		add	r7, sp, #0
 29916              		.cfi_offset 7, -4
 29917              	.LCFI251:
 29918              		.cfi_def_cfa_register 7
 29919 0006 7860     		str	r0, [r7, #4]
 29920 0008 0B46     		mov	r3, r1
 29921 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2971:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2972:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2973:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2974:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2975:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2976:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 29922              		.loc 1 2976 0
 29923 000c 7B68     		ldr	r3, [r7, #4]
 29924 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29925 0010 9BB2     		uxth	r3, r3
 29926 0012 23F08003 		bic	r3, r3, #128
 29927 0016 9AB2     		uxth	r2, r3
 29928 0018 7B68     		ldr	r3, [r7, #4]
 29929 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2977:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2978:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2979:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 29930              		.loc 1 2979 0
 29931 001c 7B68     		ldr	r3, [r7, #4]
 29932 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29933 0020 9AB2     		uxth	r2, r3
 29934 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 29935 0024 42EA0303 		orr	r3, r2, r3
 29936 0028 9AB2     		uxth	r2, r3
 29937 002a 7B68     		ldr	r3, [r7, #4]
 29938 002c 1A81     		strh	r2, [r3, #8]	@ movhi
2980:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 29939              		.loc 1 2980 0
 29940 002e 07F10C07 		add	r7, r7, #12
 29941 0032 BD46     		mov	sp, r7
 29942 0034 80BC     		pop	{r7}
 29943 0036 7047     		bx	lr
 29944              		.cfi_endproc
 29945              	.LFE193:
 29947              		.section	.text.TIM_ETRConfig,"ax",%progbits
 29948              		.align	2
 29949              		.global	TIM_ETRConfig
 29950              		.thumb
 29951              		.thumb_func
 29953              	TIM_ETRConfig:
 29954              	.LFB194:
2981:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2982:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2983:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2984:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2985:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2986:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2987:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2988:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2989:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2990:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2991:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2992:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2993:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2994:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2995:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2996:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2997:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2998:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2999:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
3000:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
3001:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 29955              		.loc 1 3001 0
 29956              		.cfi_startproc
 29957              		@ args = 0, pretend = 0, frame = 24
 29958              		@ frame_needed = 1, uses_anonymous_args = 0
 29959              		@ link register save eliminated.
 29960 0000 80B4     		push	{r7}
 29961              	.LCFI252:
 29962              		.cfi_def_cfa_offset 4
 29963 0002 87B0     		sub	sp, sp, #28
 29964              	.LCFI253:
 29965              		.cfi_def_cfa_offset 32
 29966 0004 00AF     		add	r7, sp, #0
 29967              		.cfi_offset 7, -4
 29968              	.LCFI254:
 29969              		.cfi_def_cfa_register 7
 29970 0006 F860     		str	r0, [r7, #12]
 29971 0008 7981     		strh	r1, [r7, #10]	@ movhi
 29972 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 29973 000c FB80     		strh	r3, [r7, #6]	@ movhi
3002:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 29974              		.loc 1 3002 0
 29975 000e 4FF00003 		mov	r3, #0
 29976 0012 FB82     		strh	r3, [r7, #22]	@ movhi
3003:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3004:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3005:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3006:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3007:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3008:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3009:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3010:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 29977              		.loc 1 3010 0
 29978 0014 FB68     		ldr	r3, [r7, #12]
 29979 0016 1B89     		ldrh	r3, [r3, #8]	@ movhi
 29980 0018 FB82     		strh	r3, [r7, #22]	@ movhi
3011:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3013:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 29981              		.loc 1 3013 0
 29982 001a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29983 001c 03F0FF03 		and	r3, r3, #255
 29984 0020 FB82     		strh	r3, [r7, #22]	@ movhi
3014:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3016:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 29985              		.loc 1 3016 0
 29986 0022 FB88     		ldrh	r3, [r7, #6]	@ movhi
 29987 0024 4FEA0323 		lsl	r3, r3, #8
 29988 0028 9AB2     		uxth	r2, r3
 29989 002a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 29990 002c 42EA0303 		orr	r3, r2, r3
 29991 0030 9AB2     		uxth	r2, r3
 29992 0032 7B89     		ldrh	r3, [r7, #10]	@ movhi
 29993 0034 42EA0303 		orr	r3, r2, r3
 29994 0038 9AB2     		uxth	r2, r3
 29995 003a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 29996 003c 42EA0303 		orr	r3, r2, r3
 29997 0040 FB82     		strh	r3, [r7, #22]	@ movhi
3017:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3018:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3019:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 29998              		.loc 1 3019 0
 29999 0042 FB68     		ldr	r3, [r7, #12]
 30000 0044 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 30001 0046 1A81     		strh	r2, [r3, #8]	@ movhi
3020:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 30002              		.loc 1 3020 0
 30003 0048 07F11C07 		add	r7, r7, #28
 30004 004c BD46     		mov	sp, r7
 30005 004e 80BC     		pop	{r7}
 30006 0050 7047     		bx	lr
 30007              		.cfi_endproc
 30008              	.LFE194:
 30010 0052 00BF     		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 30011              		.align	2
 30012              		.global	TIM_EncoderInterfaceConfig
 30013              		.thumb
 30014              		.thumb_func
 30016              	TIM_EncoderInterfaceConfig:
 30017              	.LFB195:
3021:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3022:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3023:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3024:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3025:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3026:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3027:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3028:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3029:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3030:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3031:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3032:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3033:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3034:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3035:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3036:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3037:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3038:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3039:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3040:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3041:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3042:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3043:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3044:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3045:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3046:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3047:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3048:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3049:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3050:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3051:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3052:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3053:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3054:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3055:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3056:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3057:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3058:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3059:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 30018              		.loc 1 3059 0
 30019              		.cfi_startproc
 30020              		@ args = 0, pretend = 0, frame = 24
 30021              		@ frame_needed = 1, uses_anonymous_args = 0
 30022              		@ link register save eliminated.
 30023 0000 80B4     		push	{r7}
 30024              	.LCFI255:
 30025              		.cfi_def_cfa_offset 4
 30026 0002 87B0     		sub	sp, sp, #28
 30027              	.LCFI256:
 30028              		.cfi_def_cfa_offset 32
 30029 0004 00AF     		add	r7, sp, #0
 30030              		.cfi_offset 7, -4
 30031              	.LCFI257:
 30032              		.cfi_def_cfa_register 7
 30033 0006 F860     		str	r0, [r7, #12]
 30034 0008 7981     		strh	r1, [r7, #10]	@ movhi
 30035 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 30036 000c FB80     		strh	r3, [r7, #6]	@ movhi
3060:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 30037              		.loc 1 3060 0
 30038 000e 4FF00003 		mov	r3, #0
 30039 0012 FB82     		strh	r3, [r7, #22]	@ movhi
3061:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 30040              		.loc 1 3061 0
 30041 0014 4FF00003 		mov	r3, #0
 30042 0018 BB82     		strh	r3, [r7, #20]	@ movhi
3062:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 30043              		.loc 1 3062 0
 30044 001a 4FF00003 		mov	r3, #0
 30045 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3063:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3064:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3065:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3066:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3067:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3068:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3069:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3071:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 30046              		.loc 1 3071 0
 30047 0020 FB68     		ldr	r3, [r7, #12]
 30048 0022 1B89     		ldrh	r3, [r3, #8]	@ movhi
 30049 0024 FB82     		strh	r3, [r7, #22]	@ movhi
3072:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3074:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 30050              		.loc 1 3074 0
 30051 0026 FB68     		ldr	r3, [r7, #12]
 30052 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 30053 002a BB82     		strh	r3, [r7, #20]	@ movhi
3075:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3077:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 30054              		.loc 1 3077 0
 30055 002c FB68     		ldr	r3, [r7, #12]
 30056 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 30057 0030 7B82     		strh	r3, [r7, #18]	@ movhi
3078:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3079:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3080:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 30058              		.loc 1 3080 0
 30059 0032 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30060 0034 23F00703 		bic	r3, r3, #7
 30061 0038 FB82     		strh	r3, [r7, #22]	@ movhi
3081:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 30062              		.loc 1 3081 0
 30063 003a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 30064 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 30065 003e 42EA0303 		orr	r3, r2, r3
 30066 0042 FB82     		strh	r3, [r7, #22]	@ movhi
3082:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3083:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3084:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 30067              		.loc 1 3084 0
 30068 0044 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30069 0046 23F44073 		bic	r3, r3, #768
 30070 004a 23F00303 		bic	r3, r3, #3
 30071 004e BB82     		strh	r3, [r7, #20]	@ movhi
3085:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 30072              		.loc 1 3085 0
 30073 0050 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30074 0052 43F48073 		orr	r3, r3, #256
 30075 0056 43F00103 		orr	r3, r3, #1
 30076 005a BB82     		strh	r3, [r7, #20]	@ movhi
3086:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3087:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3088:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 30077              		.loc 1 3088 0
 30078 005c 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 30079 005e 23F02203 		bic	r3, r3, #34
 30080 0062 7B82     		strh	r3, [r7, #18]	@ movhi
3089:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 30081              		.loc 1 3089 0
 30082 0064 FB88     		ldrh	r3, [r7, #6]	@ movhi
 30083 0066 4FEA0313 		lsl	r3, r3, #4
 30084 006a 9AB2     		uxth	r2, r3
 30085 006c 3B89     		ldrh	r3, [r7, #8]	@ movhi
 30086 006e 42EA0303 		orr	r3, r2, r3
 30087 0072 9AB2     		uxth	r2, r3
 30088 0074 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 30089 0076 42EA0303 		orr	r3, r2, r3
 30090 007a 7B82     		strh	r3, [r7, #18]	@ movhi
3090:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3092:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 30091              		.loc 1 3092 0
 30092 007c FB68     		ldr	r3, [r7, #12]
 30093 007e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 30094 0080 1A81     		strh	r2, [r3, #8]	@ movhi
3093:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3095:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 30095              		.loc 1 3095 0
 30096 0082 FB68     		ldr	r3, [r7, #12]
 30097 0084 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 30098 0086 1A83     		strh	r2, [r3, #24]	@ movhi
3096:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3097:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3098:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 30099              		.loc 1 3098 0
 30100 0088 FB68     		ldr	r3, [r7, #12]
 30101 008a 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 30102 008c 1A84     		strh	r2, [r3, #32]	@ movhi
3099:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 30103              		.loc 1 3099 0
 30104 008e 07F11C07 		add	r7, r7, #28
 30105 0092 BD46     		mov	sp, r7
 30106 0094 80BC     		pop	{r7}
 30107 0096 7047     		bx	lr
 30108              		.cfi_endproc
 30109              	.LFE195:
 30111              		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 30112              		.align	2
 30113              		.global	TIM_SelectHallSensor
 30114              		.thumb
 30115              		.thumb_func
 30117              	TIM_SelectHallSensor:
 30118              	.LFB196:
3100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 30119              		.loc 1 3110 0
 30120              		.cfi_startproc
 30121              		@ args = 0, pretend = 0, frame = 8
 30122              		@ frame_needed = 1, uses_anonymous_args = 0
 30123              		@ link register save eliminated.
 30124 0000 80B4     		push	{r7}
 30125              	.LCFI258:
 30126              		.cfi_def_cfa_offset 4
 30127 0002 83B0     		sub	sp, sp, #12
 30128              	.LCFI259:
 30129              		.cfi_def_cfa_offset 16
 30130 0004 00AF     		add	r7, sp, #0
 30131              		.cfi_offset 7, -4
 30132              	.LCFI260:
 30133              		.cfi_def_cfa_register 7
 30134 0006 7860     		str	r0, [r7, #4]
 30135 0008 0B46     		mov	r3, r1
 30136 000a FB70     		strb	r3, [r7, #3]
3111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 30137              		.loc 1 3115 0
 30138 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 30139 000e 002B     		cmp	r3, #0
 30140 0010 08D0     		beq	.L166
3116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 30141              		.loc 1 3118 0
 30142 0012 7B68     		ldr	r3, [r7, #4]
 30143 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 30144 0016 9BB2     		uxth	r3, r3
 30145 0018 43F08003 		orr	r3, r3, #128
 30146 001c 9AB2     		uxth	r2, r3
 30147 001e 7B68     		ldr	r3, [r7, #4]
 30148 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 30149 0022 07E0     		b	.L165
 30150              	.L166:
3119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 30151              		.loc 1 3123 0
 30152 0024 7B68     		ldr	r3, [r7, #4]
 30153 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 30154 0028 9BB2     		uxth	r3, r3
 30155 002a 23F08003 		bic	r3, r3, #128
 30156 002e 9AB2     		uxth	r2, r3
 30157 0030 7B68     		ldr	r3, [r7, #4]
 30158 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 30159              	.L165:
3124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 30160              		.loc 1 3125 0
 30161 0034 07F10C07 		add	r7, r7, #12
 30162 0038 BD46     		mov	sp, r7
 30163 003a 80BC     		pop	{r7}
 30164 003c 7047     		bx	lr
 30165              		.cfi_endproc
 30166              	.LFE196:
 30168 003e 00BF     		.section	.text.TIM_RemapConfig,"ax",%progbits
 30169              		.align	2
 30170              		.global	TIM_RemapConfig
 30171              		.thumb
 30172              		.thumb_func
 30174              	TIM_RemapConfig:
 30175              	.LFB197:
3126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 30176              		.loc 1 3161 0
 30177              		.cfi_startproc
 30178              		@ args = 0, pretend = 0, frame = 8
 30179              		@ frame_needed = 1, uses_anonymous_args = 0
 30180              		@ link register save eliminated.
 30181 0000 80B4     		push	{r7}
 30182              	.LCFI261:
 30183              		.cfi_def_cfa_offset 4
 30184 0002 83B0     		sub	sp, sp, #12
 30185              	.LCFI262:
 30186              		.cfi_def_cfa_offset 16
 30187 0004 00AF     		add	r7, sp, #0
 30188              		.cfi_offset 7, -4
 30189              	.LCFI263:
 30190              		.cfi_def_cfa_register 7
 30191 0006 7860     		str	r0, [r7, #4]
 30192 0008 0B46     		mov	r3, r1
 30193 000a 7B80     		strh	r3, [r7, #2]	@ movhi
3162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 30194              		.loc 1 3167 0
 30195 000c 7B68     		ldr	r3, [r7, #4]
 30196 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 30197 0010 A3F85020 		strh	r2, [r3, #80]	@ movhi
3168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 30198              		.loc 1 3168 0
 30199 0014 07F10C07 		add	r7, r7, #12
 30200 0018 BD46     		mov	sp, r7
 30201 001a 80BC     		pop	{r7}
 30202 001c 7047     		bx	lr
 30203              		.cfi_endproc
 30204              	.LFE197:
 30206 001e 00BF     		.section	.text.TI1_Config,"ax",%progbits
 30207              		.align	2
 30208              		.thumb
 30209              		.thumb_func
 30211              	TI1_Config:
 30212              	.LFB198:
3169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 30213              		.loc 1 3193 0
 30214              		.cfi_startproc
 30215              		@ args = 0, pretend = 0, frame = 24
 30216              		@ frame_needed = 1, uses_anonymous_args = 0
 30217              		@ link register save eliminated.
 30218 0000 80B4     		push	{r7}
 30219              	.LCFI264:
 30220              		.cfi_def_cfa_offset 4
 30221 0002 87B0     		sub	sp, sp, #28
 30222              	.LCFI265:
 30223              		.cfi_def_cfa_offset 32
 30224 0004 00AF     		add	r7, sp, #0
 30225              		.cfi_offset 7, -4
 30226              	.LCFI266:
 30227              		.cfi_def_cfa_register 7
 30228 0006 F860     		str	r0, [r7, #12]
 30229 0008 7981     		strh	r1, [r7, #10]	@ movhi
 30230 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 30231 000c FB80     		strh	r3, [r7, #6]	@ movhi
3194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 30232              		.loc 1 3194 0
 30233 000e 4FF00003 		mov	r3, #0
 30234 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 30235 0014 4FF00003 		mov	r3, #0
 30236 0018 BB82     		strh	r3, [r7, #20]	@ movhi
3195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 30237              		.loc 1 3197 0
 30238 001a FB68     		ldr	r3, [r7, #12]
 30239 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 30240 001e 9BB2     		uxth	r3, r3
 30241 0020 23F00103 		bic	r3, r3, #1
 30242 0024 9AB2     		uxth	r2, r3
 30243 0026 FB68     		ldr	r3, [r7, #12]
 30244 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 30245              		.loc 1 3198 0
 30246 002a FB68     		ldr	r3, [r7, #12]
 30247 002c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 30248 002e FB82     		strh	r3, [r7, #22]	@ movhi
3199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 30249              		.loc 1 3199 0
 30250 0030 FB68     		ldr	r3, [r7, #12]
 30251 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 30252 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 30253              		.loc 1 3202 0
 30254 0036 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30255 0038 23F0F303 		bic	r3, r3, #243
 30256 003c FB82     		strh	r3, [r7, #22]	@ movhi
3203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 30257              		.loc 1 3203 0
 30258 003e FB88     		ldrh	r3, [r7, #6]	@ movhi
 30259 0040 4FEA0313 		lsl	r3, r3, #4
 30260 0044 9AB2     		uxth	r2, r3
 30261 0046 3B89     		ldrh	r3, [r7, #8]	@ movhi
 30262 0048 42EA0303 		orr	r3, r2, r3
 30263 004c 9AB2     		uxth	r2, r3
 30264 004e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30265 0050 42EA0303 		orr	r3, r2, r3
 30266 0054 FB82     		strh	r3, [r7, #22]	@ movhi
3204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 30267              		.loc 1 3206 0
 30268 0056 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30269 0058 23F00A03 		bic	r3, r3, #10
 30270 005c BB82     		strh	r3, [r7, #20]	@ movhi
3207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 30271              		.loc 1 3207 0
 30272 005e 7A89     		ldrh	r2, [r7, #10]	@ movhi
 30273 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30274 0062 42EA0303 		orr	r3, r2, r3
 30275 0066 9BB2     		uxth	r3, r3
 30276 0068 43F00103 		orr	r3, r3, #1
 30277 006c BB82     		strh	r3, [r7, #20]	@ movhi
3208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 30278              		.loc 1 3210 0
 30279 006e FB68     		ldr	r3, [r7, #12]
 30280 0070 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 30281 0072 1A83     		strh	r2, [r3, #24]	@ movhi
3211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 30282              		.loc 1 3211 0
 30283 0074 FB68     		ldr	r3, [r7, #12]
 30284 0076 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 30285 0078 1A84     		strh	r2, [r3, #32]	@ movhi
3212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 30286              		.loc 1 3212 0
 30287 007a 07F11C07 		add	r7, r7, #28
 30288 007e BD46     		mov	sp, r7
 30289 0080 80BC     		pop	{r7}
 30290 0082 7047     		bx	lr
 30291              		.cfi_endproc
 30292              	.LFE198:
 30294              		.section	.text.TI2_Config,"ax",%progbits
 30295              		.align	2
 30296              		.thumb
 30297              		.thumb_func
 30299              	TI2_Config:
 30300              	.LFB199:
3213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 30301              		.loc 1 3234 0
 30302              		.cfi_startproc
 30303              		@ args = 0, pretend = 0, frame = 24
 30304              		@ frame_needed = 1, uses_anonymous_args = 0
 30305              		@ link register save eliminated.
 30306 0000 80B4     		push	{r7}
 30307              	.LCFI267:
 30308              		.cfi_def_cfa_offset 4
 30309 0002 87B0     		sub	sp, sp, #28
 30310              	.LCFI268:
 30311              		.cfi_def_cfa_offset 32
 30312 0004 00AF     		add	r7, sp, #0
 30313              		.cfi_offset 7, -4
 30314              	.LCFI269:
 30315              		.cfi_def_cfa_register 7
 30316 0006 F860     		str	r0, [r7, #12]
 30317 0008 7981     		strh	r1, [r7, #10]	@ movhi
 30318 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 30319 000c FB80     		strh	r3, [r7, #6]	@ movhi
3235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 30320              		.loc 1 3235 0
 30321 000e 4FF00003 		mov	r3, #0
 30322 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 30323 0014 4FF00003 		mov	r3, #0
 30324 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 30325 001a 4FF00003 		mov	r3, #0
 30326 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 30327              		.loc 1 3238 0
 30328 0020 FB68     		ldr	r3, [r7, #12]
 30329 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 30330 0024 9BB2     		uxth	r3, r3
 30331 0026 23F01003 		bic	r3, r3, #16
 30332 002a 9AB2     		uxth	r2, r3
 30333 002c FB68     		ldr	r3, [r7, #12]
 30334 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 30335              		.loc 1 3239 0
 30336 0030 FB68     		ldr	r3, [r7, #12]
 30337 0032 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 30338 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 30339              		.loc 1 3240 0
 30340 0036 FB68     		ldr	r3, [r7, #12]
 30341 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 30342 003a BB82     		strh	r3, [r7, #20]	@ movhi
3241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 30343              		.loc 1 3241 0
 30344 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 30345 003e 4FEA0313 		lsl	r3, r3, #4
 30346 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 30347              		.loc 1 3244 0
 30348 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30349 0046 23F44073 		bic	r3, r3, #768
 30350 004a 4FEA0353 		lsl	r3, r3, #20
 30351 004e 4FEA1353 		lsr	r3, r3, #20
 30352 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 30353              		.loc 1 3245 0
 30354 0054 FB88     		ldrh	r3, [r7, #6]	@ movhi
 30355 0056 4FEA0333 		lsl	r3, r3, #12
 30356 005a 9AB2     		uxth	r2, r3
 30357 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30358 005e 42EA0303 		orr	r3, r2, r3
 30359 0062 FB82     		strh	r3, [r7, #22]	@ movhi
3246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 30360              		.loc 1 3246 0
 30361 0064 3B89     		ldrh	r3, [r7, #8]	@ movhi
 30362 0066 4FEA0323 		lsl	r3, r3, #8
 30363 006a 9AB2     		uxth	r2, r3
 30364 006c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30365 006e 42EA0303 		orr	r3, r2, r3
 30366 0072 FB82     		strh	r3, [r7, #22]	@ movhi
3247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 30367              		.loc 1 3249 0
 30368 0074 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30369 0076 23F0A003 		bic	r3, r3, #160
 30370 007a BB82     		strh	r3, [r7, #20]	@ movhi
3250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 30371              		.loc 1 3250 0
 30372 007c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 30373 007e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30374 0080 42EA0303 		orr	r3, r2, r3
 30375 0084 9BB2     		uxth	r3, r3
 30376 0086 43F01003 		orr	r3, r3, #16
 30377 008a BB82     		strh	r3, [r7, #20]	@ movhi
3251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 30378              		.loc 1 3253 0
 30379 008c FB68     		ldr	r3, [r7, #12]
 30380 008e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 30381 0090 1A83     		strh	r2, [r3, #24]	@ movhi
3254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 30382              		.loc 1 3254 0
 30383 0092 FB68     		ldr	r3, [r7, #12]
 30384 0094 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 30385 0096 1A84     		strh	r2, [r3, #32]	@ movhi
3255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 30386              		.loc 1 3255 0
 30387 0098 07F11C07 		add	r7, r7, #28
 30388 009c BD46     		mov	sp, r7
 30389 009e 80BC     		pop	{r7}
 30390 00a0 7047     		bx	lr
 30391              		.cfi_endproc
 30392              	.LFE199:
 30394 00a2 00BF     		.section	.text.TI3_Config,"ax",%progbits
 30395              		.align	2
 30396              		.thumb
 30397              		.thumb_func
 30399              	TI3_Config:
 30400              	.LFB200:
3256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 30401              		.loc 1 3276 0
 30402              		.cfi_startproc
 30403              		@ args = 0, pretend = 0, frame = 24
 30404              		@ frame_needed = 1, uses_anonymous_args = 0
 30405              		@ link register save eliminated.
 30406 0000 80B4     		push	{r7}
 30407              	.LCFI270:
 30408              		.cfi_def_cfa_offset 4
 30409 0002 87B0     		sub	sp, sp, #28
 30410              	.LCFI271:
 30411              		.cfi_def_cfa_offset 32
 30412 0004 00AF     		add	r7, sp, #0
 30413              		.cfi_offset 7, -4
 30414              	.LCFI272:
 30415              		.cfi_def_cfa_register 7
 30416 0006 F860     		str	r0, [r7, #12]
 30417 0008 7981     		strh	r1, [r7, #10]	@ movhi
 30418 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 30419 000c FB80     		strh	r3, [r7, #6]	@ movhi
3277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 30420              		.loc 1 3277 0
 30421 000e 4FF00003 		mov	r3, #0
 30422 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 30423 0014 4FF00003 		mov	r3, #0
 30424 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 30425 001a 4FF00003 		mov	r3, #0
 30426 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 30427              		.loc 1 3280 0
 30428 0020 FB68     		ldr	r3, [r7, #12]
 30429 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 30430 0024 9BB2     		uxth	r3, r3
 30431 0026 23F48073 		bic	r3, r3, #256
 30432 002a 9AB2     		uxth	r2, r3
 30433 002c FB68     		ldr	r3, [r7, #12]
 30434 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 30435              		.loc 1 3281 0
 30436 0030 FB68     		ldr	r3, [r7, #12]
 30437 0032 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 30438 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 30439              		.loc 1 3282 0
 30440 0036 FB68     		ldr	r3, [r7, #12]
 30441 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 30442 003a BB82     		strh	r3, [r7, #20]	@ movhi
3283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 30443              		.loc 1 3283 0
 30444 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 30445 003e 4FEA0323 		lsl	r3, r3, #8
 30446 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 30447              		.loc 1 3286 0
 30448 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30449 0046 23F0F303 		bic	r3, r3, #243
 30450 004a FB82     		strh	r3, [r7, #22]	@ movhi
3287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 30451              		.loc 1 3287 0
 30452 004c FB88     		ldrh	r3, [r7, #6]	@ movhi
 30453 004e 4FEA0313 		lsl	r3, r3, #4
 30454 0052 9AB2     		uxth	r2, r3
 30455 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 30456 0056 42EA0303 		orr	r3, r2, r3
 30457 005a 9AB2     		uxth	r2, r3
 30458 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30459 005e 42EA0303 		orr	r3, r2, r3
 30460 0062 FB82     		strh	r3, [r7, #22]	@ movhi
3288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 30461              		.loc 1 3290 0
 30462 0064 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30463 0066 23F42063 		bic	r3, r3, #2560
 30464 006a BB82     		strh	r3, [r7, #20]	@ movhi
3291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 30465              		.loc 1 3291 0
 30466 006c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 30467 006e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30468 0070 42EA0303 		orr	r3, r2, r3
 30469 0074 9BB2     		uxth	r3, r3
 30470 0076 43F48073 		orr	r3, r3, #256
 30471 007a BB82     		strh	r3, [r7, #20]	@ movhi
3292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 30472              		.loc 1 3294 0
 30473 007c FB68     		ldr	r3, [r7, #12]
 30474 007e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 30475 0080 9A83     		strh	r2, [r3, #28]	@ movhi
3295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 30476              		.loc 1 3295 0
 30477 0082 FB68     		ldr	r3, [r7, #12]
 30478 0084 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 30479 0086 1A84     		strh	r2, [r3, #32]	@ movhi
3296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 30480              		.loc 1 3296 0
 30481 0088 07F11C07 		add	r7, r7, #28
 30482 008c BD46     		mov	sp, r7
 30483 008e 80BC     		pop	{r7}
 30484 0090 7047     		bx	lr
 30485              		.cfi_endproc
 30486              	.LFE200:
 30488 0092 00BF     		.section	.text.TI4_Config,"ax",%progbits
 30489              		.align	2
 30490              		.thumb
 30491              		.thumb_func
 30493              	TI4_Config:
 30494              	.LFB201:
3297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 30495              		.loc 1 3317 0
 30496              		.cfi_startproc
 30497              		@ args = 0, pretend = 0, frame = 24
 30498              		@ frame_needed = 1, uses_anonymous_args = 0
 30499              		@ link register save eliminated.
 30500 0000 80B4     		push	{r7}
 30501              	.LCFI273:
 30502              		.cfi_def_cfa_offset 4
 30503 0002 87B0     		sub	sp, sp, #28
 30504              	.LCFI274:
 30505              		.cfi_def_cfa_offset 32
 30506 0004 00AF     		add	r7, sp, #0
 30507              		.cfi_offset 7, -4
 30508              	.LCFI275:
 30509              		.cfi_def_cfa_register 7
 30510 0006 F860     		str	r0, [r7, #12]
 30511 0008 7981     		strh	r1, [r7, #10]	@ movhi
 30512 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 30513 000c FB80     		strh	r3, [r7, #6]	@ movhi
3318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 30514              		.loc 1 3318 0
 30515 000e 4FF00003 		mov	r3, #0
 30516 0012 FB82     		strh	r3, [r7, #22]	@ movhi
 30517 0014 4FF00003 		mov	r3, #0
 30518 0018 BB82     		strh	r3, [r7, #20]	@ movhi
 30519 001a 4FF00003 		mov	r3, #0
 30520 001e 7B82     		strh	r3, [r7, #18]	@ movhi
3319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 30521              		.loc 1 3321 0
 30522 0020 FB68     		ldr	r3, [r7, #12]
 30523 0022 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 30524 0024 9BB2     		uxth	r3, r3
 30525 0026 23F48053 		bic	r3, r3, #4096
 30526 002a 9AB2     		uxth	r2, r3
 30527 002c FB68     		ldr	r3, [r7, #12]
 30528 002e 1A84     		strh	r2, [r3, #32]	@ movhi
3322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 30529              		.loc 1 3322 0
 30530 0030 FB68     		ldr	r3, [r7, #12]
 30531 0032 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 30532 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 30533              		.loc 1 3323 0
 30534 0036 FB68     		ldr	r3, [r7, #12]
 30535 0038 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 30536 003a BB82     		strh	r3, [r7, #20]	@ movhi
3324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 30537              		.loc 1 3324 0
 30538 003c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 30539 003e 4FEA0333 		lsl	r3, r3, #12
 30540 0042 7B82     		strh	r3, [r7, #18]	@ movhi
3325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 30541              		.loc 1 3327 0
 30542 0044 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30543 0046 23F44073 		bic	r3, r3, #768
 30544 004a 4FEA0353 		lsl	r3, r3, #20
 30545 004e 4FEA1353 		lsr	r3, r3, #20
 30546 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 30547              		.loc 1 3328 0
 30548 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 30549 0056 4FEA0323 		lsl	r3, r3, #8
 30550 005a 9AB2     		uxth	r2, r3
 30551 005c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30552 005e 42EA0303 		orr	r3, r2, r3
 30553 0062 FB82     		strh	r3, [r7, #22]	@ movhi
3329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 30554              		.loc 1 3329 0
 30555 0064 FB88     		ldrh	r3, [r7, #6]	@ movhi
 30556 0066 4FEA0333 		lsl	r3, r3, #12
 30557 006a 9AB2     		uxth	r2, r3
 30558 006c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 30559 006e 42EA0303 		orr	r3, r2, r3
 30560 0072 FB82     		strh	r3, [r7, #22]	@ movhi
3330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 30561              		.loc 1 3332 0
 30562 0074 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30563 0076 23F40053 		bic	r3, r3, #8192
 30564 007a 4FEA4343 		lsl	r3, r3, #17
 30565 007e 4FEA5343 		lsr	r3, r3, #17
 30566 0082 BB82     		strh	r3, [r7, #20]	@ movhi
3333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 30567              		.loc 1 3333 0
 30568 0084 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 30569 0086 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 30570 0088 42EA0303 		orr	r3, r2, r3
 30571 008c 9BB2     		uxth	r3, r3
 30572 008e 43F48053 		orr	r3, r3, #4096
 30573 0092 BB82     		strh	r3, [r7, #20]	@ movhi
3334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 30574              		.loc 1 3336 0
 30575 0094 FB68     		ldr	r3, [r7, #12]
 30576 0096 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 30577 0098 9A83     		strh	r2, [r3, #28]	@ movhi
3337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 30578              		.loc 1 3337 0
 30579 009a FB68     		ldr	r3, [r7, #12]
 30580 009c BA8A     		ldrh	r2, [r7, #20]	@ movhi
 30581 009e 1A84     		strh	r2, [r3, #32]	@ movhi
3338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 30582              		.loc 1 3338 0
 30583 00a0 07F11C07 		add	r7, r7, #28
 30584 00a4 BD46     		mov	sp, r7
 30585 00a6 80BC     		pop	{r7}
 30586 00a8 7047     		bx	lr
 30587              		.cfi_endproc
 30588              	.LFE201:
 30590 00aa 00BF     		.text
 30591              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_tim.c
     /tmp/ccBT6XHa.s:24593  .text.TIM_DeInit:00000000 $t
     /tmp/ccBT6XHa.s:24598  .text.TIM_DeInit:00000000 TIM_DeInit
     /tmp/ccBT6XHa.s:24831  .text.TIM_DeInit:000001ec $d
     /tmp/ccBT6XHa.s:24848  .text.TIM_TimeBaseInit:00000000 $t
     /tmp/ccBT6XHa.s:24853  .text.TIM_TimeBaseInit:00000000 TIM_TimeBaseInit
     /tmp/ccBT6XHa.s:24984  .text.TIM_TimeBaseInit:000000c0 $d
     /tmp/ccBT6XHa.s:24995  .text.TIM_TimeBaseStructInit:00000000 $t
     /tmp/ccBT6XHa.s:25000  .text.TIM_TimeBaseStructInit:00000000 TIM_TimeBaseStructInit
     /tmp/ccBT6XHa.s:25047  .text.TIM_PrescalerConfig:00000000 $t
     /tmp/ccBT6XHa.s:25052  .text.TIM_PrescalerConfig:00000000 TIM_PrescalerConfig
     /tmp/ccBT6XHa.s:25091  .text.TIM_CounterModeConfig:00000000 $t
     /tmp/ccBT6XHa.s:25096  .text.TIM_CounterModeConfig:00000000 TIM_CounterModeConfig
     /tmp/ccBT6XHa.s:25145  .text.TIM_SetCounter:00000000 $t
     /tmp/ccBT6XHa.s:25150  .text.TIM_SetCounter:00000000 TIM_SetCounter
     /tmp/ccBT6XHa.s:25182  .text.TIM_SetAutoreload:00000000 $t
     /tmp/ccBT6XHa.s:25187  .text.TIM_SetAutoreload:00000000 TIM_SetAutoreload
     /tmp/ccBT6XHa.s:25219  .text.TIM_GetCounter:00000000 $t
     /tmp/ccBT6XHa.s:25224  .text.TIM_GetCounter:00000000 TIM_GetCounter
     /tmp/ccBT6XHa.s:25255  .text.TIM_GetPrescaler:00000000 $t
     /tmp/ccBT6XHa.s:25260  .text.TIM_GetPrescaler:00000000 TIM_GetPrescaler
     /tmp/ccBT6XHa.s:25292  .text.TIM_UpdateDisableConfig:00000000 $t
     /tmp/ccBT6XHa.s:25297  .text.TIM_UpdateDisableConfig:00000000 TIM_UpdateDisableConfig
     /tmp/ccBT6XHa.s:25349  .text.TIM_UpdateRequestConfig:00000000 $t
     /tmp/ccBT6XHa.s:25354  .text.TIM_UpdateRequestConfig:00000000 TIM_UpdateRequestConfig
     /tmp/ccBT6XHa.s:25406  .text.TIM_ARRPreloadConfig:00000000 $t
     /tmp/ccBT6XHa.s:25411  .text.TIM_ARRPreloadConfig:00000000 TIM_ARRPreloadConfig
     /tmp/ccBT6XHa.s:25463  .text.TIM_SelectOnePulseMode:00000000 $t
     /tmp/ccBT6XHa.s:25468  .text.TIM_SelectOnePulseMode:00000000 TIM_SelectOnePulseMode
     /tmp/ccBT6XHa.s:25514  .text.TIM_SetClockDivision:00000000 $t
     /tmp/ccBT6XHa.s:25519  .text.TIM_SetClockDivision:00000000 TIM_SetClockDivision
     /tmp/ccBT6XHa.s:25565  .text.TIM_Cmd:00000000 $t
     /tmp/ccBT6XHa.s:25570  .text.TIM_Cmd:00000000 TIM_Cmd
     /tmp/ccBT6XHa.s:25622  .text.TIM_OC1Init:00000000 $t
     /tmp/ccBT6XHa.s:25627  .text.TIM_OC1Init:00000000 TIM_OC1Init
     /tmp/ccBT6XHa.s:25780  .text.TIM_OC1Init:00000100 $d
     /tmp/ccBT6XHa.s:25786  .text.TIM_OC2Init:00000000 $t
     /tmp/ccBT6XHa.s:25791  .text.TIM_OC2Init:00000000 TIM_OC2Init
     /tmp/ccBT6XHa.s:25958  .text.TIM_OC2Init:00000128 $d
     /tmp/ccBT6XHa.s:25964  .text.TIM_OC3Init:00000000 $t
     /tmp/ccBT6XHa.s:25969  .text.TIM_OC3Init:00000000 TIM_OC3Init
     /tmp/ccBT6XHa.s:26134  .text.TIM_OC3Init:00000124 $d
     /tmp/ccBT6XHa.s:26140  .text.TIM_OC4Init:00000000 $t
     /tmp/ccBT6XHa.s:26145  .text.TIM_OC4Init:00000000 TIM_OC4Init
     /tmp/ccBT6XHa.s:26276  .text.TIM_OC4Init:000000dc $d
     /tmp/ccBT6XHa.s:26282  .text.TIM_OCStructInit:00000000 $t
     /tmp/ccBT6XHa.s:26287  .text.TIM_OCStructInit:00000000 TIM_OCStructInit
     /tmp/ccBT6XHa.s:26346  .text.TIM_SelectOCxM:00000000 $t
     /tmp/ccBT6XHa.s:26351  .text.TIM_SelectOCxM:00000000 TIM_SelectOCxM
     /tmp/ccBT6XHa.s:26469  .text.TIM_SetCompare1:00000000 $t
     /tmp/ccBT6XHa.s:26474  .text.TIM_SetCompare1:00000000 TIM_SetCompare1
     /tmp/ccBT6XHa.s:26506  .text.TIM_SetCompare2:00000000 $t
     /tmp/ccBT6XHa.s:26511  .text.TIM_SetCompare2:00000000 TIM_SetCompare2
     /tmp/ccBT6XHa.s:26543  .text.TIM_SetCompare3:00000000 $t
     /tmp/ccBT6XHa.s:26548  .text.TIM_SetCompare3:00000000 TIM_SetCompare3
     /tmp/ccBT6XHa.s:26580  .text.TIM_SetCompare4:00000000 $t
     /tmp/ccBT6XHa.s:26585  .text.TIM_SetCompare4:00000000 TIM_SetCompare4
     /tmp/ccBT6XHa.s:26617  .text.TIM_ForcedOC1Config:00000000 $t
     /tmp/ccBT6XHa.s:26622  .text.TIM_ForcedOC1Config:00000000 TIM_ForcedOC1Config
     /tmp/ccBT6XHa.s:26671  .text.TIM_ForcedOC2Config:00000000 $t
     /tmp/ccBT6XHa.s:26676  .text.TIM_ForcedOC2Config:00000000 TIM_ForcedOC2Config
     /tmp/ccBT6XHa.s:26727  .text.TIM_ForcedOC3Config:00000000 $t
     /tmp/ccBT6XHa.s:26732  .text.TIM_ForcedOC3Config:00000000 TIM_ForcedOC3Config
     /tmp/ccBT6XHa.s:26781  .text.TIM_ForcedOC4Config:00000000 $t
     /tmp/ccBT6XHa.s:26786  .text.TIM_ForcedOC4Config:00000000 TIM_ForcedOC4Config
     /tmp/ccBT6XHa.s:26837  .text.TIM_OC1PreloadConfig:00000000 $t
     /tmp/ccBT6XHa.s:26842  .text.TIM_OC1PreloadConfig:00000000 TIM_OC1PreloadConfig
     /tmp/ccBT6XHa.s:26891  .text.TIM_OC2PreloadConfig:00000000 $t
     /tmp/ccBT6XHa.s:26896  .text.TIM_OC2PreloadConfig:00000000 TIM_OC2PreloadConfig
     /tmp/ccBT6XHa.s:26947  .text.TIM_OC3PreloadConfig:00000000 $t
     /tmp/ccBT6XHa.s:26952  .text.TIM_OC3PreloadConfig:00000000 TIM_OC3PreloadConfig
     /tmp/ccBT6XHa.s:27001  .text.TIM_OC4PreloadConfig:00000000 $t
     /tmp/ccBT6XHa.s:27006  .text.TIM_OC4PreloadConfig:00000000 TIM_OC4PreloadConfig
     /tmp/ccBT6XHa.s:27057  .text.TIM_OC1FastConfig:00000000 $t
     /tmp/ccBT6XHa.s:27062  .text.TIM_OC1FastConfig:00000000 TIM_OC1FastConfig
     /tmp/ccBT6XHa.s:27111  .text.TIM_OC2FastConfig:00000000 $t
     /tmp/ccBT6XHa.s:27116  .text.TIM_OC2FastConfig:00000000 TIM_OC2FastConfig
     /tmp/ccBT6XHa.s:27167  .text.TIM_OC3FastConfig:00000000 $t
     /tmp/ccBT6XHa.s:27172  .text.TIM_OC3FastConfig:00000000 TIM_OC3FastConfig
     /tmp/ccBT6XHa.s:27221  .text.TIM_OC4FastConfig:00000000 $t
     /tmp/ccBT6XHa.s:27226  .text.TIM_OC4FastConfig:00000000 TIM_OC4FastConfig
     /tmp/ccBT6XHa.s:27277  .text.TIM_ClearOC1Ref:00000000 $t
     /tmp/ccBT6XHa.s:27282  .text.TIM_ClearOC1Ref:00000000 TIM_ClearOC1Ref
     /tmp/ccBT6XHa.s:27331  .text.TIM_ClearOC2Ref:00000000 $t
     /tmp/ccBT6XHa.s:27336  .text.TIM_ClearOC2Ref:00000000 TIM_ClearOC2Ref
     /tmp/ccBT6XHa.s:27388  .text.TIM_ClearOC3Ref:00000000 $t
     /tmp/ccBT6XHa.s:27393  .text.TIM_ClearOC3Ref:00000000 TIM_ClearOC3Ref
     /tmp/ccBT6XHa.s:27442  .text.TIM_ClearOC4Ref:00000000 $t
     /tmp/ccBT6XHa.s:27447  .text.TIM_ClearOC4Ref:00000000 TIM_ClearOC4Ref
     /tmp/ccBT6XHa.s:27499  .text.TIM_OC1PolarityConfig:00000000 $t
     /tmp/ccBT6XHa.s:27504  .text.TIM_OC1PolarityConfig:00000000 TIM_OC1PolarityConfig
     /tmp/ccBT6XHa.s:27553  .text.TIM_OC1NPolarityConfig:00000000 $t
     /tmp/ccBT6XHa.s:27558  .text.TIM_OC1NPolarityConfig:00000000 TIM_OC1NPolarityConfig
     /tmp/ccBT6XHa.s:27607  .text.TIM_OC2PolarityConfig:00000000 $t
     /tmp/ccBT6XHa.s:27612  .text.TIM_OC2PolarityConfig:00000000 TIM_OC2PolarityConfig
     /tmp/ccBT6XHa.s:27663  .text.TIM_OC2NPolarityConfig:00000000 $t
     /tmp/ccBT6XHa.s:27668  .text.TIM_OC2NPolarityConfig:00000000 TIM_OC2NPolarityConfig
     /tmp/ccBT6XHa.s:27719  .text.TIM_OC3PolarityConfig:00000000 $t
     /tmp/ccBT6XHa.s:27724  .text.TIM_OC3PolarityConfig:00000000 TIM_OC3PolarityConfig
     /tmp/ccBT6XHa.s:27775  .text.TIM_OC3NPolarityConfig:00000000 $t
     /tmp/ccBT6XHa.s:27780  .text.TIM_OC3NPolarityConfig:00000000 TIM_OC3NPolarityConfig
     /tmp/ccBT6XHa.s:27831  .text.TIM_OC4PolarityConfig:00000000 $t
     /tmp/ccBT6XHa.s:27836  .text.TIM_OC4PolarityConfig:00000000 TIM_OC4PolarityConfig
     /tmp/ccBT6XHa.s:27887  .text.TIM_CCxCmd:00000000 $t
     /tmp/ccBT6XHa.s:27892  .text.TIM_CCxCmd:00000000 TIM_CCxCmd
     /tmp/ccBT6XHa.s:27954  .text.TIM_CCxNCmd:00000000 $t
     /tmp/ccBT6XHa.s:27959  .text.TIM_CCxNCmd:00000000 TIM_CCxNCmd
     /tmp/ccBT6XHa.s:28021  .text.TIM_ICInit:00000000 $t
     /tmp/ccBT6XHa.s:28026  .text.TIM_ICInit:00000000 TIM_ICInit
     /tmp/ccBT6XHa.s:30211  .text.TI1_Config:00000000 TI1_Config
     /tmp/ccBT6XHa.s:28486  .text.TIM_SetIC1Prescaler:00000000 TIM_SetIC1Prescaler
     /tmp/ccBT6XHa.s:30299  .text.TI2_Config:00000000 TI2_Config
     /tmp/ccBT6XHa.s:28537  .text.TIM_SetIC2Prescaler:00000000 TIM_SetIC2Prescaler
     /tmp/ccBT6XHa.s:30399  .text.TI3_Config:00000000 TI3_Config
     /tmp/ccBT6XHa.s:28590  .text.TIM_SetIC3Prescaler:00000000 TIM_SetIC3Prescaler
     /tmp/ccBT6XHa.s:30493  .text.TI4_Config:00000000 TI4_Config
     /tmp/ccBT6XHa.s:28641  .text.TIM_SetIC4Prescaler:00000000 TIM_SetIC4Prescaler
     /tmp/ccBT6XHa.s:28151  .text.TIM_ICStructInit:00000000 $t
     /tmp/ccBT6XHa.s:28156  .text.TIM_ICStructInit:00000000 TIM_ICStructInit
     /tmp/ccBT6XHa.s:28203  .text.TIM_PWMIConfig:00000000 $t
     /tmp/ccBT6XHa.s:28208  .text.TIM_PWMIConfig:00000000 TIM_PWMIConfig
     /tmp/ccBT6XHa.s:28337  .text.TIM_GetCapture1:00000000 $t
     /tmp/ccBT6XHa.s:28342  .text.TIM_GetCapture1:00000000 TIM_GetCapture1
     /tmp/ccBT6XHa.s:28373  .text.TIM_GetCapture2:00000000 $t
     /tmp/ccBT6XHa.s:28378  .text.TIM_GetCapture2:00000000 TIM_GetCapture2
     /tmp/ccBT6XHa.s:28409  .text.TIM_GetCapture3:00000000 $t
     /tmp/ccBT6XHa.s:28414  .text.TIM_GetCapture3:00000000 TIM_GetCapture3
     /tmp/ccBT6XHa.s:28445  .text.TIM_GetCapture4:00000000 $t
     /tmp/ccBT6XHa.s:28450  .text.TIM_GetCapture4:00000000 TIM_GetCapture4
     /tmp/ccBT6XHa.s:28481  .text.TIM_SetIC1Prescaler:00000000 $t
     /tmp/ccBT6XHa.s:28532  .text.TIM_SetIC2Prescaler:00000000 $t
     /tmp/ccBT6XHa.s:28585  .text.TIM_SetIC3Prescaler:00000000 $t
     /tmp/ccBT6XHa.s:28636  .text.TIM_SetIC4Prescaler:00000000 $t
     /tmp/ccBT6XHa.s:28689  .text.TIM_BDTRConfig:00000000 $t
     /tmp/ccBT6XHa.s:28694  .text.TIM_BDTRConfig:00000000 TIM_BDTRConfig
     /tmp/ccBT6XHa.s:28761  .text.TIM_BDTRStructInit:00000000 $t
     /tmp/ccBT6XHa.s:28766  .text.TIM_BDTRStructInit:00000000 TIM_BDTRStructInit
     /tmp/ccBT6XHa.s:28821  .text.TIM_CtrlPWMOutputs:00000000 $t
     /tmp/ccBT6XHa.s:28826  .text.TIM_CtrlPWMOutputs:00000000 TIM_CtrlPWMOutputs
     /tmp/ccBT6XHa.s:28880  .text.TIM_SelectCOM:00000000 $t
     /tmp/ccBT6XHa.s:28885  .text.TIM_SelectCOM:00000000 TIM_SelectCOM
     /tmp/ccBT6XHa.s:28937  .text.TIM_CCPreloadControl:00000000 $t
     /tmp/ccBT6XHa.s:28942  .text.TIM_CCPreloadControl:00000000 TIM_CCPreloadControl
     /tmp/ccBT6XHa.s:28994  .text.TIM_ITConfig:00000000 $t
     /tmp/ccBT6XHa.s:28999  .text.TIM_ITConfig:00000000 TIM_ITConfig
     /tmp/ccBT6XHa.s:29057  .text.TIM_GenerateEvent:00000000 $t
     /tmp/ccBT6XHa.s:29062  .text.TIM_GenerateEvent:00000000 TIM_GenerateEvent
     /tmp/ccBT6XHa.s:29095  .text.TIM_GetFlagStatus:00000000 $t
     /tmp/ccBT6XHa.s:29100  .text.TIM_GetFlagStatus:00000000 TIM_GetFlagStatus
     /tmp/ccBT6XHa.s:29153  .text.TIM_ClearFlag:00000000 $t
     /tmp/ccBT6XHa.s:29158  .text.TIM_ClearFlag:00000000 TIM_ClearFlag
     /tmp/ccBT6XHa.s:29193  .text.TIM_GetITStatus:00000000 $t
     /tmp/ccBT6XHa.s:29198  .text.TIM_GetITStatus:00000000 TIM_GetITStatus
     /tmp/ccBT6XHa.s:29269  .text.TIM_ClearITPendingBit:00000000 $t
     /tmp/ccBT6XHa.s:29274  .text.TIM_ClearITPendingBit:00000000 TIM_ClearITPendingBit
     /tmp/ccBT6XHa.s:29309  .text.TIM_DMAConfig:00000000 $t
     /tmp/ccBT6XHa.s:29314  .text.TIM_DMAConfig:00000000 TIM_DMAConfig
     /tmp/ccBT6XHa.s:29352  .text.TIM_DMACmd:00000000 $t
     /tmp/ccBT6XHa.s:29357  .text.TIM_DMACmd:00000000 TIM_DMACmd
     /tmp/ccBT6XHa.s:29415  .text.TIM_SelectCCDMA:00000000 $t
     /tmp/ccBT6XHa.s:29420  .text.TIM_SelectCCDMA:00000000 TIM_SelectCCDMA
     /tmp/ccBT6XHa.s:29472  .text.TIM_InternalClockConfig:00000000 $t
     /tmp/ccBT6XHa.s:29477  .text.TIM_InternalClockConfig:00000000 TIM_InternalClockConfig
     /tmp/ccBT6XHa.s:29512  .text.TIM_ITRxExternalClockConfig:00000000 $t
     /tmp/ccBT6XHa.s:29517  .text.TIM_ITRxExternalClockConfig:00000000 TIM_ITRxExternalClockConfig
     /tmp/ccBT6XHa.s:29746  .text.TIM_SelectInputTrigger:00000000 TIM_SelectInputTrigger
     /tmp/ccBT6XHa.s:29558  .text.TIM_TIxExternalClockConfig:00000000 $t
     /tmp/ccBT6XHa.s:29563  .text.TIM_TIxExternalClockConfig:00000000 TIM_TIxExternalClockConfig
     /tmp/ccBT6XHa.s:29626  .text.TIM_ETRClockMode1Config:00000000 $t
     /tmp/ccBT6XHa.s:29631  .text.TIM_ETRClockMode1Config:00000000 TIM_ETRClockMode1Config
     /tmp/ccBT6XHa.s:29953  .text.TIM_ETRConfig:00000000 TIM_ETRConfig
     /tmp/ccBT6XHa.s:29693  .text.TIM_ETRClockMode2Config:00000000 $t
     /tmp/ccBT6XHa.s:29698  .text.TIM_ETRClockMode2Config:00000000 TIM_ETRClockMode2Config
     /tmp/ccBT6XHa.s:29741  .text.TIM_SelectInputTrigger:00000000 $t
     /tmp/ccBT6XHa.s:29795  .text.TIM_SelectOutputTrigger:00000000 $t
     /tmp/ccBT6XHa.s:29800  .text.TIM_SelectOutputTrigger:00000000 TIM_SelectOutputTrigger
     /tmp/ccBT6XHa.s:29846  .text.TIM_SelectSlaveMode:00000000 $t
     /tmp/ccBT6XHa.s:29851  .text.TIM_SelectSlaveMode:00000000 TIM_SelectSlaveMode
     /tmp/ccBT6XHa.s:29897  .text.TIM_SelectMasterSlaveMode:00000000 $t
     /tmp/ccBT6XHa.s:29902  .text.TIM_SelectMasterSlaveMode:00000000 TIM_SelectMasterSlaveMode
     /tmp/ccBT6XHa.s:29948  .text.TIM_ETRConfig:00000000 $t
     /tmp/ccBT6XHa.s:30011  .text.TIM_EncoderInterfaceConfig:00000000 $t
     /tmp/ccBT6XHa.s:30016  .text.TIM_EncoderInterfaceConfig:00000000 TIM_EncoderInterfaceConfig
     /tmp/ccBT6XHa.s:30112  .text.TIM_SelectHallSensor:00000000 $t
     /tmp/ccBT6XHa.s:30117  .text.TIM_SelectHallSensor:00000000 TIM_SelectHallSensor
     /tmp/ccBT6XHa.s:30169  .text.TIM_RemapConfig:00000000 $t
     /tmp/ccBT6XHa.s:30174  .text.TIM_RemapConfig:00000000 TIM_RemapConfig
     /tmp/ccBT6XHa.s:30207  .text.TI1_Config:00000000 $t
     /tmp/ccBT6XHa.s:30295  .text.TI2_Config:00000000 $t
     /tmp/ccBT6XHa.s:30395  .text.TI3_Config:00000000 $t
     /tmp/ccBT6XHa.s:30489  .text.TI4_Config:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
