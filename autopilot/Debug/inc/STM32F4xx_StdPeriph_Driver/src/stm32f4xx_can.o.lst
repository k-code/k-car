   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_can.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
 24617              		.align	2
 24618              		.global	CAN_DeInit
 24619              		.thumb
 24620              		.thumb_func
 24622              	CAN_DeInit:
 24623              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 24624              		.loc 1 163 0
 24625              		.cfi_startproc
 24626              		@ args = 0, pretend = 0, frame = 8
 24627              		@ frame_needed = 1, uses_anonymous_args = 0
 24628 0000 80B5     		push	{r7, lr}
 24629              	.LCFI0:
 24630              		.cfi_def_cfa_offset 8
 24631 0002 82B0     		sub	sp, sp, #8
 24632              	.LCFI1:
 24633              		.cfi_def_cfa_offset 16
 24634 0004 00AF     		add	r7, sp, #0
 24635              		.cfi_offset 14, -4
 24636              		.cfi_offset 7, -8
 24637              	.LCFI2:
 24638              		.cfi_def_cfa_register 7
 24639 0006 7860     		str	r0, [r7, #4]
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
 24640              		.loc 1 167 0
 24641 0008 7A68     		ldr	r2, [r7, #4]
 24642 000a 104B     		ldr	r3, .L4
 24643 000c 9A42     		cmp	r2, r3
 24644 000e 0CD1     		bne	.L2
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
 24645              		.loc 1 170 0
 24646 0010 4FF00070 		mov	r0, #33554432
 24647 0014 4FF00101 		mov	r1, #1
 24648 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
 24649              		.loc 1 172 0
 24650 001c 4FF00070 		mov	r0, #33554432
 24651 0020 4FF00001 		mov	r1, #0
 24652 0024 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24653 0028 0BE0     		b	.L1
 24654              	.L2:
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
 24655              		.loc 1 177 0
 24656 002a 4FF08060 		mov	r0, #67108864
 24657 002e 4FF00101 		mov	r1, #1
 24658 0032 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
 24659              		.loc 1 179 0
 24660 0036 4FF08060 		mov	r0, #67108864
 24661 003a 4FF00001 		mov	r1, #0
 24662 003e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 24663              	.L1:
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 24664              		.loc 1 181 0
 24665 0042 07F10807 		add	r7, r7, #8
 24666 0046 BD46     		mov	sp, r7
 24667 0048 80BD     		pop	{r7, pc}
 24668              	.L5:
 24669 004a 00BF     		.align	2
 24670              	.L4:
 24671 004c 00640040 		.word	1073767424
 24672              		.cfi_endproc
 24673              	.LFE110:
 24675              		.section	.text.CAN_Init,"ax",%progbits
 24676              		.align	2
 24677              		.global	CAN_Init
 24678              		.thumb
 24679              		.thumb_func
 24681              	CAN_Init:
 24682              	.LFB111:
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 24683              		.loc 1 193 0
 24684              		.cfi_startproc
 24685              		@ args = 0, pretend = 0, frame = 16
 24686              		@ frame_needed = 1, uses_anonymous_args = 0
 24687              		@ link register save eliminated.
 24688 0000 80B4     		push	{r7}
 24689              	.LCFI3:
 24690              		.cfi_def_cfa_offset 4
 24691 0002 85B0     		sub	sp, sp, #20
 24692              	.LCFI4:
 24693              		.cfi_def_cfa_offset 24
 24694 0004 00AF     		add	r7, sp, #0
 24695              		.cfi_offset 7, -4
 24696              	.LCFI5:
 24697              		.cfi_def_cfa_register 7
 24698 0006 7860     		str	r0, [r7, #4]
 24699 0008 3960     		str	r1, [r7, #0]
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 24700              		.loc 1 194 0
 24701 000a 4FF00003 		mov	r3, #0
 24702 000e FB73     		strb	r3, [r7, #15]
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 24703              		.loc 1 195 0
 24704 0010 4FF00003 		mov	r3, #0
 24705 0014 BB60     		str	r3, [r7, #8]
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 24706              		.loc 1 211 0
 24707 0016 7B68     		ldr	r3, [r7, #4]
 24708 0018 1B68     		ldr	r3, [r3, #0]
 24709 001a 23F00202 		bic	r2, r3, #2
 24710 001e 7B68     		ldr	r3, [r7, #4]
 24711 0020 1A60     		str	r2, [r3, #0]
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 24712              		.loc 1 214 0
 24713 0022 7B68     		ldr	r3, [r7, #4]
 24714 0024 1B68     		ldr	r3, [r3, #0]
 24715 0026 43F00102 		orr	r2, r3, #1
 24716 002a 7B68     		ldr	r3, [r7, #4]
 24717 002c 1A60     		str	r2, [r3, #0]
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 24718              		.loc 1 217 0
 24719 002e 03E0     		b	.L7
 24720              	.L9:
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 24721              		.loc 1 219 0
 24722 0030 BB68     		ldr	r3, [r7, #8]
 24723 0032 03F10103 		add	r3, r3, #1
 24724 0036 BB60     		str	r3, [r7, #8]
 24725              	.L7:
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 24726              		.loc 1 217 0 discriminator 1
 24727 0038 7B68     		ldr	r3, [r7, #4]
 24728 003a 5B68     		ldr	r3, [r3, #4]
 24729 003c 03F00103 		and	r3, r3, #1
 24730 0040 002B     		cmp	r3, #0
 24731 0042 04D1     		bne	.L8
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 24732              		.loc 1 217 0 is_stmt 0 discriminator 2
 24733 0044 BA68     		ldr	r2, [r7, #8]
 24734 0046 4FF6FF73 		movw	r3, #65535
 24735 004a 9A42     		cmp	r2, r3
 24736 004c F0D1     		bne	.L9
 24737              	.L8:
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 24738              		.loc 1 223 0 is_stmt 1
 24739 004e 7B68     		ldr	r3, [r7, #4]
 24740 0050 5B68     		ldr	r3, [r3, #4]
 24741 0052 03F00103 		and	r3, r3, #1
 24742 0056 002B     		cmp	r3, #0
 24743 0058 03D1     		bne	.L10
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 24744              		.loc 1 225 0
 24745 005a 4FF00003 		mov	r3, #0
 24746 005e FB73     		strb	r3, [r7, #15]
 24747 0060 A7E0     		b	.L11
 24748              	.L10:
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 24749              		.loc 1 230 0
 24750 0062 3B68     		ldr	r3, [r7, #0]
 24751 0064 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 24752 0066 012B     		cmp	r3, #1
 24753 0068 06D1     		bne	.L12
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 24754              		.loc 1 232 0
 24755 006a 7B68     		ldr	r3, [r7, #4]
 24756 006c 1B68     		ldr	r3, [r3, #0]
 24757 006e 43F08002 		orr	r2, r3, #128
 24758 0072 7B68     		ldr	r3, [r7, #4]
 24759 0074 1A60     		str	r2, [r3, #0]
 24760 0076 05E0     		b	.L13
 24761              	.L12:
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 24762              		.loc 1 236 0
 24763 0078 7B68     		ldr	r3, [r7, #4]
 24764 007a 1B68     		ldr	r3, [r3, #0]
 24765 007c 23F08002 		bic	r2, r3, #128
 24766 0080 7B68     		ldr	r3, [r7, #4]
 24767 0082 1A60     		str	r2, [r3, #0]
 24768              	.L13:
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 24769              		.loc 1 240 0
 24770 0084 3B68     		ldr	r3, [r7, #0]
 24771 0086 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 24772 0088 012B     		cmp	r3, #1
 24773 008a 06D1     		bne	.L14
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 24774              		.loc 1 242 0
 24775 008c 7B68     		ldr	r3, [r7, #4]
 24776 008e 1B68     		ldr	r3, [r3, #0]
 24777 0090 43F04002 		orr	r2, r3, #64
 24778 0094 7B68     		ldr	r3, [r7, #4]
 24779 0096 1A60     		str	r2, [r3, #0]
 24780 0098 05E0     		b	.L15
 24781              	.L14:
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 24782              		.loc 1 246 0
 24783 009a 7B68     		ldr	r3, [r7, #4]
 24784 009c 1B68     		ldr	r3, [r3, #0]
 24785 009e 23F04002 		bic	r2, r3, #64
 24786 00a2 7B68     		ldr	r3, [r7, #4]
 24787 00a4 1A60     		str	r2, [r3, #0]
 24788              	.L15:
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 24789              		.loc 1 250 0
 24790 00a6 3B68     		ldr	r3, [r7, #0]
 24791 00a8 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 24792 00aa 012B     		cmp	r3, #1
 24793 00ac 06D1     		bne	.L16
 251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 24794              		.loc 1 252 0
 24795 00ae 7B68     		ldr	r3, [r7, #4]
 24796 00b0 1B68     		ldr	r3, [r3, #0]
 24797 00b2 43F02002 		orr	r2, r3, #32
 24798 00b6 7B68     		ldr	r3, [r7, #4]
 24799 00b8 1A60     		str	r2, [r3, #0]
 24800 00ba 05E0     		b	.L17
 24801              	.L16:
 253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 24802              		.loc 1 256 0
 24803 00bc 7B68     		ldr	r3, [r7, #4]
 24804 00be 1B68     		ldr	r3, [r3, #0]
 24805 00c0 23F02002 		bic	r2, r3, #32
 24806 00c4 7B68     		ldr	r3, [r7, #4]
 24807 00c6 1A60     		str	r2, [r3, #0]
 24808              	.L17:
 257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 24809              		.loc 1 260 0
 24810 00c8 3B68     		ldr	r3, [r7, #0]
 24811 00ca 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 24812 00cc 012B     		cmp	r3, #1
 24813 00ce 06D1     		bne	.L18
 261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 24814              		.loc 1 262 0
 24815 00d0 7B68     		ldr	r3, [r7, #4]
 24816 00d2 1B68     		ldr	r3, [r3, #0]
 24817 00d4 43F01002 		orr	r2, r3, #16
 24818 00d8 7B68     		ldr	r3, [r7, #4]
 24819 00da 1A60     		str	r2, [r3, #0]
 24820 00dc 05E0     		b	.L19
 24821              	.L18:
 263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 24822              		.loc 1 266 0
 24823 00de 7B68     		ldr	r3, [r7, #4]
 24824 00e0 1B68     		ldr	r3, [r3, #0]
 24825 00e2 23F01002 		bic	r2, r3, #16
 24826 00e6 7B68     		ldr	r3, [r7, #4]
 24827 00e8 1A60     		str	r2, [r3, #0]
 24828              	.L19:
 267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 24829              		.loc 1 270 0
 24830 00ea 3B68     		ldr	r3, [r7, #0]
 24831 00ec 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 24832 00ee 012B     		cmp	r3, #1
 24833 00f0 06D1     		bne	.L20
 271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 24834              		.loc 1 272 0
 24835 00f2 7B68     		ldr	r3, [r7, #4]
 24836 00f4 1B68     		ldr	r3, [r3, #0]
 24837 00f6 43F00802 		orr	r2, r3, #8
 24838 00fa 7B68     		ldr	r3, [r7, #4]
 24839 00fc 1A60     		str	r2, [r3, #0]
 24840 00fe 05E0     		b	.L21
 24841              	.L20:
 273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 24842              		.loc 1 276 0
 24843 0100 7B68     		ldr	r3, [r7, #4]
 24844 0102 1B68     		ldr	r3, [r3, #0]
 24845 0104 23F00802 		bic	r2, r3, #8
 24846 0108 7B68     		ldr	r3, [r7, #4]
 24847 010a 1A60     		str	r2, [r3, #0]
 24848              	.L21:
 277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 24849              		.loc 1 280 0
 24850 010c 3B68     		ldr	r3, [r7, #0]
 24851 010e DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 24852 0110 012B     		cmp	r3, #1
 24853 0112 06D1     		bne	.L22
 281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 24854              		.loc 1 282 0
 24855 0114 7B68     		ldr	r3, [r7, #4]
 24856 0116 1B68     		ldr	r3, [r3, #0]
 24857 0118 43F00402 		orr	r2, r3, #4
 24858 011c 7B68     		ldr	r3, [r7, #4]
 24859 011e 1A60     		str	r2, [r3, #0]
 24860 0120 05E0     		b	.L23
 24861              	.L22:
 283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 24862              		.loc 1 286 0
 24863 0122 7B68     		ldr	r3, [r7, #4]
 24864 0124 1B68     		ldr	r3, [r3, #0]
 24865 0126 23F00402 		bic	r2, r3, #4
 24866 012a 7B68     		ldr	r3, [r7, #4]
 24867 012c 1A60     		str	r2, [r3, #0]
 24868              	.L23:
 287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 24869              		.loc 1 290 0
 24870 012e 3B68     		ldr	r3, [r7, #0]
 24871 0130 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 24872 0132 4FEA8372 		lsl	r2, r3, #30
 291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 24873              		.loc 1 291 0
 24874 0136 3B68     		ldr	r3, [r7, #0]
 24875 0138 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24876 013a 4FEA0363 		lsl	r3, r3, #24
 290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 24877              		.loc 1 290 0
 24878 013e 1A43     		orrs	r2, r2, r3
 292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 24879              		.loc 1 292 0
 24880 0140 3B68     		ldr	r3, [r7, #0]
 24881 0142 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24882 0144 4FEA0343 		lsl	r3, r3, #16
 291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 24883              		.loc 1 291 0
 24884 0148 1A43     		orrs	r2, r2, r3
 293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 24885              		.loc 1 293 0
 24886 014a 3B68     		ldr	r3, [r7, #0]
 24887 014c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 24888 014e 4FEA0353 		lsl	r3, r3, #20
 292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 24889              		.loc 1 292 0
 24890 0152 1A43     		orrs	r2, r2, r3
 294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 24891              		.loc 1 294 0
 24892 0154 3B68     		ldr	r3, [r7, #0]
 24893 0156 1B88     		ldrh	r3, [r3, #0]
 24894 0158 03F1FF33 		add	r3, r3, #-1
 293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 24895              		.loc 1 293 0
 24896 015c 1A43     		orrs	r2, r2, r3
 290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 24897              		.loc 1 290 0
 24898 015e 7B68     		ldr	r3, [r7, #4]
 24899 0160 DA61     		str	r2, [r3, #28]
 295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 24900              		.loc 1 297 0
 24901 0162 7B68     		ldr	r3, [r7, #4]
 24902 0164 1B68     		ldr	r3, [r3, #0]
 24903 0166 23F00102 		bic	r2, r3, #1
 24904 016a 7B68     		ldr	r3, [r7, #4]
 24905 016c 1A60     		str	r2, [r3, #0]
 298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 24906              		.loc 1 300 0
 24907 016e 4FF00003 		mov	r3, #0
 24908 0172 BB60     		str	r3, [r7, #8]
 301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 24909              		.loc 1 302 0
 24910 0174 03E0     		b	.L24
 24911              	.L26:
 303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 24912              		.loc 1 304 0
 24913 0176 BB68     		ldr	r3, [r7, #8]
 24914 0178 03F10103 		add	r3, r3, #1
 24915 017c BB60     		str	r3, [r7, #8]
 24916              	.L24:
 302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 24917              		.loc 1 302 0 discriminator 1
 24918 017e 7B68     		ldr	r3, [r7, #4]
 24919 0180 5B68     		ldr	r3, [r3, #4]
 24920 0182 03F00103 		and	r3, r3, #1
 24921 0186 DBB2     		uxtb	r3, r3
 24922 0188 002B     		cmp	r3, #0
 24923 018a 04D0     		beq	.L25
 302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 24924              		.loc 1 302 0 is_stmt 0 discriminator 2
 24925 018c BA68     		ldr	r2, [r7, #8]
 24926 018e 4FF6FF73 		movw	r3, #65535
 24927 0192 9A42     		cmp	r2, r3
 24928 0194 EFD1     		bne	.L26
 24929              	.L25:
 305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 24930              		.loc 1 308 0 is_stmt 1
 24931 0196 7B68     		ldr	r3, [r7, #4]
 24932 0198 5B68     		ldr	r3, [r3, #4]
 24933 019a 03F00103 		and	r3, r3, #1
 24934 019e DBB2     		uxtb	r3, r3
 24935 01a0 002B     		cmp	r3, #0
 24936 01a2 03D0     		beq	.L27
 309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 24937              		.loc 1 310 0
 24938 01a4 4FF00003 		mov	r3, #0
 24939 01a8 FB73     		strb	r3, [r7, #15]
 24940 01aa 02E0     		b	.L11
 24941              	.L27:
 311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 24942              		.loc 1 314 0
 24943 01ac 4FF00103 		mov	r3, #1
 24944 01b0 FB73     		strb	r3, [r7, #15]
 24945              	.L11:
 315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 24946              		.loc 1 319 0
 24947 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 24948              		.loc 1 320 0
 24949 01b4 1846     		mov	r0, r3
 24950 01b6 07F11407 		add	r7, r7, #20
 24951 01ba BD46     		mov	sp, r7
 24952 01bc 80BC     		pop	{r7}
 24953 01be 7047     		bx	lr
 24954              		.cfi_endproc
 24955              	.LFE111:
 24957              		.section	.text.CAN_FilterInit,"ax",%progbits
 24958              		.align	2
 24959              		.global	CAN_FilterInit
 24960              		.thumb
 24961              		.thumb_func
 24963              	CAN_FilterInit:
 24964              	.LFB112:
 321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 24965              		.loc 1 330 0
 24966              		.cfi_startproc
 24967              		@ args = 0, pretend = 0, frame = 16
 24968              		@ frame_needed = 1, uses_anonymous_args = 0
 24969              		@ link register save eliminated.
 24970 0000 80B4     		push	{r7}
 24971              	.LCFI6:
 24972              		.cfi_def_cfa_offset 4
 24973 0002 85B0     		sub	sp, sp, #20
 24974              	.LCFI7:
 24975              		.cfi_def_cfa_offset 24
 24976 0004 00AF     		add	r7, sp, #0
 24977              		.cfi_offset 7, -4
 24978              	.LCFI8:
 24979              		.cfi_def_cfa_register 7
 24980 0006 7860     		str	r0, [r7, #4]
 331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 24981              		.loc 1 331 0
 24982 0008 4FF00003 		mov	r3, #0
 24983 000c FB60     		str	r3, [r7, #12]
 332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 339:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 24984              		.loc 1 339 0
 24985 000e 7B68     		ldr	r3, [r7, #4]
 24986 0010 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 24987 0012 4FF00102 		mov	r2, #1
 24988 0016 02FA03F3 		lsl	r3, r2, r3
 24989 001a FB60     		str	r3, [r7, #12]
 340:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 341:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 342:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 24990              		.loc 1 342 0
 24991 001c 5E4B     		ldr	r3, .L36
 24992 001e 5E4A     		ldr	r2, .L36
 24993 0020 D2F80022 		ldr	r2, [r2, #512]
 24994 0024 42F00102 		orr	r2, r2, #1
 24995 0028 C3F80022 		str	r2, [r3, #512]
 343:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 345:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 24996              		.loc 1 345 0
 24997 002c 5A4B     		ldr	r3, .L36
 24998 002e 5A4A     		ldr	r2, .L36
 24999 0030 D2F81C12 		ldr	r1, [r2, #540]
 25000 0034 FA68     		ldr	r2, [r7, #12]
 25001 0036 6FEA0202 		mvn	r2, r2
 25002 003a 01EA0202 		and	r2, r1, r2
 25003 003e C3F81C22 		str	r2, [r3, #540]
 346:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 348:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 25004              		.loc 1 348 0
 25005 0042 7B68     		ldr	r3, [r7, #4]
 25006 0044 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 25007 0046 002B     		cmp	r3, #0
 25008 0048 2AD1     		bne	.L29
 349:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 350:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 351:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 25009              		.loc 1 351 0
 25010 004a 534B     		ldr	r3, .L36
 25011 004c 524A     		ldr	r2, .L36
 25012 004e D2F80C12 		ldr	r1, [r2, #524]
 25013 0052 FA68     		ldr	r2, [r7, #12]
 25014 0054 6FEA0202 		mvn	r2, r2
 25015 0058 01EA0202 		and	r2, r1, r2
 25016 005c C3F80C22 		str	r2, [r3, #524]
 352:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 25017              		.loc 1 355 0
 25018 0060 4D4B     		ldr	r3, .L36
 25019 0062 7A68     		ldr	r2, [r7, #4]
 25020 0064 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 25021              		.loc 1 356 0
 25022 0066 7968     		ldr	r1, [r7, #4]
 25023 0068 C988     		ldrh	r1, [r1, #6]
 25024 006a 4FEA0140 		lsl	r0, r1, #16
 357:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 25025              		.loc 1 357 0
 25026 006e 7968     		ldr	r1, [r7, #4]
 25027 0070 4988     		ldrh	r1, [r1, #2]
 356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 25028              		.loc 1 356 0
 25029 0072 40EA0101 		orr	r1, r0, r1
 355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 25030              		.loc 1 355 0
 25031 0076 02F14802 		add	r2, r2, #72
 25032 007a 43F83210 		str	r1, [r3, r2, lsl #3]
 358:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 25033              		.loc 1 361 0
 25034 007e 4649     		ldr	r1, .L36
 25035 0080 7B68     		ldr	r3, [r7, #4]
 25036 0082 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 25037              		.loc 1 362 0
 25038 0084 7A68     		ldr	r2, [r7, #4]
 25039 0086 9288     		ldrh	r2, [r2, #4]
 25040 0088 4FEA0240 		lsl	r0, r2, #16
 363:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 25041              		.loc 1 363 0
 25042 008c 7A68     		ldr	r2, [r7, #4]
 25043 008e 1288     		ldrh	r2, [r2, #0]
 362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 25044              		.loc 1 362 0
 25045 0090 40EA0202 		orr	r2, r0, r2
 361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 25046              		.loc 1 361 0
 25047 0094 03F14803 		add	r3, r3, #72
 25048 0098 4FEAC303 		lsl	r3, r3, #3
 25049 009c CB18     		adds	r3, r1, r3
 25050 009e 5A60     		str	r2, [r3, #4]
 25051              	.L29:
 364:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 365:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 366:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 25052              		.loc 1 366 0
 25053 00a0 7B68     		ldr	r3, [r7, #4]
 25054 00a2 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 25055 00a4 012B     		cmp	r3, #1
 25056 00a6 28D1     		bne	.L30
 367:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 368:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 369:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 25057              		.loc 1 369 0
 25058 00a8 3B4B     		ldr	r3, .L36
 25059 00aa 3B4A     		ldr	r2, .L36
 25060 00ac D2F80C12 		ldr	r1, [r2, #524]
 25061 00b0 FA68     		ldr	r2, [r7, #12]
 25062 00b2 41EA0202 		orr	r2, r1, r2
 25063 00b6 C3F80C22 		str	r2, [r3, #524]
 370:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 25064              		.loc 1 371 0
 25065 00ba 374B     		ldr	r3, .L36
 25066 00bc 7A68     		ldr	r2, [r7, #4]
 25067 00be 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 25068              		.loc 1 372 0
 25069 00c0 7968     		ldr	r1, [r7, #4]
 25070 00c2 0988     		ldrh	r1, [r1, #0]
 25071 00c4 4FEA0140 		lsl	r0, r1, #16
 373:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 25072              		.loc 1 373 0
 25073 00c8 7968     		ldr	r1, [r7, #4]
 25074 00ca 4988     		ldrh	r1, [r1, #2]
 372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 25075              		.loc 1 372 0
 25076 00cc 40EA0101 		orr	r1, r0, r1
 371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 25077              		.loc 1 371 0
 25078 00d0 02F14802 		add	r2, r2, #72
 25079 00d4 43F83210 		str	r1, [r3, r2, lsl #3]
 374:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 25080              		.loc 1 375 0
 25081 00d8 2F49     		ldr	r1, .L36
 25082 00da 7B68     		ldr	r3, [r7, #4]
 25083 00dc 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 25084              		.loc 1 376 0
 25085 00de 7A68     		ldr	r2, [r7, #4]
 25086 00e0 9288     		ldrh	r2, [r2, #4]
 25087 00e2 4FEA0240 		lsl	r0, r2, #16
 377:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 25088              		.loc 1 377 0
 25089 00e6 7A68     		ldr	r2, [r7, #4]
 25090 00e8 D288     		ldrh	r2, [r2, #6]
 376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 25091              		.loc 1 376 0
 25092 00ea 40EA0202 		orr	r2, r0, r2
 375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 25093              		.loc 1 375 0
 25094 00ee 03F14803 		add	r3, r3, #72
 25095 00f2 4FEAC303 		lsl	r3, r3, #3
 25096 00f6 CB18     		adds	r3, r1, r3
 25097 00f8 5A60     		str	r2, [r3, #4]
 25098              	.L30:
 378:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 379:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 380:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 381:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 25099              		.loc 1 381 0
 25100 00fa 7B68     		ldr	r3, [r7, #4]
 25101 00fc DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 25102 00fe 002B     		cmp	r3, #0
 25103 0100 0BD1     		bne	.L31
 382:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 383:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 384:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 25104              		.loc 1 384 0
 25105 0102 254B     		ldr	r3, .L36
 25106 0104 244A     		ldr	r2, .L36
 25107 0106 D2F80412 		ldr	r1, [r2, #516]
 25108 010a FA68     		ldr	r2, [r7, #12]
 25109 010c 6FEA0202 		mvn	r2, r2
 25110 0110 01EA0202 		and	r2, r1, r2
 25111 0114 C3F80422 		str	r2, [r3, #516]
 25112 0118 08E0     		b	.L32
 25113              	.L31:
 385:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 386:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 389:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 25114              		.loc 1 389 0
 25115 011a 1F4B     		ldr	r3, .L36
 25116 011c 1E4A     		ldr	r2, .L36
 25117 011e D2F80412 		ldr	r1, [r2, #516]
 25118 0122 FA68     		ldr	r2, [r7, #12]
 25119 0124 41EA0202 		orr	r2, r1, r2
 25120 0128 C3F80422 		str	r2, [r3, #516]
 25121              	.L32:
 390:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 392:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 393:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 25122              		.loc 1 393 0
 25123 012c 7B68     		ldr	r3, [r7, #4]
 25124 012e 1B89     		ldrh	r3, [r3, #8]
 25125 0130 002B     		cmp	r3, #0
 25126 0132 0AD1     		bne	.L33
 394:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 395:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 25127              		.loc 1 396 0
 25128 0134 184B     		ldr	r3, .L36
 25129 0136 184A     		ldr	r2, .L36
 25130 0138 D2F81412 		ldr	r1, [r2, #532]
 25131 013c FA68     		ldr	r2, [r7, #12]
 25132 013e 6FEA0202 		mvn	r2, r2
 25133 0142 01EA0202 		and	r2, r1, r2
 25134 0146 C3F81422 		str	r2, [r3, #532]
 25135              	.L33:
 397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 398:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 399:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 25136              		.loc 1 399 0
 25137 014a 7B68     		ldr	r3, [r7, #4]
 25138 014c 1B89     		ldrh	r3, [r3, #8]
 25139 014e 012B     		cmp	r3, #1
 25140 0150 08D1     		bne	.L34
 400:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 25141              		.loc 1 402 0
 25142 0152 114B     		ldr	r3, .L36
 25143 0154 104A     		ldr	r2, .L36
 25144 0156 D2F81412 		ldr	r1, [r2, #532]
 25145 015a FA68     		ldr	r2, [r7, #12]
 25146 015c 41EA0202 		orr	r2, r1, r2
 25147 0160 C3F81422 		str	r2, [r3, #532]
 25148              	.L34:
 403:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 405:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 406:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 25149              		.loc 1 406 0
 25150 0164 7B68     		ldr	r3, [r7, #4]
 25151 0166 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 25152 0168 012B     		cmp	r3, #1
 25153 016a 08D1     		bne	.L35
 407:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 408:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 25154              		.loc 1 408 0
 25155 016c 0A4B     		ldr	r3, .L36
 25156 016e 0A4A     		ldr	r2, .L36
 25157 0170 D2F81C12 		ldr	r1, [r2, #540]
 25158 0174 FA68     		ldr	r2, [r7, #12]
 25159 0176 41EA0202 		orr	r2, r1, r2
 25160 017a C3F81C22 		str	r2, [r3, #540]
 25161              	.L35:
 409:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 411:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 25162              		.loc 1 412 0
 25163 017e 064B     		ldr	r3, .L36
 25164 0180 054A     		ldr	r2, .L36
 25165 0182 D2F80022 		ldr	r2, [r2, #512]
 25166 0186 22F00102 		bic	r2, r2, #1
 25167 018a C3F80022 		str	r2, [r3, #512]
 413:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 25168              		.loc 1 413 0
 25169 018e 07F11407 		add	r7, r7, #20
 25170 0192 BD46     		mov	sp, r7
 25171 0194 80BC     		pop	{r7}
 25172 0196 7047     		bx	lr
 25173              	.L37:
 25174              		.align	2
 25175              	.L36:
 25176 0198 00640040 		.word	1073767424
 25177              		.cfi_endproc
 25178              	.LFE112:
 25180              		.section	.text.CAN_StructInit,"ax",%progbits
 25181              		.align	2
 25182              		.global	CAN_StructInit
 25183              		.thumb
 25184              		.thumb_func
 25186              	CAN_StructInit:
 25187              	.LFB113:
 414:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 415:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 416:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 419:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 420:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 25188              		.loc 1 421 0
 25189              		.cfi_startproc
 25190              		@ args = 0, pretend = 0, frame = 8
 25191              		@ frame_needed = 1, uses_anonymous_args = 0
 25192              		@ link register save eliminated.
 25193 0000 80B4     		push	{r7}
 25194              	.LCFI9:
 25195              		.cfi_def_cfa_offset 4
 25196 0002 83B0     		sub	sp, sp, #12
 25197              	.LCFI10:
 25198              		.cfi_def_cfa_offset 16
 25199 0004 00AF     		add	r7, sp, #0
 25200              		.cfi_offset 7, -4
 25201              	.LCFI11:
 25202              		.cfi_def_cfa_register 7
 25203 0006 7860     		str	r0, [r7, #4]
 422:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 423:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 425:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 25204              		.loc 1 425 0
 25205 0008 7B68     		ldr	r3, [r7, #4]
 25206 000a 4FF00002 		mov	r2, #0
 25207 000e 9A71     		strb	r2, [r3, #6]
 426:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 427:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 428:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 25208              		.loc 1 428 0
 25209 0010 7B68     		ldr	r3, [r7, #4]
 25210 0012 4FF00002 		mov	r2, #0
 25211 0016 DA71     		strb	r2, [r3, #7]
 429:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 25212              		.loc 1 431 0
 25213 0018 7B68     		ldr	r3, [r7, #4]
 25214 001a 4FF00002 		mov	r2, #0
 25215 001e 1A72     		strb	r2, [r3, #8]
 432:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 434:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 25216              		.loc 1 434 0
 25217 0020 7B68     		ldr	r3, [r7, #4]
 25218 0022 4FF00002 		mov	r2, #0
 25219 0026 5A72     		strb	r2, [r3, #9]
 435:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 25220              		.loc 1 437 0
 25221 0028 7B68     		ldr	r3, [r7, #4]
 25222 002a 4FF00002 		mov	r2, #0
 25223 002e 9A72     		strb	r2, [r3, #10]
 438:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 25224              		.loc 1 440 0
 25225 0030 7B68     		ldr	r3, [r7, #4]
 25226 0032 4FF00002 		mov	r2, #0
 25227 0036 DA72     		strb	r2, [r3, #11]
 441:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 443:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 25228              		.loc 1 443 0
 25229 0038 7B68     		ldr	r3, [r7, #4]
 25230 003a 4FF00002 		mov	r2, #0
 25231 003e 9A70     		strb	r2, [r3, #2]
 444:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 446:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 25232              		.loc 1 446 0
 25233 0040 7B68     		ldr	r3, [r7, #4]
 25234 0042 4FF00002 		mov	r2, #0
 25235 0046 DA70     		strb	r2, [r3, #3]
 447:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 25236              		.loc 1 449 0
 25237 0048 7B68     		ldr	r3, [r7, #4]
 25238 004a 4FF00302 		mov	r2, #3
 25239 004e 1A71     		strb	r2, [r3, #4]
 450:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 25240              		.loc 1 452 0
 25241 0050 7B68     		ldr	r3, [r7, #4]
 25242 0052 4FF00202 		mov	r2, #2
 25243 0056 5A71     		strb	r2, [r3, #5]
 453:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 25244              		.loc 1 455 0
 25245 0058 7B68     		ldr	r3, [r7, #4]
 25246 005a 4FF00102 		mov	r2, #1
 25247 005e 1A80     		strh	r2, [r3, #0]	@ movhi
 456:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 25248              		.loc 1 456 0
 25249 0060 07F10C07 		add	r7, r7, #12
 25250 0064 BD46     		mov	sp, r7
 25251 0066 80BC     		pop	{r7}
 25252 0068 7047     		bx	lr
 25253              		.cfi_endproc
 25254              	.LFE113:
 25256 006a 00BF     		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 25257              		.align	2
 25258              		.global	CAN_SlaveStartBank
 25259              		.thumb
 25260              		.thumb_func
 25262              	CAN_SlaveStartBank:
 25263              	.LFB114:
 457:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 458:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 459:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 462:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 463:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 25264              		.loc 1 464 0
 25265              		.cfi_startproc
 25266              		@ args = 0, pretend = 0, frame = 8
 25267              		@ frame_needed = 1, uses_anonymous_args = 0
 25268              		@ link register save eliminated.
 25269 0000 80B4     		push	{r7}
 25270              	.LCFI12:
 25271              		.cfi_def_cfa_offset 4
 25272 0002 83B0     		sub	sp, sp, #12
 25273              	.LCFI13:
 25274              		.cfi_def_cfa_offset 16
 25275 0004 00AF     		add	r7, sp, #0
 25276              		.cfi_offset 7, -4
 25277              	.LCFI14:
 25278              		.cfi_def_cfa_register 7
 25279 0006 0346     		mov	r3, r0
 25280 0008 FB71     		strb	r3, [r7, #7]
 465:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 466:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 25281              		.loc 1 469 0
 25282 000a 154B     		ldr	r3, .L40
 25283 000c 144A     		ldr	r2, .L40
 25284 000e D2F80022 		ldr	r2, [r2, #512]
 25285 0012 42F00102 		orr	r2, r2, #1
 25286 0016 C3F80022 		str	r2, [r3, #512]
 470:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 471:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 472:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 25287              		.loc 1 472 0
 25288 001a 114A     		ldr	r2, .L40
 25289 001c 104B     		ldr	r3, .L40
 25290 001e D3F80032 		ldr	r3, [r3, #512]
 25291 0022 23F47C53 		bic	r3, r3, #16128
 25292 0026 23F00E03 		bic	r3, r3, #14
 25293 002a C2F80032 		str	r3, [r2, #512]
 473:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 25294              		.loc 1 473 0
 25295 002e 0C4B     		ldr	r3, .L40
 25296 0030 0B4A     		ldr	r2, .L40
 25297 0032 D2F80012 		ldr	r1, [r2, #512]
 25298 0036 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25299 0038 4FEA0222 		lsl	r2, r2, #8
 25300 003c 41EA0202 		orr	r2, r1, r2
 25301 0040 C3F80022 		str	r2, [r3, #512]
 474:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 25302              		.loc 1 476 0
 25303 0044 064B     		ldr	r3, .L40
 25304 0046 064A     		ldr	r2, .L40
 25305 0048 D2F80022 		ldr	r2, [r2, #512]
 25306 004c 22F00102 		bic	r2, r2, #1
 25307 0050 C3F80022 		str	r2, [r3, #512]
 477:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 25308              		.loc 1 477 0
 25309 0054 07F10C07 		add	r7, r7, #12
 25310 0058 BD46     		mov	sp, r7
 25311 005a 80BC     		pop	{r7}
 25312 005c 7047     		bx	lr
 25313              	.L41:
 25314 005e 00BF     		.align	2
 25315              	.L40:
 25316 0060 00640040 		.word	1073767424
 25317              		.cfi_endproc
 25318              	.LFE114:
 25320              		.section	.text.CAN_DBGFreeze,"ax",%progbits
 25321              		.align	2
 25322              		.global	CAN_DBGFreeze
 25323              		.thumb
 25324              		.thumb_func
 25326              	CAN_DBGFreeze:
 25327              	.LFB115:
 478:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 479:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 480:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 487:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 488:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 25328              		.loc 1 489 0
 25329              		.cfi_startproc
 25330              		@ args = 0, pretend = 0, frame = 8
 25331              		@ frame_needed = 1, uses_anonymous_args = 0
 25332              		@ link register save eliminated.
 25333 0000 80B4     		push	{r7}
 25334              	.LCFI15:
 25335              		.cfi_def_cfa_offset 4
 25336 0002 83B0     		sub	sp, sp, #12
 25337              	.LCFI16:
 25338              		.cfi_def_cfa_offset 16
 25339 0004 00AF     		add	r7, sp, #0
 25340              		.cfi_offset 7, -4
 25341              	.LCFI17:
 25342              		.cfi_def_cfa_register 7
 25343 0006 7860     		str	r0, [r7, #4]
 25344 0008 0B46     		mov	r3, r1
 25345 000a FB70     		strb	r3, [r7, #3]
 490:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 491:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 25346              		.loc 1 494 0
 25347 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25348 000e 002B     		cmp	r3, #0
 25349 0010 06D0     		beq	.L43
 495:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 496:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 497:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 25350              		.loc 1 497 0
 25351 0012 7B68     		ldr	r3, [r7, #4]
 25352 0014 1B68     		ldr	r3, [r3, #0]
 25353 0016 43F48032 		orr	r2, r3, #65536
 25354 001a 7B68     		ldr	r3, [r7, #4]
 25355 001c 1A60     		str	r2, [r3, #0]
 25356 001e 05E0     		b	.L42
 25357              	.L43:
 498:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 499:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 500:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 502:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 25358              		.loc 1 502 0
 25359 0020 7B68     		ldr	r3, [r7, #4]
 25360 0022 1B68     		ldr	r3, [r3, #0]
 25361 0024 23F48032 		bic	r2, r3, #65536
 25362 0028 7B68     		ldr	r3, [r7, #4]
 25363 002a 1A60     		str	r2, [r3, #0]
 25364              	.L42:
 503:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 25365              		.loc 1 504 0
 25366 002c 07F10C07 		add	r7, r7, #12
 25367 0030 BD46     		mov	sp, r7
 25368 0032 80BC     		pop	{r7}
 25369 0034 7047     		bx	lr
 25370              		.cfi_endproc
 25371              	.LFE115:
 25373 0036 00BF     		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 25374              		.align	2
 25375              		.global	CAN_TTComModeCmd
 25376              		.thumb
 25377              		.thumb_func
 25379              	CAN_TTComModeCmd:
 25380              	.LFB116:
 505:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 506:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 507:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 508:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 511:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 516:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 517:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 518:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 25381              		.loc 1 519 0
 25382              		.cfi_startproc
 25383              		@ args = 0, pretend = 0, frame = 8
 25384              		@ frame_needed = 1, uses_anonymous_args = 0
 25385              		@ link register save eliminated.
 25386 0000 80B4     		push	{r7}
 25387              	.LCFI18:
 25388              		.cfi_def_cfa_offset 4
 25389 0002 83B0     		sub	sp, sp, #12
 25390              	.LCFI19:
 25391              		.cfi_def_cfa_offset 16
 25392 0004 00AF     		add	r7, sp, #0
 25393              		.cfi_offset 7, -4
 25394              	.LCFI20:
 25395              		.cfi_def_cfa_register 7
 25396 0006 7860     		str	r0, [r7, #4]
 25397 0008 0B46     		mov	r3, r1
 25398 000a FB70     		strb	r3, [r7, #3]
 520:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 521:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 25399              		.loc 1 523 0
 25400 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25401 000e 002B     		cmp	r3, #0
 25402 0010 1ED0     		beq	.L46
 524:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 525:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 526:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 25403              		.loc 1 526 0
 25404 0012 7B68     		ldr	r3, [r7, #4]
 25405 0014 1B68     		ldr	r3, [r3, #0]
 25406 0016 43F08002 		orr	r2, r3, #128
 25407 001a 7B68     		ldr	r3, [r7, #4]
 25408 001c 1A60     		str	r2, [r3, #0]
 527:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 528:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 529:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 25409              		.loc 1 529 0
 25410 001e 7B68     		ldr	r3, [r7, #4]
 25411 0020 D3F88431 		ldr	r3, [r3, #388]
 25412 0024 43F48072 		orr	r2, r3, #256
 25413 0028 7B68     		ldr	r3, [r7, #4]
 25414 002a C3F88421 		str	r2, [r3, #388]
 530:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 25415              		.loc 1 530 0
 25416 002e 7B68     		ldr	r3, [r7, #4]
 25417 0030 D3F89431 		ldr	r3, [r3, #404]
 25418 0034 43F48072 		orr	r2, r3, #256
 25419 0038 7B68     		ldr	r3, [r7, #4]
 25420 003a C3F89421 		str	r2, [r3, #404]
 531:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 25421              		.loc 1 531 0
 25422 003e 7B68     		ldr	r3, [r7, #4]
 25423 0040 D3F8A431 		ldr	r3, [r3, #420]
 25424 0044 43F48072 		orr	r2, r3, #256
 25425 0048 7B68     		ldr	r3, [r7, #4]
 25426 004a C3F8A421 		str	r2, [r3, #420]
 25427 004e 1DE0     		b	.L45
 25428              	.L46:
 532:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 533:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 534:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 535:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 536:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 25429              		.loc 1 536 0
 25430 0050 7B68     		ldr	r3, [r7, #4]
 25431 0052 1B68     		ldr	r3, [r3, #0]
 25432 0054 23F08002 		bic	r2, r3, #128
 25433 0058 7B68     		ldr	r3, [r7, #4]
 25434 005a 1A60     		str	r2, [r3, #0]
 537:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 538:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 539:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 25435              		.loc 1 539 0
 25436 005c 7B68     		ldr	r3, [r7, #4]
 25437 005e D3F88431 		ldr	r3, [r3, #388]
 25438 0062 23F48072 		bic	r2, r3, #256
 25439 0066 7B68     		ldr	r3, [r7, #4]
 25440 0068 C3F88421 		str	r2, [r3, #388]
 540:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 25441              		.loc 1 540 0
 25442 006c 7B68     		ldr	r3, [r7, #4]
 25443 006e D3F89431 		ldr	r3, [r3, #404]
 25444 0072 23F48072 		bic	r2, r3, #256
 25445 0076 7B68     		ldr	r3, [r7, #4]
 25446 0078 C3F89421 		str	r2, [r3, #404]
 541:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 25447              		.loc 1 541 0
 25448 007c 7B68     		ldr	r3, [r7, #4]
 25449 007e D3F8A431 		ldr	r3, [r3, #420]
 25450 0082 23F48072 		bic	r2, r3, #256
 25451 0086 7B68     		ldr	r3, [r7, #4]
 25452 0088 C3F8A421 		str	r2, [r3, #420]
 25453              	.L45:
 542:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 543:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 25454              		.loc 1 543 0
 25455 008c 07F10C07 		add	r7, r7, #12
 25456 0090 BD46     		mov	sp, r7
 25457 0092 80BC     		pop	{r7}
 25458 0094 7047     		bx	lr
 25459              		.cfi_endproc
 25460              	.LFE116:
 25462 0096 00BF     		.section	.text.CAN_Transmit,"ax",%progbits
 25463              		.align	2
 25464              		.global	CAN_Transmit
 25465              		.thumb
 25466              		.thumb_func
 25468              	CAN_Transmit:
 25469              	.LFB117:
 544:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 545:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 546:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 547:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 548:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 549:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 552:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 553:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 554:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 555:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 556:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 557:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 559:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 560:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 561:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 562:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 563:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 564:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 565:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 566:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 572:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 25470              		.loc 1 573 0
 25471              		.cfi_startproc
 25472              		@ args = 0, pretend = 0, frame = 16
 25473              		@ frame_needed = 1, uses_anonymous_args = 0
 25474              		@ link register save eliminated.
 25475 0000 80B4     		push	{r7}
 25476              	.LCFI21:
 25477              		.cfi_def_cfa_offset 4
 25478 0002 85B0     		sub	sp, sp, #20
 25479              	.LCFI22:
 25480              		.cfi_def_cfa_offset 24
 25481 0004 00AF     		add	r7, sp, #0
 25482              		.cfi_offset 7, -4
 25483              	.LCFI23:
 25484              		.cfi_def_cfa_register 7
 25485 0006 7860     		str	r0, [r7, #4]
 25486 0008 3960     		str	r1, [r7, #0]
 574:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 25487              		.loc 1 574 0
 25488 000a 4FF00003 		mov	r3, #0
 25489 000e FB73     		strb	r3, [r7, #15]
 575:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 576:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 581:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 582:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 25490              		.loc 1 582 0
 25491 0010 7B68     		ldr	r3, [r7, #4]
 25492 0012 9B68     		ldr	r3, [r3, #8]
 25493 0014 03F08063 		and	r3, r3, #67108864
 25494 0018 002B     		cmp	r3, #0
 25495 001a 03D0     		beq	.L49
 583:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 584:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 25496              		.loc 1 584 0
 25497 001c 4FF00003 		mov	r3, #0
 25498 0020 FB73     		strb	r3, [r7, #15]
 25499 0022 16E0     		b	.L50
 25500              	.L49:
 585:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 586:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 25501              		.loc 1 586 0
 25502 0024 7B68     		ldr	r3, [r7, #4]
 25503 0026 9B68     		ldr	r3, [r3, #8]
 25504 0028 03F00063 		and	r3, r3, #134217728
 25505 002c 002B     		cmp	r3, #0
 25506 002e 03D0     		beq	.L51
 587:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 588:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 25507              		.loc 1 588 0
 25508 0030 4FF00103 		mov	r3, #1
 25509 0034 FB73     		strb	r3, [r7, #15]
 25510 0036 0CE0     		b	.L50
 25511              	.L51:
 589:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 590:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 25512              		.loc 1 590 0
 25513 0038 7B68     		ldr	r3, [r7, #4]
 25514 003a 9B68     		ldr	r3, [r3, #8]
 25515 003c 03F08053 		and	r3, r3, #268435456
 25516 0040 002B     		cmp	r3, #0
 25517 0042 03D0     		beq	.L52
 591:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 592:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 25518              		.loc 1 592 0
 25519 0044 4FF00203 		mov	r3, #2
 25520 0048 FB73     		strb	r3, [r7, #15]
 25521 004a 02E0     		b	.L50
 25522              	.L52:
 593:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 594:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 595:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 596:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 25523              		.loc 1 596 0
 25524 004c 4FF00403 		mov	r3, #4
 25525 0050 FB73     		strb	r3, [r7, #15]
 25526              	.L50:
 597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 598:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 599:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 25527              		.loc 1 599 0
 25528 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25529 0054 042B     		cmp	r3, #4
 25530 0056 00F0C180 		beq	.L53
 600:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 602:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 25531              		.loc 1 602 0
 25532 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25533 005c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25534 005e 7968     		ldr	r1, [r7, #4]
 25535 0060 02F11802 		add	r2, r2, #24
 25536 0064 4FEA0212 		lsl	r2, r2, #4
 25537 0068 8A18     		adds	r2, r1, r2
 25538 006a 1268     		ldr	r2, [r2, #0]
 25539 006c 02F00102 		and	r2, r2, #1
 25540 0070 7968     		ldr	r1, [r7, #4]
 25541 0072 03F11803 		add	r3, r3, #24
 25542 0076 4FEA0313 		lsl	r3, r3, #4
 25543 007a CB18     		adds	r3, r1, r3
 25544 007c 1A60     		str	r2, [r3, #0]
 603:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 25545              		.loc 1 603 0
 25546 007e 3B68     		ldr	r3, [r7, #0]
 25547 0080 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 25548 0082 002B     		cmp	r3, #0
 25549 0084 1AD1     		bne	.L54
 604:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 605:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 25550              		.loc 1 606 0
 25551 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25552 0088 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25553 008a 7968     		ldr	r1, [r7, #4]
 25554 008c 02F11802 		add	r2, r2, #24
 25555 0090 4FEA0212 		lsl	r2, r2, #4
 25556 0094 8A18     		adds	r2, r1, r2
 25557 0096 1168     		ldr	r1, [r2, #0]
 25558 0098 3A68     		ldr	r2, [r7, #0]
 25559 009a 1268     		ldr	r2, [r2, #0]
 25560 009c 4FEA4250 		lsl	r0, r2, #21
 607:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 25561              		.loc 1 607 0
 25562 00a0 3A68     		ldr	r2, [r7, #0]
 25563 00a2 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 606:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 25564              		.loc 1 606 0
 25565 00a4 40EA0202 		orr	r2, r0, r2
 25566 00a8 41EA0202 		orr	r2, r1, r2
 25567 00ac 7968     		ldr	r1, [r7, #4]
 25568 00ae 03F11803 		add	r3, r3, #24
 25569 00b2 4FEA0313 		lsl	r3, r3, #4
 25570 00b6 CB18     		adds	r3, r1, r3
 25571 00b8 1A60     		str	r2, [r3, #0]
 25572 00ba 1CE0     		b	.L55
 25573              	.L54:
 608:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 609:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 610:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 25574              		.loc 1 612 0
 25575 00bc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25576 00be FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25577 00c0 7968     		ldr	r1, [r7, #4]
 25578 00c2 02F11802 		add	r2, r2, #24
 25579 00c6 4FEA0212 		lsl	r2, r2, #4
 25580 00ca 8A18     		adds	r2, r1, r2
 25581 00cc 1168     		ldr	r1, [r2, #0]
 25582 00ce 3A68     		ldr	r2, [r7, #0]
 25583 00d0 5268     		ldr	r2, [r2, #4]
 25584 00d2 4FEAC200 		lsl	r0, r2, #3
 613:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 25585              		.loc 1 613 0
 25586 00d6 3A68     		ldr	r2, [r7, #0]
 25587 00d8 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 612:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 25588              		.loc 1 612 0
 25589 00da 1043     		orrs	r0, r0, r2
 614:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 25590              		.loc 1 614 0
 25591 00dc 3A68     		ldr	r2, [r7, #0]
 25592 00de 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 613:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 25593              		.loc 1 613 0
 25594 00e0 40EA0202 		orr	r2, r0, r2
 612:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 25595              		.loc 1 612 0
 25596 00e4 41EA0202 		orr	r2, r1, r2
 25597 00e8 7968     		ldr	r1, [r7, #4]
 25598 00ea 03F11803 		add	r3, r3, #24
 25599 00ee 4FEA0313 		lsl	r3, r3, #4
 25600 00f2 CB18     		adds	r3, r1, r3
 25601 00f4 1A60     		str	r2, [r3, #0]
 25602              	.L55:
 615:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 616:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 617:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 618:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 25603              		.loc 1 618 0
 25604 00f6 3B68     		ldr	r3, [r7, #0]
 25605 00f8 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 25606 00fa 03F00F03 		and	r3, r3, #15
 25607 00fe DAB2     		uxtb	r2, r3
 25608 0100 3B68     		ldr	r3, [r7, #0]
 25609 0102 9A72     		strb	r2, [r3, #10]
 619:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 25610              		.loc 1 619 0
 25611 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25612 0106 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25613 0108 7968     		ldr	r1, [r7, #4]
 25614 010a 02F11802 		add	r2, r2, #24
 25615 010e 4FEA0212 		lsl	r2, r2, #4
 25616 0112 8A18     		adds	r2, r1, r2
 25617 0114 5268     		ldr	r2, [r2, #4]
 25618 0116 22F00F02 		bic	r2, r2, #15
 25619 011a 7968     		ldr	r1, [r7, #4]
 25620 011c 03F11803 		add	r3, r3, #24
 25621 0120 4FEA0313 		lsl	r3, r3, #4
 25622 0124 CB18     		adds	r3, r1, r3
 25623 0126 5A60     		str	r2, [r3, #4]
 620:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 25624              		.loc 1 620 0
 25625 0128 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25626 012a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25627 012c 7968     		ldr	r1, [r7, #4]
 25628 012e 02F11802 		add	r2, r2, #24
 25629 0132 4FEA0212 		lsl	r2, r2, #4
 25630 0136 8A18     		adds	r2, r1, r2
 25631 0138 5168     		ldr	r1, [r2, #4]
 25632 013a 3A68     		ldr	r2, [r7, #0]
 25633 013c 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 25634 013e 41EA0202 		orr	r2, r1, r2
 25635 0142 7968     		ldr	r1, [r7, #4]
 25636 0144 03F11803 		add	r3, r3, #24
 25637 0148 4FEA0313 		lsl	r3, r3, #4
 25638 014c CB18     		adds	r3, r1, r3
 25639 014e 5A60     		str	r2, [r3, #4]
 621:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 622:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 623:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 25640              		.loc 1 623 0
 25641 0150 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25642 0152 3A68     		ldr	r2, [r7, #0]
 25643 0154 927B     		ldrb	r2, [r2, #14]	@ zero_extendqisi2
 25644 0156 4FEA0261 		lsl	r1, r2, #24
 624:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 25645              		.loc 1 624 0
 25646 015a 3A68     		ldr	r2, [r7, #0]
 25647 015c 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 25648 015e 4FEA0242 		lsl	r2, r2, #16
 623:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 25649              		.loc 1 623 0
 25650 0162 1143     		orrs	r1, r1, r2
 625:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 25651              		.loc 1 625 0
 25652 0164 3A68     		ldr	r2, [r7, #0]
 25653 0166 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 25654 0168 4FEA0222 		lsl	r2, r2, #8
 624:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 25655              		.loc 1 624 0
 25656 016c 1143     		orrs	r1, r1, r2
 626:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 25657              		.loc 1 626 0
 25658 016e 3A68     		ldr	r2, [r7, #0]
 25659 0170 D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 625:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 25660              		.loc 1 625 0
 25661 0172 41EA0202 		orr	r2, r1, r2
 623:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 25662              		.loc 1 623 0
 25663 0176 7968     		ldr	r1, [r7, #4]
 25664 0178 4FEA0313 		lsl	r3, r3, #4
 25665 017c CB18     		adds	r3, r1, r3
 25666 017e 03F5C473 		add	r3, r3, #392
 25667 0182 1A60     		str	r2, [r3, #0]
 627:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 25668              		.loc 1 627 0
 25669 0184 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25670 0186 3A68     		ldr	r2, [r7, #0]
 25671 0188 927C     		ldrb	r2, [r2, #18]	@ zero_extendqisi2
 25672 018a 4FEA0261 		lsl	r1, r2, #24
 628:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 25673              		.loc 1 628 0
 25674 018e 3A68     		ldr	r2, [r7, #0]
 25675 0190 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 25676 0192 4FEA0242 		lsl	r2, r2, #16
 627:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 25677              		.loc 1 627 0
 25678 0196 1143     		orrs	r1, r1, r2
 629:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 25679              		.loc 1 629 0
 25680 0198 3A68     		ldr	r2, [r7, #0]
 25681 019a 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 25682 019c 4FEA0222 		lsl	r2, r2, #8
 628:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 25683              		.loc 1 628 0
 25684 01a0 1143     		orrs	r1, r1, r2
 630:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 25685              		.loc 1 630 0
 25686 01a2 3A68     		ldr	r2, [r7, #0]
 25687 01a4 D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
 629:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 25688              		.loc 1 629 0
 25689 01a6 41EA0202 		orr	r2, r1, r2
 627:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 25690              		.loc 1 627 0
 25691 01aa 7968     		ldr	r1, [r7, #4]
 25692 01ac 4FEA0313 		lsl	r3, r3, #4
 25693 01b0 CB18     		adds	r3, r1, r3
 25694 01b2 03F5C473 		add	r3, r3, #392
 25695 01b6 5A60     		str	r2, [r3, #4]
 631:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 632:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 25696              		.loc 1 632 0
 25697 01b8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25698 01ba FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 25699 01bc 7968     		ldr	r1, [r7, #4]
 25700 01be 02F11802 		add	r2, r2, #24
 25701 01c2 4FEA0212 		lsl	r2, r2, #4
 25702 01c6 8A18     		adds	r2, r1, r2
 25703 01c8 1268     		ldr	r2, [r2, #0]
 25704 01ca 42F00102 		orr	r2, r2, #1
 25705 01ce 7968     		ldr	r1, [r7, #4]
 25706 01d0 03F11803 		add	r3, r3, #24
 25707 01d4 4FEA0313 		lsl	r3, r3, #4
 25708 01d8 CB18     		adds	r3, r1, r3
 25709 01da 1A60     		str	r2, [r3, #0]
 25710              	.L53:
 633:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 634:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 25711              		.loc 1 634 0
 25712 01dc FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 25713              		.loc 1 635 0
 25714 01de 1846     		mov	r0, r3
 25715 01e0 07F11407 		add	r7, r7, #20
 25716 01e4 BD46     		mov	sp, r7
 25717 01e6 80BC     		pop	{r7}
 25718 01e8 7047     		bx	lr
 25719              		.cfi_endproc
 25720              	.LFE117:
 25722 01ea 00BF     		.section	.text.CAN_TransmitStatus,"ax",%progbits
 25723              		.align	2
 25724              		.global	CAN_TransmitStatus
 25725              		.thumb
 25726              		.thumb_func
 25728              	CAN_TransmitStatus:
 25729              	.LFB118:
 636:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 637:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 638:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 644:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 25730              		.loc 1 645 0
 25731              		.cfi_startproc
 25732              		@ args = 0, pretend = 0, frame = 16
 25733              		@ frame_needed = 1, uses_anonymous_args = 0
 25734              		@ link register save eliminated.
 25735 0000 80B4     		push	{r7}
 25736              	.LCFI24:
 25737              		.cfi_def_cfa_offset 4
 25738 0002 85B0     		sub	sp, sp, #20
 25739              	.LCFI25:
 25740              		.cfi_def_cfa_offset 24
 25741 0004 00AF     		add	r7, sp, #0
 25742              		.cfi_offset 7, -4
 25743              	.LCFI26:
 25744              		.cfi_def_cfa_register 7
 25745 0006 7860     		str	r0, [r7, #4]
 25746 0008 0B46     		mov	r3, r1
 25747 000a FB70     		strb	r3, [r7, #3]
 646:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 25748              		.loc 1 646 0
 25749 000c 4FF00003 		mov	r3, #0
 25750 0010 FB60     		str	r3, [r7, #12]
 647:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 648:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 649:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 652:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 25751              		.loc 1 652 0
 25752 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25753 0014 012B     		cmp	r3, #1
 25754 0016 0AD0     		beq	.L59
 25755 0018 022B     		cmp	r3, #2
 25756 001a 0FD0     		beq	.L60
 25757 001c 002B     		cmp	r3, #0
 25758 001e 14D1     		bne	.L72
 25759              	.L58:
 653:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 654:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 25760              		.loc 1 655 0
 25761 0020 7B68     		ldr	r3, [r7, #4]
 25762 0022 9A68     		ldr	r2, [r3, #8]
 25763 0024 2C4B     		ldr	r3, .L73
 25764 0026 02EA0303 		and	r3, r2, r3
 25765 002a FB60     		str	r3, [r7, #12]
 656:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25766              		.loc 1 656 0
 25767 002c 11E0     		b	.L61
 25768              	.L59:
 657:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 25769              		.loc 1 658 0
 25770 002e 7B68     		ldr	r3, [r7, #4]
 25771 0030 9A68     		ldr	r2, [r3, #8]
 25772 0032 2A4B     		ldr	r3, .L73+4
 25773 0034 02EA0303 		and	r3, r2, r3
 25774 0038 FB60     		str	r3, [r7, #12]
 659:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25775              		.loc 1 659 0
 25776 003a 0AE0     		b	.L61
 25777              	.L60:
 660:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 25778              		.loc 1 661 0
 25779 003c 7B68     		ldr	r3, [r7, #4]
 25780 003e 9A68     		ldr	r2, [r3, #8]
 25781 0040 274B     		ldr	r3, .L73+8
 25782 0042 02EA0303 		and	r3, r2, r3
 25783 0046 FB60     		str	r3, [r7, #12]
 662:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25784              		.loc 1 662 0
 25785 0048 03E0     		b	.L61
 25786              	.L72:
 663:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 664:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 25787              		.loc 1 664 0
 25788 004a 4FF00003 		mov	r3, #0
 25789 004e FB60     		str	r3, [r7, #12]
 665:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25790              		.loc 1 665 0
 25791 0050 00BF     		nop
 25792              	.L61:
 666:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 667:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 25793              		.loc 1 667 0
 25794 0052 FB68     		ldr	r3, [r7, #12]
 25795 0054 234A     		ldr	r2, .L73+12
 25796 0056 9342     		cmp	r3, r2
 25797 0058 1DD0     		beq	.L66
 25798 005a 224A     		ldr	r2, .L73+12
 25799 005c 9342     		cmp	r3, r2
 25800 005e 08D8     		bhi	.L70
 25801 0060 214A     		ldr	r2, .L73+16
 25802 0062 9342     		cmp	r3, r2
 25803 0064 13D0     		beq	.L64
 25804 0066 1C4A     		ldr	r2, .L73
 25805 0068 9342     		cmp	r3, r2
 25806 006a 1CD0     		beq	.L65
 25807 006c 002B     		cmp	r3, #0
 25808 006e 0AD0     		beq	.L63
 25809 0070 25E0     		b	.L62
 25810              	.L70:
 25811 0072 1E4A     		ldr	r2, .L73+20
 25812 0074 9342     		cmp	r3, r2
 25813 0076 12D0     		beq	.L68
 25814 0078 194A     		ldr	r2, .L73+8
 25815 007a 9342     		cmp	r3, r2
 25816 007c 1BD0     		beq	.L69
 25817 007e 174A     		ldr	r2, .L73+4
 25818 0080 9342     		cmp	r3, r2
 25819 0082 14D0     		beq	.L67
 25820 0084 1BE0     		b	.L62
 25821              	.L63:
 668:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 669:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 670:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 25822              		.loc 1 670 0
 25823 0086 4FF00203 		mov	r3, #2
 25824 008a FB60     		str	r3, [r7, #12]
 671:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25825              		.loc 1 671 0
 25826 008c 1BE0     		b	.L71
 25827              	.L64:
 672:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 673:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 25828              		.loc 1 673 0
 25829 008e 4FF00003 		mov	r3, #0
 25830 0092 FB60     		str	r3, [r7, #12]
 674:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25831              		.loc 1 674 0
 25832 0094 17E0     		b	.L71
 25833              	.L66:
 675:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 25834              		.loc 1 675 0
 25835 0096 4FF00003 		mov	r3, #0
 25836 009a FB60     		str	r3, [r7, #12]
 676:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25837              		.loc 1 676 0
 25838 009c 13E0     		b	.L71
 25839              	.L68:
 677:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 25840              		.loc 1 677 0
 25841 009e 4FF00003 		mov	r3, #0
 25842 00a2 FB60     		str	r3, [r7, #12]
 678:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25843              		.loc 1 678 0
 25844 00a4 0FE0     		b	.L71
 25845              	.L65:
 679:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 680:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 25846              		.loc 1 680 0
 25847 00a6 4FF00103 		mov	r3, #1
 25848 00aa FB60     		str	r3, [r7, #12]
 681:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25849              		.loc 1 681 0
 25850 00ac 0BE0     		b	.L71
 25851              	.L67:
 682:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 25852              		.loc 1 682 0
 25853 00ae 4FF00103 		mov	r3, #1
 25854 00b2 FB60     		str	r3, [r7, #12]
 683:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25855              		.loc 1 683 0
 25856 00b4 07E0     		b	.L71
 25857              	.L69:
 684:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 25858              		.loc 1 684 0
 25859 00b6 4FF00103 		mov	r3, #1
 25860 00ba FB60     		str	r3, [r7, #12]
 685:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25861              		.loc 1 685 0
 25862 00bc 03E0     		b	.L71
 25863              	.L62:
 686:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 25864              		.loc 1 686 0
 25865 00be 4FF00003 		mov	r3, #0
 25866 00c2 FB60     		str	r3, [r7, #12]
 687:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25867              		.loc 1 687 0
 25868 00c4 00BF     		nop
 25869              	.L71:
 688:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 689:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 25870              		.loc 1 689 0
 25871 00c6 FB68     		ldr	r3, [r7, #12]
 25872 00c8 DBB2     		uxtb	r3, r3
 690:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 25873              		.loc 1 690 0
 25874 00ca 1846     		mov	r0, r3
 25875 00cc 07F11407 		add	r7, r7, #20
 25876 00d0 BD46     		mov	sp, r7
 25877 00d2 80BC     		pop	{r7}
 25878 00d4 7047     		bx	lr
 25879              	.L74:
 25880 00d6 00BF     		.align	2
 25881              	.L73:
 25882 00d8 03000004 		.word	67108867
 25883 00dc 00030008 		.word	134218496
 25884 00e0 00000310 		.word	268632064
 25885 00e4 00010008 		.word	134217984
 25886 00e8 01000004 		.word	67108865
 25887 00ec 00000110 		.word	268500992
 25888              		.cfi_endproc
 25889              	.LFE118:
 25891              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 25892              		.align	2
 25893              		.global	CAN_CancelTransmit
 25894              		.thumb
 25895              		.thumb_func
 25897              	CAN_CancelTransmit:
 25898              	.LFB119:
 691:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 692:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 693:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 694:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 697:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 698:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 25899              		.loc 1 699 0
 25900              		.cfi_startproc
 25901              		@ args = 0, pretend = 0, frame = 8
 25902              		@ frame_needed = 1, uses_anonymous_args = 0
 25903              		@ link register save eliminated.
 25904 0000 80B4     		push	{r7}
 25905              	.LCFI27:
 25906              		.cfi_def_cfa_offset 4
 25907 0002 83B0     		sub	sp, sp, #12
 25908              	.LCFI28:
 25909              		.cfi_def_cfa_offset 16
 25910 0004 00AF     		add	r7, sp, #0
 25911              		.cfi_offset 7, -4
 25912              	.LCFI29:
 25913              		.cfi_def_cfa_register 7
 25914 0006 7860     		str	r0, [r7, #4]
 25915 0008 0B46     		mov	r3, r1
 25916 000a FB70     		strb	r3, [r7, #3]
 700:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 701:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 704:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 25917              		.loc 1 704 0
 25918 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 25919 000e 012B     		cmp	r3, #1
 25920 0010 0AD0     		beq	.L78
 25921 0012 022B     		cmp	r3, #2
 25922 0014 0FD0     		beq	.L79
 25923 0016 002B     		cmp	r3, #0
 25924 0018 15D1     		bne	.L81
 25925              	.L77:
 705:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 706:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 25926              		.loc 1 706 0
 25927 001a 7B68     		ldr	r3, [r7, #4]
 25928 001c 9B68     		ldr	r3, [r3, #8]
 25929 001e 43F08002 		orr	r2, r3, #128
 25930 0022 7B68     		ldr	r3, [r7, #4]
 25931 0024 9A60     		str	r2, [r3, #8]
 707:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25932              		.loc 1 707 0
 25933 0026 0FE0     		b	.L75
 25934              	.L78:
 708:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 25935              		.loc 1 708 0
 25936 0028 7B68     		ldr	r3, [r7, #4]
 25937 002a 9B68     		ldr	r3, [r3, #8]
 25938 002c 43F40042 		orr	r2, r3, #32768
 25939 0030 7B68     		ldr	r3, [r7, #4]
 25940 0032 9A60     		str	r2, [r3, #8]
 709:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25941              		.loc 1 709 0
 25942 0034 08E0     		b	.L75
 25943              	.L79:
 710:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 25944              		.loc 1 710 0
 25945 0036 7B68     		ldr	r3, [r7, #4]
 25946 0038 9B68     		ldr	r3, [r3, #8]
 25947 003a 43F40002 		orr	r2, r3, #8388608
 25948 003e 7B68     		ldr	r3, [r7, #4]
 25949 0040 9A60     		str	r2, [r3, #8]
 711:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25950              		.loc 1 711 0
 25951 0042 00BF     		nop
 25952 0044 00E0     		b	.L75
 25953              	.L81:
 712:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 713:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 25954              		.loc 1 713 0
 25955 0046 00BF     		nop
 25956              	.L75:
 714:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 715:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 25957              		.loc 1 715 0
 25958 0048 07F10C07 		add	r7, r7, #12
 25959 004c BD46     		mov	sp, r7
 25960 004e 80BC     		pop	{r7}
 25961 0050 7047     		bx	lr
 25962              		.cfi_endproc
 25963              	.LFE119:
 25965 0052 00BF     		.section	.text.CAN_Receive,"ax",%progbits
 25966              		.align	2
 25967              		.global	CAN_Receive
 25968              		.thumb
 25969              		.thumb_func
 25971              	CAN_Receive:
 25972              	.LFB120:
 716:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 717:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 718:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 719:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 720:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 721:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 724:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 725:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 726:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 727:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 728:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 729:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 730:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 732:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 733:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 734:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 735:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 736:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 737:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 738:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 744:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 745:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 25973              		.loc 1 746 0
 25974              		.cfi_startproc
 25975              		@ args = 0, pretend = 0, frame = 16
 25976              		@ frame_needed = 1, uses_anonymous_args = 0
 25977              		@ link register save eliminated.
 25978 0000 80B4     		push	{r7}
 25979              	.LCFI30:
 25980              		.cfi_def_cfa_offset 4
 25981 0002 85B0     		sub	sp, sp, #20
 25982              	.LCFI31:
 25983              		.cfi_def_cfa_offset 24
 25984 0004 00AF     		add	r7, sp, #0
 25985              		.cfi_offset 7, -4
 25986              	.LCFI32:
 25987              		.cfi_def_cfa_register 7
 25988 0006 F860     		str	r0, [r7, #12]
 25989 0008 0B46     		mov	r3, r1
 25990 000a 7A60     		str	r2, [r7, #4]
 25991 000c FB72     		strb	r3, [r7, #11]
 747:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 748:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 751:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 25992              		.loc 1 751 0
 25993 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 25994 0010 FA68     		ldr	r2, [r7, #12]
 25995 0012 03F11B03 		add	r3, r3, #27
 25996 0016 4FEA0313 		lsl	r3, r3, #4
 25997 001a D318     		adds	r3, r2, r3
 25998 001c 1B68     		ldr	r3, [r3, #0]
 25999 001e DBB2     		uxtb	r3, r3
 26000 0020 03F00403 		and	r3, r3, #4
 26001 0024 DAB2     		uxtb	r2, r3
 26002 0026 7B68     		ldr	r3, [r7, #4]
 26003 0028 1A72     		strb	r2, [r3, #8]
 752:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 26004              		.loc 1 752 0
 26005 002a 7B68     		ldr	r3, [r7, #4]
 26006 002c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 26007 002e 002B     		cmp	r3, #0
 26008 0030 0CD1     		bne	.L83
 753:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 754:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 26009              		.loc 1 754 0
 26010 0032 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26011 0034 FA68     		ldr	r2, [r7, #12]
 26012 0036 03F11B03 		add	r3, r3, #27
 26013 003a 4FEA0313 		lsl	r3, r3, #4
 26014 003e D318     		adds	r3, r2, r3
 26015 0040 1B68     		ldr	r3, [r3, #0]
 26016 0042 4FEA5352 		lsr	r2, r3, #21
 26017 0046 7B68     		ldr	r3, [r7, #4]
 26018 0048 1A60     		str	r2, [r3, #0]
 26019 004a 0BE0     		b	.L84
 26020              	.L83:
 755:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 756:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 757:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 758:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 26021              		.loc 1 758 0
 26022 004c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26023 004e FA68     		ldr	r2, [r7, #12]
 26024 0050 03F11B03 		add	r3, r3, #27
 26025 0054 4FEA0313 		lsl	r3, r3, #4
 26026 0058 D318     		adds	r3, r2, r3
 26027 005a 1B68     		ldr	r3, [r3, #0]
 26028 005c 4FEAD302 		lsr	r2, r3, #3
 26029 0060 7B68     		ldr	r3, [r7, #4]
 26030 0062 5A60     		str	r2, [r3, #4]
 26031              	.L84:
 759:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 760:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 761:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 26032              		.loc 1 761 0
 26033 0064 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26034 0066 FA68     		ldr	r2, [r7, #12]
 26035 0068 03F11B03 		add	r3, r3, #27
 26036 006c 4FEA0313 		lsl	r3, r3, #4
 26037 0070 D318     		adds	r3, r2, r3
 26038 0072 1B68     		ldr	r3, [r3, #0]
 26039 0074 DBB2     		uxtb	r3, r3
 26040 0076 03F00203 		and	r3, r3, #2
 26041 007a DAB2     		uxtb	r2, r3
 26042 007c 7B68     		ldr	r3, [r7, #4]
 26043 007e 5A72     		strb	r2, [r3, #9]
 762:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 763:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 26044              		.loc 1 763 0
 26045 0080 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26046 0082 FA68     		ldr	r2, [r7, #12]
 26047 0084 03F11B03 		add	r3, r3, #27
 26048 0088 4FEA0313 		lsl	r3, r3, #4
 26049 008c D318     		adds	r3, r2, r3
 26050 008e 5B68     		ldr	r3, [r3, #4]
 26051 0090 DBB2     		uxtb	r3, r3
 26052 0092 03F00F03 		and	r3, r3, #15
 26053 0096 DAB2     		uxtb	r2, r3
 26054 0098 7B68     		ldr	r3, [r7, #4]
 26055 009a 9A72     		strb	r2, [r3, #10]
 764:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 765:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 26056              		.loc 1 765 0
 26057 009c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26058 009e FA68     		ldr	r2, [r7, #12]
 26059 00a0 03F11B03 		add	r3, r3, #27
 26060 00a4 4FEA0313 		lsl	r3, r3, #4
 26061 00a8 D318     		adds	r3, r2, r3
 26062 00aa 5B68     		ldr	r3, [r3, #4]
 26063 00ac 4FEA1323 		lsr	r3, r3, #8
 26064 00b0 DAB2     		uxtb	r2, r3
 26065 00b2 7B68     		ldr	r3, [r7, #4]
 26066 00b4 DA74     		strb	r2, [r3, #19]
 766:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 767:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 26067              		.loc 1 767 0
 26068 00b6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26069 00b8 FA68     		ldr	r2, [r7, #12]
 26070 00ba 4FEA0313 		lsl	r3, r3, #4
 26071 00be D318     		adds	r3, r2, r3
 26072 00c0 03F5DC73 		add	r3, r3, #440
 26073 00c4 1B68     		ldr	r3, [r3, #0]
 26074 00c6 DAB2     		uxtb	r2, r3
 26075 00c8 7B68     		ldr	r3, [r7, #4]
 26076 00ca DA72     		strb	r2, [r3, #11]
 768:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 26077              		.loc 1 768 0
 26078 00cc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26079 00ce FA68     		ldr	r2, [r7, #12]
 26080 00d0 4FEA0313 		lsl	r3, r3, #4
 26081 00d4 D318     		adds	r3, r2, r3
 26082 00d6 03F5DC73 		add	r3, r3, #440
 26083 00da 1B68     		ldr	r3, [r3, #0]
 26084 00dc 4FEA1323 		lsr	r3, r3, #8
 26085 00e0 DAB2     		uxtb	r2, r3
 26086 00e2 7B68     		ldr	r3, [r7, #4]
 26087 00e4 1A73     		strb	r2, [r3, #12]
 769:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 26088              		.loc 1 769 0
 26089 00e6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26090 00e8 FA68     		ldr	r2, [r7, #12]
 26091 00ea 4FEA0313 		lsl	r3, r3, #4
 26092 00ee D318     		adds	r3, r2, r3
 26093 00f0 03F5DC73 		add	r3, r3, #440
 26094 00f4 1B68     		ldr	r3, [r3, #0]
 26095 00f6 4FEA1343 		lsr	r3, r3, #16
 26096 00fa DAB2     		uxtb	r2, r3
 26097 00fc 7B68     		ldr	r3, [r7, #4]
 26098 00fe 5A73     		strb	r2, [r3, #13]
 770:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 26099              		.loc 1 770 0
 26100 0100 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26101 0102 FA68     		ldr	r2, [r7, #12]
 26102 0104 4FEA0313 		lsl	r3, r3, #4
 26103 0108 D318     		adds	r3, r2, r3
 26104 010a 03F5DC73 		add	r3, r3, #440
 26105 010e 1B68     		ldr	r3, [r3, #0]
 26106 0110 4FEA1363 		lsr	r3, r3, #24
 26107 0114 DAB2     		uxtb	r2, r3
 26108 0116 7B68     		ldr	r3, [r7, #4]
 26109 0118 9A73     		strb	r2, [r3, #14]
 771:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 26110              		.loc 1 771 0
 26111 011a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26112 011c FA68     		ldr	r2, [r7, #12]
 26113 011e 4FEA0313 		lsl	r3, r3, #4
 26114 0122 D318     		adds	r3, r2, r3
 26115 0124 03F5DC73 		add	r3, r3, #440
 26116 0128 5B68     		ldr	r3, [r3, #4]
 26117 012a DAB2     		uxtb	r2, r3
 26118 012c 7B68     		ldr	r3, [r7, #4]
 26119 012e DA73     		strb	r2, [r3, #15]
 772:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 26120              		.loc 1 772 0
 26121 0130 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26122 0132 FA68     		ldr	r2, [r7, #12]
 26123 0134 4FEA0313 		lsl	r3, r3, #4
 26124 0138 D318     		adds	r3, r2, r3
 26125 013a 03F5DC73 		add	r3, r3, #440
 26126 013e 5B68     		ldr	r3, [r3, #4]
 26127 0140 4FEA1323 		lsr	r3, r3, #8
 26128 0144 DAB2     		uxtb	r2, r3
 26129 0146 7B68     		ldr	r3, [r7, #4]
 26130 0148 1A74     		strb	r2, [r3, #16]
 773:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 26131              		.loc 1 773 0
 26132 014a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26133 014c FA68     		ldr	r2, [r7, #12]
 26134 014e 4FEA0313 		lsl	r3, r3, #4
 26135 0152 D318     		adds	r3, r2, r3
 26136 0154 03F5DC73 		add	r3, r3, #440
 26137 0158 5B68     		ldr	r3, [r3, #4]
 26138 015a 4FEA1343 		lsr	r3, r3, #16
 26139 015e DAB2     		uxtb	r2, r3
 26140 0160 7B68     		ldr	r3, [r7, #4]
 26141 0162 5A74     		strb	r2, [r3, #17]
 774:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 26142              		.loc 1 774 0
 26143 0164 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26144 0166 FA68     		ldr	r2, [r7, #12]
 26145 0168 4FEA0313 		lsl	r3, r3, #4
 26146 016c D318     		adds	r3, r2, r3
 26147 016e 03F5DC73 		add	r3, r3, #440
 26148 0172 5B68     		ldr	r3, [r3, #4]
 26149 0174 4FEA1363 		lsr	r3, r3, #24
 26150 0178 DAB2     		uxtb	r2, r3
 26151 017a 7B68     		ldr	r3, [r7, #4]
 26152 017c 9A74     		strb	r2, [r3, #18]
 775:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 776:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 777:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 26153              		.loc 1 777 0
 26154 017e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 26155 0180 002B     		cmp	r3, #0
 26156 0182 06D1     		bne	.L85
 778:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 779:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 26157              		.loc 1 779 0
 26158 0184 FB68     		ldr	r3, [r7, #12]
 26159 0186 DB68     		ldr	r3, [r3, #12]
 26160 0188 43F02002 		orr	r2, r3, #32
 26161 018c FB68     		ldr	r3, [r7, #12]
 26162 018e DA60     		str	r2, [r3, #12]
 26163 0190 05E0     		b	.L82
 26164              	.L85:
 780:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 781:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 782:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 26165              		.loc 1 784 0
 26166 0192 FB68     		ldr	r3, [r7, #12]
 26167 0194 1B69     		ldr	r3, [r3, #16]
 26168 0196 43F02002 		orr	r2, r3, #32
 26169 019a FB68     		ldr	r3, [r7, #12]
 26170 019c 1A61     		str	r2, [r3, #16]
 26171              	.L82:
 785:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26172              		.loc 1 786 0
 26173 019e 07F11407 		add	r7, r7, #20
 26174 01a2 BD46     		mov	sp, r7
 26175 01a4 80BC     		pop	{r7}
 26176 01a6 7047     		bx	lr
 26177              		.cfi_endproc
 26178              	.LFE120:
 26180              		.section	.text.CAN_FIFORelease,"ax",%progbits
 26181              		.align	2
 26182              		.global	CAN_FIFORelease
 26183              		.thumb
 26184              		.thumb_func
 26186              	CAN_FIFORelease:
 26187              	.LFB121:
 787:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 788:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 789:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 793:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 794:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26188              		.loc 1 795 0
 26189              		.cfi_startproc
 26190              		@ args = 0, pretend = 0, frame = 8
 26191              		@ frame_needed = 1, uses_anonymous_args = 0
 26192              		@ link register save eliminated.
 26193 0000 80B4     		push	{r7}
 26194              	.LCFI33:
 26195              		.cfi_def_cfa_offset 4
 26196 0002 83B0     		sub	sp, sp, #12
 26197              	.LCFI34:
 26198              		.cfi_def_cfa_offset 16
 26199 0004 00AF     		add	r7, sp, #0
 26200              		.cfi_offset 7, -4
 26201              	.LCFI35:
 26202              		.cfi_def_cfa_register 7
 26203 0006 7860     		str	r0, [r7, #4]
 26204 0008 0B46     		mov	r3, r1
 26205 000a FB70     		strb	r3, [r7, #3]
 796:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 797:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 800:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 26206              		.loc 1 800 0
 26207 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 26208 000e 002B     		cmp	r3, #0
 26209 0010 06D1     		bne	.L88
 801:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 802:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 26210              		.loc 1 802 0
 26211 0012 7B68     		ldr	r3, [r7, #4]
 26212 0014 DB68     		ldr	r3, [r3, #12]
 26213 0016 43F02002 		orr	r2, r3, #32
 26214 001a 7B68     		ldr	r3, [r7, #4]
 26215 001c DA60     		str	r2, [r3, #12]
 26216 001e 05E0     		b	.L87
 26217              	.L88:
 803:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 804:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 805:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 26218              		.loc 1 807 0
 26219 0020 7B68     		ldr	r3, [r7, #4]
 26220 0022 1B69     		ldr	r3, [r3, #16]
 26221 0024 43F02002 		orr	r2, r3, #32
 26222 0028 7B68     		ldr	r3, [r7, #4]
 26223 002a 1A61     		str	r2, [r3, #16]
 26224              	.L87:
 808:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26225              		.loc 1 809 0
 26226 002c 07F10C07 		add	r7, r7, #12
 26227 0030 BD46     		mov	sp, r7
 26228 0032 80BC     		pop	{r7}
 26229 0034 7047     		bx	lr
 26230              		.cfi_endproc
 26231              	.LFE121:
 26233 0036 00BF     		.section	.text.CAN_MessagePending,"ax",%progbits
 26234              		.align	2
 26235              		.global	CAN_MessagePending
 26236              		.thumb
 26237              		.thumb_func
 26239              	CAN_MessagePending:
 26240              	.LFB122:
 810:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 811:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 812:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 817:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26241              		.loc 1 818 0
 26242              		.cfi_startproc
 26243              		@ args = 0, pretend = 0, frame = 16
 26244              		@ frame_needed = 1, uses_anonymous_args = 0
 26245              		@ link register save eliminated.
 26246 0000 80B4     		push	{r7}
 26247              	.LCFI36:
 26248              		.cfi_def_cfa_offset 4
 26249 0002 85B0     		sub	sp, sp, #20
 26250              	.LCFI37:
 26251              		.cfi_def_cfa_offset 24
 26252 0004 00AF     		add	r7, sp, #0
 26253              		.cfi_offset 7, -4
 26254              	.LCFI38:
 26255              		.cfi_def_cfa_register 7
 26256 0006 7860     		str	r0, [r7, #4]
 26257 0008 0B46     		mov	r3, r1
 26258 000a FB70     		strb	r3, [r7, #3]
 819:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 26259              		.loc 1 819 0
 26260 000c 4FF00003 		mov	r3, #0
 26261 0010 FB73     		strb	r3, [r7, #15]
 820:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 821:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 26262              		.loc 1 823 0
 26263 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 26264 0014 002B     		cmp	r3, #0
 26265 0016 06D1     		bne	.L91
 824:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 825:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 26266              		.loc 1 825 0
 26267 0018 7B68     		ldr	r3, [r7, #4]
 26268 001a DB68     		ldr	r3, [r3, #12]
 26269 001c DBB2     		uxtb	r3, r3
 26270 001e 03F00303 		and	r3, r3, #3
 26271 0022 FB73     		strb	r3, [r7, #15]
 26272 0024 0CE0     		b	.L92
 26273              	.L91:
 826:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 827:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 26274              		.loc 1 827 0
 26275 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 26276 0028 012B     		cmp	r3, #1
 26277 002a 06D1     		bne	.L93
 828:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 829:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 26278              		.loc 1 829 0
 26279 002c 7B68     		ldr	r3, [r7, #4]
 26280 002e 1B69     		ldr	r3, [r3, #16]
 26281 0030 DBB2     		uxtb	r3, r3
 26282 0032 03F00303 		and	r3, r3, #3
 26283 0036 FB73     		strb	r3, [r7, #15]
 26284 0038 02E0     		b	.L92
 26285              	.L93:
 830:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 831:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 832:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 833:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 26286              		.loc 1 833 0
 26287 003a 4FF00003 		mov	r3, #0
 26288 003e FB73     		strb	r3, [r7, #15]
 26289              	.L92:
 834:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 835:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 26290              		.loc 1 835 0
 26291 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26292              		.loc 1 836 0
 26293 0042 1846     		mov	r0, r3
 26294 0044 07F11407 		add	r7, r7, #20
 26295 0048 BD46     		mov	sp, r7
 26296 004a 80BC     		pop	{r7}
 26297 004c 7047     		bx	lr
 26298              		.cfi_endproc
 26299              	.LFE122:
 26301 004e 00BF     		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 26302              		.align	2
 26303              		.global	CAN_OperatingModeRequest
 26304              		.thumb
 26305              		.thumb_func
 26307              	CAN_OperatingModeRequest:
 26308              	.LFB123:
 837:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 838:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 839:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 840:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 841:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 842:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 845:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 846:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 847:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 848:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 849:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 851:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 852:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 853:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 854:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 855:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 856:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 857:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 858:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 859:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 860:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 864:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 867:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26309              		.loc 1 868 0
 26310              		.cfi_startproc
 26311              		@ args = 0, pretend = 0, frame = 16
 26312              		@ frame_needed = 1, uses_anonymous_args = 0
 26313              		@ link register save eliminated.
 26314 0000 80B4     		push	{r7}
 26315              	.LCFI39:
 26316              		.cfi_def_cfa_offset 4
 26317 0002 85B0     		sub	sp, sp, #20
 26318              	.LCFI40:
 26319              		.cfi_def_cfa_offset 24
 26320 0004 00AF     		add	r7, sp, #0
 26321              		.cfi_offset 7, -4
 26322              	.LCFI41:
 26323              		.cfi_def_cfa_register 7
 26324 0006 7860     		str	r0, [r7, #4]
 26325 0008 0B46     		mov	r3, r1
 26326 000a FB70     		strb	r3, [r7, #3]
 869:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 26327              		.loc 1 869 0
 26328 000c 4FF00003 		mov	r3, #0
 26329 0010 FB73     		strb	r3, [r7, #15]
 870:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 871:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 26330              		.loc 1 872 0
 26331 0012 4FF6FF73 		movw	r3, #65535
 26332 0016 BB60     		str	r3, [r7, #8]
 873:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 874:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 875:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 878:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 26333              		.loc 1 878 0
 26334 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 26335 001a 002B     		cmp	r3, #0
 26336 001c 23D1     		bne	.L95
 879:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 880:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 881:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 26337              		.loc 1 881 0
 26338 001e 7B68     		ldr	r3, [r7, #4]
 26339 0020 1B68     		ldr	r3, [r3, #0]
 26340 0022 23F00303 		bic	r3, r3, #3
 26341 0026 43F00102 		orr	r2, r3, #1
 26342 002a 7B68     		ldr	r3, [r7, #4]
 26343 002c 1A60     		str	r2, [r3, #0]
 882:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 884:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 26344              		.loc 1 884 0
 26345 002e 03E0     		b	.L96
 26346              	.L98:
 885:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 886:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 26347              		.loc 1 886 0
 26348 0030 BB68     		ldr	r3, [r7, #8]
 26349 0032 03F1FF33 		add	r3, r3, #-1
 26350 0036 BB60     		str	r3, [r7, #8]
 26351              	.L96:
 884:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 26352              		.loc 1 884 0 discriminator 1
 26353 0038 7B68     		ldr	r3, [r7, #4]
 26354 003a 5B68     		ldr	r3, [r3, #4]
 26355 003c 03F00303 		and	r3, r3, #3
 26356 0040 012B     		cmp	r3, #1
 26357 0042 02D0     		beq	.L97
 884:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 26358              		.loc 1 884 0 is_stmt 0 discriminator 2
 26359 0044 BB68     		ldr	r3, [r7, #8]
 26360 0046 002B     		cmp	r3, #0
 26361 0048 F2D1     		bne	.L98
 26362              	.L97:
 887:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 888:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 26363              		.loc 1 888 0 is_stmt 1
 26364 004a 7B68     		ldr	r3, [r7, #4]
 26365 004c 5B68     		ldr	r3, [r3, #4]
 26366 004e 03F00303 		and	r3, r3, #3
 26367 0052 012B     		cmp	r3, #1
 26368 0054 03D0     		beq	.L99
 889:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 890:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 26369              		.loc 1 890 0
 26370 0056 4FF00003 		mov	r3, #0
 26371 005a FB73     		strb	r3, [r7, #15]
 26372 005c 52E0     		b	.L100
 26373              	.L99:
 891:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 892:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 893:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 894:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 26374              		.loc 1 894 0
 26375 005e 4FF00103 		mov	r3, #1
 26376 0062 FB73     		strb	r3, [r7, #15]
 26377 0064 4EE0     		b	.L100
 26378              	.L95:
 895:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 896:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 897:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 26379              		.loc 1 897 0
 26380 0066 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 26381 0068 012B     		cmp	r3, #1
 26382 006a 21D1     		bne	.L101
 898:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 899:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 26383              		.loc 1 900 0
 26384 006c 7B68     		ldr	r3, [r7, #4]
 26385 006e 1B68     		ldr	r3, [r3, #0]
 26386 0070 23F00302 		bic	r2, r3, #3
 26387 0074 7B68     		ldr	r3, [r7, #4]
 26388 0076 1A60     		str	r2, [r3, #0]
 901:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 902:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 903:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 26389              		.loc 1 903 0
 26390 0078 03E0     		b	.L102
 26391              	.L104:
 904:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 905:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 26392              		.loc 1 905 0
 26393 007a BB68     		ldr	r3, [r7, #8]
 26394 007c 03F1FF33 		add	r3, r3, #-1
 26395 0080 BB60     		str	r3, [r7, #8]
 26396              	.L102:
 903:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 26397              		.loc 1 903 0 discriminator 1
 26398 0082 7B68     		ldr	r3, [r7, #4]
 26399 0084 5B68     		ldr	r3, [r3, #4]
 26400 0086 03F00303 		and	r3, r3, #3
 26401 008a 002B     		cmp	r3, #0
 26402 008c 02D0     		beq	.L103
 903:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 26403              		.loc 1 903 0 is_stmt 0 discriminator 2
 26404 008e BB68     		ldr	r3, [r7, #8]
 26405 0090 002B     		cmp	r3, #0
 26406 0092 F2D1     		bne	.L104
 26407              	.L103:
 906:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 907:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 26408              		.loc 1 907 0 is_stmt 1
 26409 0094 7B68     		ldr	r3, [r7, #4]
 26410 0096 5B68     		ldr	r3, [r3, #4]
 26411 0098 03F00303 		and	r3, r3, #3
 26412 009c 002B     		cmp	r3, #0
 26413 009e 03D0     		beq	.L105
 908:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 909:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 26414              		.loc 1 909 0
 26415 00a0 4FF00003 		mov	r3, #0
 26416 00a4 FB73     		strb	r3, [r7, #15]
 26417 00a6 2DE0     		b	.L100
 26418              	.L105:
 910:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 911:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 912:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 913:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 26419              		.loc 1 913 0
 26420 00a8 4FF00103 		mov	r3, #1
 26421 00ac FB73     		strb	r3, [r7, #15]
 26422 00ae 29E0     		b	.L100
 26423              	.L101:
 914:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 915:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 916:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 26424              		.loc 1 916 0
 26425 00b0 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 26426 00b2 022B     		cmp	r3, #2
 26427 00b4 23D1     		bne	.L106
 917:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 918:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 919:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 26428              		.loc 1 919 0
 26429 00b6 7B68     		ldr	r3, [r7, #4]
 26430 00b8 1B68     		ldr	r3, [r3, #0]
 26431 00ba 23F00303 		bic	r3, r3, #3
 26432 00be 43F00202 		orr	r2, r3, #2
 26433 00c2 7B68     		ldr	r3, [r7, #4]
 26434 00c4 1A60     		str	r2, [r3, #0]
 920:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 921:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 922:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 26435              		.loc 1 922 0
 26436 00c6 03E0     		b	.L107
 26437              	.L109:
 923:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 924:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 26438              		.loc 1 924 0
 26439 00c8 BB68     		ldr	r3, [r7, #8]
 26440 00ca 03F1FF33 		add	r3, r3, #-1
 26441 00ce BB60     		str	r3, [r7, #8]
 26442              	.L107:
 922:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 26443              		.loc 1 922 0 discriminator 1
 26444 00d0 7B68     		ldr	r3, [r7, #4]
 26445 00d2 5B68     		ldr	r3, [r3, #4]
 26446 00d4 03F00303 		and	r3, r3, #3
 26447 00d8 022B     		cmp	r3, #2
 26448 00da 02D0     		beq	.L108
 922:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 26449              		.loc 1 922 0 is_stmt 0 discriminator 2
 26450 00dc BB68     		ldr	r3, [r7, #8]
 26451 00de 002B     		cmp	r3, #0
 26452 00e0 F2D1     		bne	.L109
 26453              	.L108:
 925:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 926:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 26454              		.loc 1 926 0 is_stmt 1
 26455 00e2 7B68     		ldr	r3, [r7, #4]
 26456 00e4 5B68     		ldr	r3, [r3, #4]
 26457 00e6 03F00303 		and	r3, r3, #3
 26458 00ea 022B     		cmp	r3, #2
 26459 00ec 03D0     		beq	.L110
 927:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 928:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 26460              		.loc 1 928 0
 26461 00ee 4FF00003 		mov	r3, #0
 26462 00f2 FB73     		strb	r3, [r7, #15]
 26463 00f4 06E0     		b	.L100
 26464              	.L110:
 929:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 930:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 931:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 932:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 26465              		.loc 1 932 0
 26466 00f6 4FF00103 		mov	r3, #1
 26467 00fa FB73     		strb	r3, [r7, #15]
 26468 00fc 02E0     		b	.L100
 26469              	.L106:
 933:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 934:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 935:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 936:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 937:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 26470              		.loc 1 937 0
 26471 00fe 4FF00003 		mov	r3, #0
 26472 0102 FB73     		strb	r3, [r7, #15]
 26473              	.L100:
 938:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 939:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 940:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 26474              		.loc 1 940 0
 26475 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26476              		.loc 1 941 0
 26477 0106 1846     		mov	r0, r3
 26478 0108 07F11407 		add	r7, r7, #20
 26479 010c BD46     		mov	sp, r7
 26480 010e 80BC     		pop	{r7}
 26481 0110 7047     		bx	lr
 26482              		.cfi_endproc
 26483              	.LFE123:
 26485 0112 00BF     		.section	.text.CAN_Sleep,"ax",%progbits
 26486              		.align	2
 26487              		.global	CAN_Sleep
 26488              		.thumb
 26489              		.thumb_func
 26491              	CAN_Sleep:
 26492              	.LFB124:
 942:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 943:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 944:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 948:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26493              		.loc 1 949 0
 26494              		.cfi_startproc
 26495              		@ args = 0, pretend = 0, frame = 16
 26496              		@ frame_needed = 1, uses_anonymous_args = 0
 26497              		@ link register save eliminated.
 26498 0000 80B4     		push	{r7}
 26499              	.LCFI42:
 26500              		.cfi_def_cfa_offset 4
 26501 0002 85B0     		sub	sp, sp, #20
 26502              	.LCFI43:
 26503              		.cfi_def_cfa_offset 24
 26504 0004 00AF     		add	r7, sp, #0
 26505              		.cfi_offset 7, -4
 26506              	.LCFI44:
 26507              		.cfi_def_cfa_register 7
 26508 0006 7860     		str	r0, [r7, #4]
 950:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 26509              		.loc 1 950 0
 26510 0008 4FF00003 		mov	r3, #0
 26511 000c FB73     		strb	r3, [r7, #15]
 951:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 952:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 953:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 955:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 956:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 26512              		.loc 1 956 0
 26513 000e 7B68     		ldr	r3, [r7, #4]
 26514 0010 1B68     		ldr	r3, [r3, #0]
 26515 0012 23F00303 		bic	r3, r3, #3
 26516 0016 43F00202 		orr	r2, r3, #2
 26517 001a 7B68     		ldr	r3, [r7, #4]
 26518 001c 1A60     		str	r2, [r3, #0]
 957:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 958:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 959:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 26519              		.loc 1 959 0
 26520 001e 7B68     		ldr	r3, [r7, #4]
 26521 0020 5B68     		ldr	r3, [r3, #4]
 26522 0022 03F00303 		and	r3, r3, #3
 26523 0026 022B     		cmp	r3, #2
 26524 0028 02D1     		bne	.L112
 960:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 961:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 962:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 26525              		.loc 1 962 0
 26526 002a 4FF00103 		mov	r3, #1
 26527 002e FB73     		strb	r3, [r7, #15]
 26528              	.L112:
 963:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 964:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 965:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 26529              		.loc 1 965 0
 26530 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26531              		.loc 1 966 0
 26532 0032 1846     		mov	r0, r3
 26533 0034 07F11407 		add	r7, r7, #20
 26534 0038 BD46     		mov	sp, r7
 26535 003a 80BC     		pop	{r7}
 26536 003c 7047     		bx	lr
 26537              		.cfi_endproc
 26538              	.LFE124:
 26540 003e 00BF     		.section	.text.CAN_WakeUp,"ax",%progbits
 26541              		.align	2
 26542              		.global	CAN_WakeUp
 26543              		.thumb
 26544              		.thumb_func
 26546              	CAN_WakeUp:
 26547              	.LFB125:
 967:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 968:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 969:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 973:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26548              		.loc 1 974 0
 26549              		.cfi_startproc
 26550              		@ args = 0, pretend = 0, frame = 16
 26551              		@ frame_needed = 1, uses_anonymous_args = 0
 26552              		@ link register save eliminated.
 26553 0000 80B4     		push	{r7}
 26554              	.LCFI45:
 26555              		.cfi_def_cfa_offset 4
 26556 0002 85B0     		sub	sp, sp, #20
 26557              	.LCFI46:
 26558              		.cfi_def_cfa_offset 24
 26559 0004 00AF     		add	r7, sp, #0
 26560              		.cfi_offset 7, -4
 26561              	.LCFI47:
 26562              		.cfi_def_cfa_register 7
 26563 0006 7860     		str	r0, [r7, #4]
 975:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 26564              		.loc 1 975 0
 26565 0008 4FF6FF73 		movw	r3, #65535
 26566 000c FB60     		str	r3, [r7, #12]
 976:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 26567              		.loc 1 976 0
 26568 000e 4FF00003 		mov	r3, #0
 26569 0012 FB72     		strb	r3, [r7, #11]
 977:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 978:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 979:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 981:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 982:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 26570              		.loc 1 982 0
 26571 0014 7B68     		ldr	r3, [r7, #4]
 26572 0016 1B68     		ldr	r3, [r3, #0]
 26573 0018 23F00202 		bic	r2, r3, #2
 26574 001c 7B68     		ldr	r3, [r7, #4]
 26575 001e 1A60     		str	r2, [r3, #0]
 983:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 984:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 985:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 26576              		.loc 1 985 0
 26577 0020 03E0     		b	.L114
 26578              	.L116:
 986:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 987:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 26579              		.loc 1 987 0
 26580 0022 FB68     		ldr	r3, [r7, #12]
 26581 0024 03F1FF33 		add	r3, r3, #-1
 26582 0028 FB60     		str	r3, [r7, #12]
 26583              	.L114:
 985:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 26584              		.loc 1 985 0 discriminator 1
 26585 002a 7B68     		ldr	r3, [r7, #4]
 26586 002c 5B68     		ldr	r3, [r3, #4]
 26587 002e 03F00203 		and	r3, r3, #2
 26588 0032 002B     		cmp	r3, #0
 26589 0034 02D0     		beq	.L115
 985:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 26590              		.loc 1 985 0 is_stmt 0 discriminator 2
 26591 0036 FB68     		ldr	r3, [r7, #12]
 26592 0038 002B     		cmp	r3, #0
 26593 003a F2D1     		bne	.L116
 26594              	.L115:
 988:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 989:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 26595              		.loc 1 989 0 is_stmt 1
 26596 003c 7B68     		ldr	r3, [r7, #4]
 26597 003e 5B68     		ldr	r3, [r3, #4]
 26598 0040 03F00203 		and	r3, r3, #2
 26599 0044 002B     		cmp	r3, #0
 26600 0046 02D1     		bne	.L117
 990:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 991:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 992:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 26601              		.loc 1 992 0
 26602 0048 4FF00103 		mov	r3, #1
 26603 004c FB72     		strb	r3, [r7, #11]
 26604              	.L117:
 993:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
 995:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 26605              		.loc 1 995 0
 26606 004e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 996:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26607              		.loc 1 996 0
 26608 0050 1846     		mov	r0, r3
 26609 0052 07F11407 		add	r7, r7, #20
 26610 0056 BD46     		mov	sp, r7
 26611 0058 80BC     		pop	{r7}
 26612 005a 7047     		bx	lr
 26613              		.cfi_endproc
 26614              	.LFE125:
 26616              		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 26617              		.align	2
 26618              		.global	CAN_GetLastErrorCode
 26619              		.thumb
 26620              		.thumb_func
 26622              	CAN_GetLastErrorCode:
 26623              	.LFB126:
 997:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 998:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 999:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1000:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1001:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1002:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1005:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1006:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1007:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1008:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1009:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1010:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1014:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1018:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1019:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1020:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1021:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1022:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1023:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1026:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1035:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26624              		.loc 1 1036 0
 26625              		.cfi_startproc
 26626              		@ args = 0, pretend = 0, frame = 16
 26627              		@ frame_needed = 1, uses_anonymous_args = 0
 26628              		@ link register save eliminated.
 26629 0000 80B4     		push	{r7}
 26630              	.LCFI48:
 26631              		.cfi_def_cfa_offset 4
 26632 0002 85B0     		sub	sp, sp, #20
 26633              	.LCFI49:
 26634              		.cfi_def_cfa_offset 24
 26635 0004 00AF     		add	r7, sp, #0
 26636              		.cfi_offset 7, -4
 26637              	.LCFI50:
 26638              		.cfi_def_cfa_register 7
 26639 0006 7860     		str	r0, [r7, #4]
1037:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
 26640              		.loc 1 1037 0
 26641 0008 4FF00003 		mov	r3, #0
 26642 000c FB73     		strb	r3, [r7, #15]
1038:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1039:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1040:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1042:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1043:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 26643              		.loc 1 1043 0
 26644 000e 7B68     		ldr	r3, [r7, #4]
 26645 0010 9B69     		ldr	r3, [r3, #24]
 26646 0012 DBB2     		uxtb	r3, r3
 26647 0014 03F07003 		and	r3, r3, #112
 26648 0018 FB73     		strb	r3, [r7, #15]
1044:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1046:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
 26649              		.loc 1 1046 0
 26650 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1047:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26651              		.loc 1 1047 0
 26652 001c 1846     		mov	r0, r3
 26653 001e 07F11407 		add	r7, r7, #20
 26654 0022 BD46     		mov	sp, r7
 26655 0024 80BC     		pop	{r7}
 26656 0026 7047     		bx	lr
 26657              		.cfi_endproc
 26658              	.LFE126:
 26660              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 26661              		.align	2
 26662              		.global	CAN_GetReceiveErrorCounter
 26663              		.thumb
 26664              		.thumb_func
 26666              	CAN_GetReceiveErrorCounter:
 26667              	.LFB127:
1048:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1049:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1050:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1057:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1060:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26668              		.loc 1 1061 0
 26669              		.cfi_startproc
 26670              		@ args = 0, pretend = 0, frame = 16
 26671              		@ frame_needed = 1, uses_anonymous_args = 0
 26672              		@ link register save eliminated.
 26673 0000 80B4     		push	{r7}
 26674              	.LCFI51:
 26675              		.cfi_def_cfa_offset 4
 26676 0002 85B0     		sub	sp, sp, #20
 26677              	.LCFI52:
 26678              		.cfi_def_cfa_offset 24
 26679 0004 00AF     		add	r7, sp, #0
 26680              		.cfi_offset 7, -4
 26681              	.LCFI53:
 26682              		.cfi_def_cfa_register 7
 26683 0006 7860     		str	r0, [r7, #4]
1062:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 26684              		.loc 1 1062 0
 26685 0008 4FF00003 		mov	r3, #0
 26686 000c FB73     		strb	r3, [r7, #15]
1063:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1064:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1065:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1067:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1068:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 26687              		.loc 1 1068 0
 26688 000e 7B68     		ldr	r3, [r7, #4]
 26689 0010 9B69     		ldr	r3, [r3, #24]
 26690 0012 4FEA1363 		lsr	r3, r3, #24
 26691 0016 FB73     		strb	r3, [r7, #15]
1069:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1071:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 26692              		.loc 1 1071 0
 26693 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1072:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26694              		.loc 1 1072 0
 26695 001a 1846     		mov	r0, r3
 26696 001c 07F11407 		add	r7, r7, #20
 26697 0020 BD46     		mov	sp, r7
 26698 0022 80BC     		pop	{r7}
 26699 0024 7047     		bx	lr
 26700              		.cfi_endproc
 26701              	.LFE127:
 26703 0026 00BF     		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 26704              		.align	2
 26705              		.global	CAN_GetLSBTransmitErrorCounter
 26706              		.thumb
 26707              		.thumb_func
 26709              	CAN_GetLSBTransmitErrorCounter:
 26710              	.LFB128:
1073:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1074:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1075:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1076:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1080:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26711              		.loc 1 1081 0
 26712              		.cfi_startproc
 26713              		@ args = 0, pretend = 0, frame = 16
 26714              		@ frame_needed = 1, uses_anonymous_args = 0
 26715              		@ link register save eliminated.
 26716 0000 80B4     		push	{r7}
 26717              	.LCFI54:
 26718              		.cfi_def_cfa_offset 4
 26719 0002 85B0     		sub	sp, sp, #20
 26720              	.LCFI55:
 26721              		.cfi_def_cfa_offset 24
 26722 0004 00AF     		add	r7, sp, #0
 26723              		.cfi_offset 7, -4
 26724              	.LCFI56:
 26725              		.cfi_def_cfa_register 7
 26726 0006 7860     		str	r0, [r7, #4]
1082:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 26727              		.loc 1 1082 0
 26728 0008 4FF00003 		mov	r3, #0
 26729 000c FB73     		strb	r3, [r7, #15]
1083:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1084:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1085:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1087:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 26730              		.loc 1 1088 0
 26731 000e 7B68     		ldr	r3, [r7, #4]
 26732 0010 9B69     		ldr	r3, [r3, #24]
 26733 0012 03F47F03 		and	r3, r3, #16711680
 26734 0016 4FEA1343 		lsr	r3, r3, #16
 26735 001a FB73     		strb	r3, [r7, #15]
1089:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 26736              		.loc 1 1091 0
 26737 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1092:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26738              		.loc 1 1092 0
 26739 001e 1846     		mov	r0, r3
 26740 0020 07F11407 		add	r7, r7, #20
 26741 0024 BD46     		mov	sp, r7
 26742 0026 80BC     		pop	{r7}
 26743 0028 7047     		bx	lr
 26744              		.cfi_endproc
 26745              	.LFE128:
 26747 002a 00BF     		.section	.text.CAN_ITConfig,"ax",%progbits
 26748              		.align	2
 26749              		.global	CAN_ITConfig
 26750              		.thumb
 26751              		.thumb_func
 26753              	CAN_ITConfig:
 26754              	.LFB129:
1093:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1094:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1095:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1096:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1097:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26755              		.loc 1 1288 0
 26756              		.cfi_startproc
 26757              		@ args = 0, pretend = 0, frame = 16
 26758              		@ frame_needed = 1, uses_anonymous_args = 0
 26759              		@ link register save eliminated.
 26760 0000 80B4     		push	{r7}
 26761              	.LCFI57:
 26762              		.cfi_def_cfa_offset 4
 26763 0002 85B0     		sub	sp, sp, #20
 26764              	.LCFI58:
 26765              		.cfi_def_cfa_offset 24
 26766 0004 00AF     		add	r7, sp, #0
 26767              		.cfi_offset 7, -4
 26768              	.LCFI59:
 26769              		.cfi_def_cfa_register 7
 26770 0006 F860     		str	r0, [r7, #12]
 26771 0008 B960     		str	r1, [r7, #8]
 26772 000a 1346     		mov	r3, r2
 26773 000c FB71     		strb	r3, [r7, #7]
1289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 26774              		.loc 1 1294 0
 26775 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 26776 0010 002B     		cmp	r3, #0
 26777 0012 06D0     		beq	.L122
1295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 26778              		.loc 1 1297 0
 26779 0014 FB68     		ldr	r3, [r7, #12]
 26780 0016 5A69     		ldr	r2, [r3, #20]
 26781 0018 BB68     		ldr	r3, [r7, #8]
 26782 001a 1A43     		orrs	r2, r2, r3
 26783 001c FB68     		ldr	r3, [r7, #12]
 26784 001e 5A61     		str	r2, [r3, #20]
 26785 0020 07E0     		b	.L121
 26786              	.L122:
1298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 26787              		.loc 1 1302 0
 26788 0022 FB68     		ldr	r3, [r7, #12]
 26789 0024 5A69     		ldr	r2, [r3, #20]
 26790 0026 BB68     		ldr	r3, [r7, #8]
 26791 0028 6FEA0303 		mvn	r3, r3
 26792 002c 1A40     		ands	r2, r2, r3
 26793 002e FB68     		ldr	r3, [r7, #12]
 26794 0030 5A61     		str	r2, [r3, #20]
 26795              	.L121:
1303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26796              		.loc 1 1304 0
 26797 0032 07F11407 		add	r7, r7, #20
 26798 0036 BD46     		mov	sp, r7
 26799 0038 80BC     		pop	{r7}
 26800 003a 7047     		bx	lr
 26801              		.cfi_endproc
 26802              	.LFE129:
 26804              		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 26805              		.align	2
 26806              		.global	CAN_GetFlagStatus
 26807              		.thumb
 26808              		.thumb_func
 26810              	CAN_GetFlagStatus:
 26811              	.LFB130:
1305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26812              		.loc 1 1328 0
 26813              		.cfi_startproc
 26814              		@ args = 0, pretend = 0, frame = 16
 26815              		@ frame_needed = 1, uses_anonymous_args = 0
 26816              		@ link register save eliminated.
 26817 0000 80B4     		push	{r7}
 26818              	.LCFI60:
 26819              		.cfi_def_cfa_offset 4
 26820 0002 85B0     		sub	sp, sp, #20
 26821              	.LCFI61:
 26822              		.cfi_def_cfa_offset 24
 26823 0004 00AF     		add	r7, sp, #0
 26824              		.cfi_offset 7, -4
 26825              	.LCFI62:
 26826              		.cfi_def_cfa_register 7
 26827 0006 7860     		str	r0, [r7, #4]
 26828 0008 3960     		str	r1, [r7, #0]
1329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 26829              		.loc 1 1329 0
 26830 000a 4FF00003 		mov	r3, #0
 26831 000e FB73     		strb	r3, [r7, #15]
1330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 26832              		.loc 1 1336 0
 26833 0010 3B68     		ldr	r3, [r7, #0]
 26834 0012 03F47003 		and	r3, r3, #15728640
 26835 0016 002B     		cmp	r3, #0
 26836 0018 12D0     		beq	.L125
1337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1339:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 26837              		.loc 1 1339 0
 26838 001a 7B68     		ldr	r3, [r7, #4]
 26839 001c 9A69     		ldr	r2, [r3, #24]
 26840 001e 3B68     		ldr	r3, [r7, #0]
 26841 0020 02EA0303 		and	r3, r2, r3
 26842 0024 23F07F43 		bic	r3, r3, #-16777216
 26843 0028 23F47003 		bic	r3, r3, #15728640
 26844 002c 002B     		cmp	r3, #0
 26845 002e 03D0     		beq	.L126
1340:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1341:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1342:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 26846              		.loc 1 1342 0
 26847 0030 4FF00103 		mov	r3, #1
 26848 0034 FB73     		strb	r3, [r7, #15]
 26849 0036 5DE0     		b	.L127
 26850              	.L126:
1343:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1344:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1345:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1346:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1347:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 26851              		.loc 1 1347 0
 26852 0038 4FF00003 		mov	r3, #0
 26853 003c FB73     		strb	r3, [r7, #15]
 26854 003e 59E0     		b	.L127
 26855              	.L125:
1348:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1349:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1350:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 26856              		.loc 1 1350 0
 26857 0040 3B68     		ldr	r3, [r7, #0]
 26858 0042 03F08073 		and	r3, r3, #16777216
 26859 0046 002B     		cmp	r3, #0
 26860 0048 12D0     		beq	.L128
1351:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1352:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1353:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 26861              		.loc 1 1353 0
 26862 004a 7B68     		ldr	r3, [r7, #4]
 26863 004c 5A68     		ldr	r2, [r3, #4]
 26864 004e 3B68     		ldr	r3, [r7, #0]
 26865 0050 02EA0303 		and	r3, r2, r3
 26866 0054 23F07F43 		bic	r3, r3, #-16777216
 26867 0058 23F47003 		bic	r3, r3, #15728640
 26868 005c 002B     		cmp	r3, #0
 26869 005e 03D0     		beq	.L129
1354:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 26870              		.loc 1 1356 0
 26871 0060 4FF00103 		mov	r3, #1
 26872 0064 FB73     		strb	r3, [r7, #15]
 26873 0066 45E0     		b	.L127
 26874              	.L129:
1357:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1358:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1359:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1360:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 26875              		.loc 1 1361 0
 26876 0068 4FF00003 		mov	r3, #0
 26877 006c FB73     		strb	r3, [r7, #15]
 26878 006e 41E0     		b	.L127
 26879              	.L128:
1362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1363:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1364:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 26880              		.loc 1 1364 0
 26881 0070 3B68     		ldr	r3, [r7, #0]
 26882 0072 03F00063 		and	r3, r3, #134217728
 26883 0076 002B     		cmp	r3, #0
 26884 0078 12D0     		beq	.L130
1365:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1366:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1367:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 26885              		.loc 1 1367 0
 26886 007a 7B68     		ldr	r3, [r7, #4]
 26887 007c 9A68     		ldr	r2, [r3, #8]
 26888 007e 3B68     		ldr	r3, [r7, #0]
 26889 0080 02EA0303 		and	r3, r2, r3
 26890 0084 23F07F43 		bic	r3, r3, #-16777216
 26891 0088 23F47003 		bic	r3, r3, #15728640
 26892 008c 002B     		cmp	r3, #0
 26893 008e 03D0     		beq	.L131
1368:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1369:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1370:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 26894              		.loc 1 1370 0
 26895 0090 4FF00103 		mov	r3, #1
 26896 0094 FB73     		strb	r3, [r7, #15]
 26897 0096 2DE0     		b	.L127
 26898              	.L131:
1371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1373:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1374:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 26899              		.loc 1 1375 0
 26900 0098 4FF00003 		mov	r3, #0
 26901 009c FB73     		strb	r3, [r7, #15]
 26902 009e 29E0     		b	.L127
 26903              	.L130:
1376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1377:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1378:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 26904              		.loc 1 1378 0
 26905 00a0 3B68     		ldr	r3, [r7, #0]
 26906 00a2 03F00073 		and	r3, r3, #33554432
 26907 00a6 002B     		cmp	r3, #0
 26908 00a8 12D0     		beq	.L132
1379:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1380:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1381:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 26909              		.loc 1 1381 0
 26910 00aa 7B68     		ldr	r3, [r7, #4]
 26911 00ac DA68     		ldr	r2, [r3, #12]
 26912 00ae 3B68     		ldr	r3, [r7, #0]
 26913 00b0 02EA0303 		and	r3, r2, r3
 26914 00b4 23F07F43 		bic	r3, r3, #-16777216
 26915 00b8 23F47003 		bic	r3, r3, #15728640
 26916 00bc 002B     		cmp	r3, #0
 26917 00be 03D0     		beq	.L133
1382:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1383:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1384:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 26918              		.loc 1 1384 0
 26919 00c0 4FF00103 		mov	r3, #1
 26920 00c4 FB73     		strb	r3, [r7, #15]
 26921 00c6 15E0     		b	.L127
 26922              	.L133:
1385:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1386:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1387:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1388:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1389:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 26923              		.loc 1 1389 0
 26924 00c8 4FF00003 		mov	r3, #0
 26925 00cc FB73     		strb	r3, [r7, #15]
 26926 00ce 11E0     		b	.L127
 26927              	.L132:
1390:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1391:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1392:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1394:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1395:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 26928              		.loc 1 1395 0
 26929 00d0 7B68     		ldr	r3, [r7, #4]
 26930 00d2 1A69     		ldr	r2, [r3, #16]
 26931 00d4 3B68     		ldr	r3, [r7, #0]
 26932 00d6 02EA0303 		and	r3, r2, r3
 26933 00da 23F07F43 		bic	r3, r3, #-16777216
 26934 00de 23F47003 		bic	r3, r3, #15728640
 26935 00e2 002B     		cmp	r3, #0
 26936 00e4 03D0     		beq	.L134
1396:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1398:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 26937              		.loc 1 1398 0
 26938 00e6 4FF00103 		mov	r3, #1
 26939 00ea FB73     		strb	r3, [r7, #15]
 26940 00ec 02E0     		b	.L127
 26941              	.L134:
1399:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1400:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1401:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1402:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1403:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 26942              		.loc 1 1403 0
 26943 00ee 4FF00003 		mov	r3, #0
 26944 00f2 FB73     		strb	r3, [r7, #15]
 26945              	.L127:
1404:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1405:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1406:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1407:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
 26946              		.loc 1 1407 0
 26947 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1408:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 26948              		.loc 1 1408 0
 26949 00f6 1846     		mov	r0, r3
 26950 00f8 07F11407 		add	r7, r7, #20
 26951 00fc BD46     		mov	sp, r7
 26952 00fe 80BC     		pop	{r7}
 26953 0100 7047     		bx	lr
 26954              		.cfi_endproc
 26955              	.LFE130:
 26957 0102 00BF     		.section	.text.CAN_ClearFlag,"ax",%progbits
 26958              		.align	2
 26959              		.global	CAN_ClearFlag
 26960              		.thumb
 26961              		.thumb_func
 26963              	CAN_ClearFlag:
 26964              	.LFB131:
1409:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1410:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1411:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1415:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1426:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1427:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 26965              		.loc 1 1428 0
 26966              		.cfi_startproc
 26967              		@ args = 0, pretend = 0, frame = 16
 26968              		@ frame_needed = 1, uses_anonymous_args = 0
 26969              		@ link register save eliminated.
 26970 0000 80B4     		push	{r7}
 26971              	.LCFI63:
 26972              		.cfi_def_cfa_offset 4
 26973 0002 85B0     		sub	sp, sp, #20
 26974              	.LCFI64:
 26975              		.cfi_def_cfa_offset 24
 26976 0004 00AF     		add	r7, sp, #0
 26977              		.cfi_offset 7, -4
 26978              	.LCFI65:
 26979              		.cfi_def_cfa_register 7
 26980 0006 7860     		str	r0, [r7, #4]
 26981 0008 3960     		str	r1, [r7, #0]
1429:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 26982              		.loc 1 1429 0
 26983 000a 4FF00003 		mov	r3, #0
 26984 000e FB60     		str	r3, [r7, #12]
1430:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1431:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1434:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 26985              		.loc 1 1434 0
 26986 0010 3A68     		ldr	r2, [r7, #0]
 26987 0012 184B     		ldr	r3, .L141
 26988 0014 9A42     		cmp	r2, r3
 26989 0016 04D1     		bne	.L136
1435:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1436:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1437:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 26990              		.loc 1 1437 0
 26991 0018 7B68     		ldr	r3, [r7, #4]
 26992 001a 4FF00002 		mov	r2, #0
 26993 001e 9A61     		str	r2, [r3, #24]
 26994 0020 23E0     		b	.L135
 26995              	.L136:
1438:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1439:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1441:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 26996              		.loc 1 1441 0
 26997 0022 3B68     		ldr	r3, [r7, #0]
 26998 0024 23F07F43 		bic	r3, r3, #-16777216
 26999 0028 23F47003 		bic	r3, r3, #15728640
 27000 002c FB60     		str	r3, [r7, #12]
1442:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1443:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 27001              		.loc 1 1443 0
 27002 002e 3B68     		ldr	r3, [r7, #0]
 27003 0030 03F00073 		and	r3, r3, #33554432
 27004 0034 002B     		cmp	r3, #0
 27005 0036 03D0     		beq	.L138
1444:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1445:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1446:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 27006              		.loc 1 1446 0
 27007 0038 7B68     		ldr	r3, [r7, #4]
 27008 003a FA68     		ldr	r2, [r7, #12]
 27009 003c DA60     		str	r2, [r3, #12]
 27010 003e 14E0     		b	.L135
 27011              	.L138:
1447:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1448:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 27012              		.loc 1 1448 0
 27013 0040 3B68     		ldr	r3, [r7, #0]
 27014 0042 03F08063 		and	r3, r3, #67108864
 27015 0046 002B     		cmp	r3, #0
 27016 0048 03D0     		beq	.L139
1449:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1450:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1451:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 27017              		.loc 1 1451 0
 27018 004a 7B68     		ldr	r3, [r7, #4]
 27019 004c FA68     		ldr	r2, [r7, #12]
 27020 004e 1A61     		str	r2, [r3, #16]
 27021 0050 0BE0     		b	.L135
 27022              	.L139:
1452:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1453:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 27023              		.loc 1 1453 0
 27024 0052 3B68     		ldr	r3, [r7, #0]
 27025 0054 03F00063 		and	r3, r3, #134217728
 27026 0058 002B     		cmp	r3, #0
 27027 005a 03D0     		beq	.L140
1454:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1455:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1456:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 27028              		.loc 1 1456 0
 27029 005c 7B68     		ldr	r3, [r7, #4]
 27030 005e FA68     		ldr	r2, [r7, #12]
 27031 0060 9A60     		str	r2, [r3, #8]
 27032 0062 02E0     		b	.L135
 27033              	.L140:
1457:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1458:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1460:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1461:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 27034              		.loc 1 1461 0
 27035 0064 7B68     		ldr	r3, [r7, #4]
 27036 0066 FA68     		ldr	r2, [r7, #12]
 27037 0068 5A60     		str	r2, [r3, #4]
 27038              	.L135:
1462:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1463:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1464:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 27039              		.loc 1 1464 0
 27040 006a 07F11407 		add	r7, r7, #20
 27041 006e BD46     		mov	sp, r7
 27042 0070 80BC     		pop	{r7}
 27043 0072 7047     		bx	lr
 27044              	.L142:
 27045              		.align	2
 27046              	.L141:
 27047 0074 7000F030 		.word	821035120
 27048              		.cfi_endproc
 27049              	.LFE131:
 27051              		.section	.text.CAN_GetITStatus,"ax",%progbits
 27052              		.align	2
 27053              		.global	CAN_GetITStatus
 27054              		.thumb
 27055              		.thumb_func
 27057              	CAN_GetITStatus:
 27058              	.LFB132:
1465:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1466:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1467:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1471:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1487:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 27059              		.loc 1 1488 0
 27060              		.cfi_startproc
 27061              		@ args = 0, pretend = 0, frame = 16
 27062              		@ frame_needed = 1, uses_anonymous_args = 0
 27063 0000 80B5     		push	{r7, lr}
 27064              	.LCFI66:
 27065              		.cfi_def_cfa_offset 8
 27066 0002 84B0     		sub	sp, sp, #16
 27067              	.LCFI67:
 27068              		.cfi_def_cfa_offset 24
 27069 0004 00AF     		add	r7, sp, #0
 27070              		.cfi_offset 14, -4
 27071              		.cfi_offset 7, -8
 27072              	.LCFI68:
 27073              		.cfi_def_cfa_register 7
 27074 0006 7860     		str	r0, [r7, #4]
 27075 0008 3960     		str	r1, [r7, #0]
1489:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 27076              		.loc 1 1489 0
 27077 000a 4FF00003 		mov	r3, #0
 27078 000e FB73     		strb	r3, [r7, #15]
1490:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1491:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1494:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1495:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 27079              		.loc 1 1495 0
 27080 0010 7B68     		ldr	r3, [r7, #4]
 27081 0012 5A69     		ldr	r2, [r3, #20]
 27082 0014 3B68     		ldr	r3, [r7, #0]
 27083 0016 02EA0303 		and	r3, r2, r3
 27084 001a 002B     		cmp	r3, #0
 27085 001c 00F0C180 		beq	.L144
1496:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1497:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 27086              		.loc 1 1498 0
 27087 0020 3B68     		ldr	r3, [r7, #0]
 27088 0022 402B     		cmp	r3, #64
 27089 0024 68D0     		beq	.L152
 27090 0026 402B     		cmp	r3, #64
 27091 0028 0FD8     		bhi	.L160
 27092 002a 042B     		cmp	r3, #4
 27093 002c 3CD0     		beq	.L148
 27094 002e 042B     		cmp	r3, #4
 27095 0030 04D8     		bhi	.L161
 27096 0032 012B     		cmp	r3, #1
 27097 0034 25D0     		beq	.L146
 27098 0036 022B     		cmp	r3, #2
 27099 0038 2CD0     		beq	.L147
 27100 003a AEE0     		b	.L145
 27101              	.L161:
 27102 003c 102B     		cmp	r3, #16
 27103 003e 47D0     		beq	.L150
 27104 0040 202B     		cmp	r3, #32
 27105 0042 4FD0     		beq	.L151
 27106 0044 082B     		cmp	r3, #8
 27107 0046 39D0     		beq	.L149
 27108 0048 A7E0     		b	.L145
 27109              	.L160:
 27110 004a B3F5006F 		cmp	r3, #2048
 27111 004e 00F08F80 		beq	.L156
 27112 0052 B3F5006F 		cmp	r3, #2048
 27113 0056 09D8     		bhi	.L162
 27114 0058 B3F5007F 		cmp	r3, #512
 27115 005c 74D0     		beq	.L154
 27116 005e B3F5806F 		cmp	r3, #1024
 27117 0062 7BD0     		beq	.L155
 27118 0064 B3F5807F 		cmp	r3, #256
 27119 0068 64D0     		beq	.L153
 27120 006a 96E0     		b	.L145
 27121              	.L162:
 27122 006c B3F5803F 		cmp	r3, #65536
 27123 0070 4CD0     		beq	.L158
 27124 0072 B3F5003F 		cmp	r3, #131072
 27125 0076 53D0     		beq	.L159
 27126 0078 B3F5004F 		cmp	r3, #32768
 27127 007c 00F08280 		beq	.L157
 27128 0080 8BE0     		b	.L145
 27129              	.L146:
1499:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1500:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1501:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 27130              		.loc 1 1502 0
 27131 0082 7B68     		ldr	r3, [r7, #4]
 27132 0084 9B68     		ldr	r3, [r3, #8]
 27133 0086 1846     		mov	r0, r3
 27134 0088 4A49     		ldr	r1, .L165
 27135 008a FFF7FEFF 		bl	CheckITStatus
 27136 008e 0346     		mov	r3, r0
 27137 0090 FB73     		strb	r3, [r7, #15]
1503:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27138              		.loc 1 1503 0
 27139 0092 89E0     		b	.L164
 27140              	.L147:
1504:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1505:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 27141              		.loc 1 1506 0
 27142 0094 7B68     		ldr	r3, [r7, #4]
 27143 0096 DB68     		ldr	r3, [r3, #12]
 27144 0098 1846     		mov	r0, r3
 27145 009a 4FF00301 		mov	r1, #3
 27146 009e FFF7FEFF 		bl	CheckITStatus
 27147 00a2 0346     		mov	r3, r0
 27148 00a4 FB73     		strb	r3, [r7, #15]
1507:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27149              		.loc 1 1507 0
 27150 00a6 7FE0     		b	.L164
 27151              	.L148:
1508:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1509:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 27152              		.loc 1 1510 0
 27153 00a8 7B68     		ldr	r3, [r7, #4]
 27154 00aa DB68     		ldr	r3, [r3, #12]
 27155 00ac 1846     		mov	r0, r3
 27156 00ae 4FF00801 		mov	r1, #8
 27157 00b2 FFF7FEFF 		bl	CheckITStatus
 27158 00b6 0346     		mov	r3, r0
 27159 00b8 FB73     		strb	r3, [r7, #15]
1511:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27160              		.loc 1 1511 0
 27161 00ba 75E0     		b	.L164
 27162              	.L149:
1512:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1513:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 27163              		.loc 1 1514 0
 27164 00bc 7B68     		ldr	r3, [r7, #4]
 27165 00be DB68     		ldr	r3, [r3, #12]
 27166 00c0 1846     		mov	r0, r3
 27167 00c2 4FF01001 		mov	r1, #16
 27168 00c6 FFF7FEFF 		bl	CheckITStatus
 27169 00ca 0346     		mov	r3, r0
 27170 00cc FB73     		strb	r3, [r7, #15]
1515:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27171              		.loc 1 1515 0
 27172 00ce 6BE0     		b	.L164
 27173              	.L150:
1516:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1517:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 27174              		.loc 1 1518 0
 27175 00d0 7B68     		ldr	r3, [r7, #4]
 27176 00d2 1B69     		ldr	r3, [r3, #16]
 27177 00d4 1846     		mov	r0, r3
 27178 00d6 4FF00301 		mov	r1, #3
 27179 00da FFF7FEFF 		bl	CheckITStatus
 27180 00de 0346     		mov	r3, r0
 27181 00e0 FB73     		strb	r3, [r7, #15]
1519:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27182              		.loc 1 1519 0
 27183 00e2 61E0     		b	.L164
 27184              	.L151:
1520:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1521:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 27185              		.loc 1 1522 0
 27186 00e4 7B68     		ldr	r3, [r7, #4]
 27187 00e6 1B69     		ldr	r3, [r3, #16]
 27188 00e8 1846     		mov	r0, r3
 27189 00ea 4FF00801 		mov	r1, #8
 27190 00ee FFF7FEFF 		bl	CheckITStatus
 27191 00f2 0346     		mov	r3, r0
 27192 00f4 FB73     		strb	r3, [r7, #15]
1523:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27193              		.loc 1 1523 0
 27194 00f6 57E0     		b	.L164
 27195              	.L152:
1524:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1525:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 27196              		.loc 1 1526 0
 27197 00f8 7B68     		ldr	r3, [r7, #4]
 27198 00fa 1B69     		ldr	r3, [r3, #16]
 27199 00fc 1846     		mov	r0, r3
 27200 00fe 4FF01001 		mov	r1, #16
 27201 0102 FFF7FEFF 		bl	CheckITStatus
 27202 0106 0346     		mov	r3, r0
 27203 0108 FB73     		strb	r3, [r7, #15]
1527:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27204              		.loc 1 1527 0
 27205 010a 4DE0     		b	.L164
 27206              	.L158:
1528:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1529:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 27207              		.loc 1 1530 0
 27208 010c 7B68     		ldr	r3, [r7, #4]
 27209 010e 5B68     		ldr	r3, [r3, #4]
 27210 0110 1846     		mov	r0, r3
 27211 0112 4FF00801 		mov	r1, #8
 27212 0116 FFF7FEFF 		bl	CheckITStatus
 27213 011a 0346     		mov	r3, r0
 27214 011c FB73     		strb	r3, [r7, #15]
1531:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27215              		.loc 1 1531 0
 27216 011e 43E0     		b	.L164
 27217              	.L159:
1532:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1533:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 27218              		.loc 1 1534 0
 27219 0120 7B68     		ldr	r3, [r7, #4]
 27220 0122 5B68     		ldr	r3, [r3, #4]
 27221 0124 1846     		mov	r0, r3
 27222 0126 4FF01001 		mov	r1, #16
 27223 012a FFF7FEFF 		bl	CheckITStatus
 27224 012e 0346     		mov	r3, r0
 27225 0130 FB73     		strb	r3, [r7, #15]
1535:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27226              		.loc 1 1535 0
 27227 0132 39E0     		b	.L164
 27228              	.L153:
1536:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1537:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 27229              		.loc 1 1538 0
 27230 0134 7B68     		ldr	r3, [r7, #4]
 27231 0136 9B69     		ldr	r3, [r3, #24]
 27232 0138 1846     		mov	r0, r3
 27233 013a 4FF00101 		mov	r1, #1
 27234 013e FFF7FEFF 		bl	CheckITStatus
 27235 0142 0346     		mov	r3, r0
 27236 0144 FB73     		strb	r3, [r7, #15]
1539:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27237              		.loc 1 1539 0
 27238 0146 2FE0     		b	.L164
 27239              	.L154:
1540:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1541:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 27240              		.loc 1 1542 0
 27241 0148 7B68     		ldr	r3, [r7, #4]
 27242 014a 9B69     		ldr	r3, [r3, #24]
 27243 014c 1846     		mov	r0, r3
 27244 014e 4FF00201 		mov	r1, #2
 27245 0152 FFF7FEFF 		bl	CheckITStatus
 27246 0156 0346     		mov	r3, r0
 27247 0158 FB73     		strb	r3, [r7, #15]
1543:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27248              		.loc 1 1543 0
 27249 015a 25E0     		b	.L164
 27250              	.L155:
1544:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1545:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 27251              		.loc 1 1546 0
 27252 015c 7B68     		ldr	r3, [r7, #4]
 27253 015e 9B69     		ldr	r3, [r3, #24]
 27254 0160 1846     		mov	r0, r3
 27255 0162 4FF00401 		mov	r1, #4
 27256 0166 FFF7FEFF 		bl	CheckITStatus
 27257 016a 0346     		mov	r3, r0
 27258 016c FB73     		strb	r3, [r7, #15]
1547:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27259              		.loc 1 1547 0
 27260 016e 1BE0     		b	.L164
 27261              	.L156:
1548:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1549:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 27262              		.loc 1 1550 0
 27263 0170 7B68     		ldr	r3, [r7, #4]
 27264 0172 9B69     		ldr	r3, [r3, #24]
 27265 0174 1846     		mov	r0, r3
 27266 0176 4FF07001 		mov	r1, #112
 27267 017a FFF7FEFF 		bl	CheckITStatus
 27268 017e 0346     		mov	r3, r0
 27269 0180 FB73     		strb	r3, [r7, #15]
1551:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27270              		.loc 1 1551 0
 27271 0182 11E0     		b	.L164
 27272              	.L157:
1552:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1553:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 27273              		.loc 1 1554 0
 27274 0184 7B68     		ldr	r3, [r7, #4]
 27275 0186 5B68     		ldr	r3, [r3, #4]
 27276 0188 1846     		mov	r0, r3
 27277 018a 4FF00401 		mov	r1, #4
 27278 018e FFF7FEFF 		bl	CheckITStatus
 27279 0192 0346     		mov	r3, r0
 27280 0194 FB73     		strb	r3, [r7, #15]
1555:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27281              		.loc 1 1555 0
 27282 0196 00BF     		nop
 27283 0198 06E0     		b	.L164
 27284              	.L145:
1556:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1557:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1558:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 27285              		.loc 1 1558 0
 27286 019a 4FF00003 		mov	r3, #0
 27287 019e FB73     		strb	r3, [r7, #15]
1559:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 27288              		.loc 1 1559 0
 27289 01a0 02E0     		b	.L164
 27290              	.L144:
1560:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1561:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1562:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1563:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1564:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
 27291              		.loc 1 1565 0
 27292 01a2 4FF00003 		mov	r3, #0
 27293 01a6 FB73     		strb	r3, [r7, #15]
 27294              	.L164:
1566:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1567:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1568:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1569:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
 27295              		.loc 1 1569 0
 27296 01a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1570:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 27297              		.loc 1 1570 0
 27298 01aa 1846     		mov	r0, r3
 27299 01ac 07F11007 		add	r7, r7, #16
 27300 01b0 BD46     		mov	sp, r7
 27301 01b2 80BD     		pop	{r7, pc}
 27302              	.L166:
 27303              		.align	2
 27304              	.L165:
 27305 01b4 01010100 		.word	65793
 27306              		.cfi_endproc
 27307              	.LFE132:
 27309              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 27310              		.align	2
 27311              		.global	CAN_ClearITPendingBit
 27312              		.thumb
 27313              		.thumb_func
 27315              	CAN_ClearITPendingBit:
 27316              	.LFB133:
1571:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1572:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1573:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1577:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1590:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1591:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 27317              		.loc 1 1592 0
 27318              		.cfi_startproc
 27319              		@ args = 0, pretend = 0, frame = 8
 27320              		@ frame_needed = 1, uses_anonymous_args = 0
 27321              		@ link register save eliminated.
 27322 0000 80B4     		push	{r7}
 27323              	.LCFI69:
 27324              		.cfi_def_cfa_offset 4
 27325 0002 83B0     		sub	sp, sp, #12
 27326              	.LCFI70:
 27327              		.cfi_def_cfa_offset 16
 27328 0004 00AF     		add	r7, sp, #0
 27329              		.cfi_offset 7, -4
 27330              	.LCFI71:
 27331              		.cfi_def_cfa_register 7
 27332 0006 7860     		str	r0, [r7, #4]
 27333 0008 3960     		str	r1, [r7, #0]
1593:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1594:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 27334              		.loc 1 1597 0
 27335 000a 3B68     		ldr	r3, [r7, #0]
 27336 000c B3F5807F 		cmp	r3, #256
 27337 0010 49D0     		beq	.L174
 27338 0012 B3F5807F 		cmp	r3, #256
 27339 0016 0DD8     		bhi	.L181
 27340 0018 082B     		cmp	r3, #8
 27341 001a 2BD0     		beq	.L171
 27342 001c 082B     		cmp	r3, #8
 27343 001e 04D8     		bhi	.L182
 27344 0020 012B     		cmp	r3, #1
 27345 0022 1ED0     		beq	.L169
 27346 0024 042B     		cmp	r3, #4
 27347 0026 20D0     		beq	.L170
1598:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1599:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1600:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1602:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1603:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1604:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1606:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1607:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1608:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1610:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1611:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1612:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1614:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1615:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1616:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1618:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1619:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1620:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1622:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1623:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1624:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1626:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1627:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1628:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1630:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1632:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1633:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1635:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1637:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1638:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1640:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1642:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1643:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1644:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1645:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1647:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1648:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1649:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1650:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1651:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1653:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1655:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1656:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 27348              		.loc 1 1656 0
 27349 0028 5EE0     		b	.L167
 27350              	.L182:
1597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 27351              		.loc 1 1597 0
 27352 002a 202B     		cmp	r3, #32
 27353 002c 27D0     		beq	.L172
 27354 002e 402B     		cmp	r3, #64
 27355 0030 2AD0     		beq	.L173
 27356              		.loc 1 1656 0
 27357 0032 59E0     		b	.L167
 27358              	.L181:
1597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 27359              		.loc 1 1597 0
 27360 0034 B3F5006F 		cmp	r3, #2048
 27361 0038 44D0     		beq	.L177
 27362 003a B3F5006F 		cmp	r3, #2048
 27363 003e 06D8     		bhi	.L183
 27364 0040 B3F5007F 		cmp	r3, #512
 27365 0044 34D0     		beq	.L175
 27366 0046 B3F5806F 		cmp	r3, #1024
 27367 004a 36D0     		beq	.L176
 27368              		.loc 1 1656 0
 27369 004c 4CE0     		b	.L167
 27370              	.L183:
1597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 27371              		.loc 1 1597 0
 27372 004e B3F5803F 		cmp	r3, #65536
 27373 0052 1ED0     		beq	.L179
 27374 0054 B3F5003F 		cmp	r3, #131072
 27375 0058 20D0     		beq	.L180
 27376 005a B3F5004F 		cmp	r3, #32768
 27377 005e 3AD0     		beq	.L178
 27378              		.loc 1 1656 0
 27379 0060 42E0     		b	.L167
 27380              	.L169:
1601:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
 27381              		.loc 1 1601 0
 27382 0062 7B68     		ldr	r3, [r7, #4]
 27383 0064 234A     		ldr	r2, .L185
 27384 0066 9A60     		str	r2, [r3, #8]
1602:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27385              		.loc 1 1602 0
 27386 0068 3EE0     		b	.L167
 27387              	.L170:
1605:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
 27388              		.loc 1 1605 0
 27389 006a 7B68     		ldr	r3, [r7, #4]
 27390 006c 4FF00802 		mov	r2, #8
 27391 0070 DA60     		str	r2, [r3, #12]
1606:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27392              		.loc 1 1606 0
 27393 0072 39E0     		b	.L167
 27394              	.L171:
1609:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
 27395              		.loc 1 1609 0
 27396 0074 7B68     		ldr	r3, [r7, #4]
 27397 0076 4FF01002 		mov	r2, #16
 27398 007a DA60     		str	r2, [r3, #12]
1610:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27399              		.loc 1 1610 0
 27400 007c 34E0     		b	.L167
 27401              	.L172:
1613:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
 27402              		.loc 1 1613 0
 27403 007e 7B68     		ldr	r3, [r7, #4]
 27404 0080 4FF00802 		mov	r2, #8
 27405 0084 1A61     		str	r2, [r3, #16]
1614:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27406              		.loc 1 1614 0
 27407 0086 2FE0     		b	.L167
 27408              	.L173:
1617:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
 27409              		.loc 1 1617 0
 27410 0088 7B68     		ldr	r3, [r7, #4]
 27411 008a 4FF01002 		mov	r2, #16
 27412 008e 1A61     		str	r2, [r3, #16]
1618:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27413              		.loc 1 1618 0
 27414 0090 2AE0     		b	.L167
 27415              	.L179:
1621:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
 27416              		.loc 1 1621 0
 27417 0092 7B68     		ldr	r3, [r7, #4]
 27418 0094 4FF00802 		mov	r2, #8
 27419 0098 5A60     		str	r2, [r3, #4]
1622:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27420              		.loc 1 1622 0
 27421 009a 25E0     		b	.L167
 27422              	.L180:
1625:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
 27423              		.loc 1 1625 0
 27424 009c 7B68     		ldr	r3, [r7, #4]
 27425 009e 4FF01002 		mov	r2, #16
 27426 00a2 5A60     		str	r2, [r3, #4]
1626:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27427              		.loc 1 1626 0
 27428 00a4 20E0     		b	.L167
 27429              	.L174:
1629:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
 27430              		.loc 1 1629 0
 27431 00a6 7B68     		ldr	r3, [r7, #4]
 27432 00a8 4FF00402 		mov	r2, #4
 27433 00ac 5A60     		str	r2, [r3, #4]
1631:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27434              		.loc 1 1631 0
 27435 00ae 1BE0     		b	.L167
 27436              	.L175:
1634:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 27437              		.loc 1 1634 0
 27438 00b0 7B68     		ldr	r3, [r7, #4]
 27439 00b2 4FF00402 		mov	r2, #4
 27440 00b6 5A60     		str	r2, [r3, #4]
1636:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27441              		.loc 1 1636 0
 27442 00b8 16E0     		b	.L167
 27443              	.L176:
1639:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 27444              		.loc 1 1639 0
 27445 00ba 7B68     		ldr	r3, [r7, #4]
 27446 00bc 4FF00402 		mov	r2, #4
 27447 00c0 5A60     		str	r2, [r3, #4]
1641:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 27448              		.loc 1 1641 0
 27449 00c2 11E0     		b	.L167
 27450              	.L177:
1644:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 27451              		.loc 1 1644 0
 27452 00c4 7B68     		ldr	r3, [r7, #4]
 27453 00c6 4FF00002 		mov	r2, #0
 27454 00ca 9A61     		str	r2, [r3, #24]
1646:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 27455              		.loc 1 1646 0
 27456 00cc 7B68     		ldr	r3, [r7, #4]
 27457 00ce 4FF00402 		mov	r2, #4
 27458 00d2 5A60     		str	r2, [r3, #4]
1647:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 27459              		.loc 1 1647 0
 27460 00d4 08E0     		b	.L167
 27461              	.L178:
1650:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
 27462              		.loc 1 1650 0
 27463 00d6 7B68     		ldr	r3, [r7, #4]
 27464 00d8 4FF00002 		mov	r2, #0
 27465 00dc 9A61     		str	r2, [r3, #24]
1652:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
 27466              		.loc 1 1652 0
 27467 00de 7B68     		ldr	r3, [r7, #4]
 27468 00e0 4FF00402 		mov	r2, #4
 27469 00e4 5A60     		str	r2, [r3, #4]
1654:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 27470              		.loc 1 1654 0
 27471 00e6 00BF     		nop
 27472              	.L167:
1657:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1658:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 27473              		.loc 1 1658 0
 27474 00e8 07F10C07 		add	r7, r7, #12
 27475 00ec BD46     		mov	sp, r7
 27476 00ee 80BC     		pop	{r7}
 27477 00f0 7047     		bx	lr
 27478              	.L186:
 27479 00f2 00BF     		.align	2
 27480              	.L185:
 27481 00f4 01010100 		.word	65793
 27482              		.cfi_endproc
 27483              	.LFE133:
 27485              		.section	.text.CheckITStatus,"ax",%progbits
 27486              		.align	2
 27487              		.thumb
 27488              		.thumb_func
 27490              	CheckITStatus:
 27491              	.LFB134:
1659:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1660:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1661:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1662:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1663:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1664:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1669:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 27492              		.loc 1 1670 0
 27493              		.cfi_startproc
 27494              		@ args = 0, pretend = 0, frame = 16
 27495              		@ frame_needed = 1, uses_anonymous_args = 0
 27496              		@ link register save eliminated.
 27497 0000 80B4     		push	{r7}
 27498              	.LCFI72:
 27499              		.cfi_def_cfa_offset 4
 27500 0002 85B0     		sub	sp, sp, #20
 27501              	.LCFI73:
 27502              		.cfi_def_cfa_offset 24
 27503 0004 00AF     		add	r7, sp, #0
 27504              		.cfi_offset 7, -4
 27505              	.LCFI74:
 27506              		.cfi_def_cfa_register 7
 27507 0006 7860     		str	r0, [r7, #4]
 27508 0008 3960     		str	r1, [r7, #0]
1671:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
 27509              		.loc 1 1671 0
 27510 000a 4FF00003 		mov	r3, #0
 27511 000e FB73     		strb	r3, [r7, #15]
1672:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1673:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 27512              		.loc 1 1673 0
 27513 0010 7A68     		ldr	r2, [r7, #4]
 27514 0012 3B68     		ldr	r3, [r7, #0]
 27515 0014 02EA0303 		and	r3, r2, r3
 27516 0018 002B     		cmp	r3, #0
 27517 001a 03D0     		beq	.L188
1674:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1675:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1676:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
 27518              		.loc 1 1676 0
 27519 001c 4FF00103 		mov	r3, #1
 27520 0020 FB73     		strb	r3, [r7, #15]
 27521 0022 02E0     		b	.L189
 27522              	.L188:
1677:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1678:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1679:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1680:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1681:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 27523              		.loc 1 1681 0
 27524 0024 4FF00003 		mov	r3, #0
 27525 0028 FB73     		strb	r3, [r7, #15]
 27526              	.L189:
1682:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1683:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return pendingbitstatus;
 27527              		.loc 1 1683 0
 27528 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1684:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 27529              		.loc 1 1684 0
 27530 002c 1846     		mov	r0, r3
 27531 002e 07F11407 		add	r7, r7, #20
 27532 0032 BD46     		mov	sp, r7
 27533 0034 80BC     		pop	{r7}
 27534 0036 7047     		bx	lr
 27535              		.cfi_endproc
 27536              	.LFE134:
 27538              		.text
 27539              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_can.c
     /tmp/ccuRzy2a.s:24617  .text.CAN_DeInit:00000000 $t
     /tmp/ccuRzy2a.s:24622  .text.CAN_DeInit:00000000 CAN_DeInit
     /tmp/ccuRzy2a.s:24671  .text.CAN_DeInit:0000004c $d
     /tmp/ccuRzy2a.s:24676  .text.CAN_Init:00000000 $t
     /tmp/ccuRzy2a.s:24681  .text.CAN_Init:00000000 CAN_Init
     /tmp/ccuRzy2a.s:24958  .text.CAN_FilterInit:00000000 $t
     /tmp/ccuRzy2a.s:24963  .text.CAN_FilterInit:00000000 CAN_FilterInit
     /tmp/ccuRzy2a.s:25176  .text.CAN_FilterInit:00000198 $d
     /tmp/ccuRzy2a.s:25181  .text.CAN_StructInit:00000000 $t
     /tmp/ccuRzy2a.s:25186  .text.CAN_StructInit:00000000 CAN_StructInit
     /tmp/ccuRzy2a.s:25257  .text.CAN_SlaveStartBank:00000000 $t
     /tmp/ccuRzy2a.s:25262  .text.CAN_SlaveStartBank:00000000 CAN_SlaveStartBank
     /tmp/ccuRzy2a.s:25316  .text.CAN_SlaveStartBank:00000060 $d
     /tmp/ccuRzy2a.s:25321  .text.CAN_DBGFreeze:00000000 $t
     /tmp/ccuRzy2a.s:25326  .text.CAN_DBGFreeze:00000000 CAN_DBGFreeze
     /tmp/ccuRzy2a.s:25374  .text.CAN_TTComModeCmd:00000000 $t
     /tmp/ccuRzy2a.s:25379  .text.CAN_TTComModeCmd:00000000 CAN_TTComModeCmd
     /tmp/ccuRzy2a.s:25463  .text.CAN_Transmit:00000000 $t
     /tmp/ccuRzy2a.s:25468  .text.CAN_Transmit:00000000 CAN_Transmit
     /tmp/ccuRzy2a.s:25723  .text.CAN_TransmitStatus:00000000 $t
     /tmp/ccuRzy2a.s:25728  .text.CAN_TransmitStatus:00000000 CAN_TransmitStatus
     /tmp/ccuRzy2a.s:25882  .text.CAN_TransmitStatus:000000d8 $d
     /tmp/ccuRzy2a.s:25892  .text.CAN_CancelTransmit:00000000 $t
     /tmp/ccuRzy2a.s:25897  .text.CAN_CancelTransmit:00000000 CAN_CancelTransmit
     /tmp/ccuRzy2a.s:25966  .text.CAN_Receive:00000000 $t
     /tmp/ccuRzy2a.s:25971  .text.CAN_Receive:00000000 CAN_Receive
     /tmp/ccuRzy2a.s:26181  .text.CAN_FIFORelease:00000000 $t
     /tmp/ccuRzy2a.s:26186  .text.CAN_FIFORelease:00000000 CAN_FIFORelease
     /tmp/ccuRzy2a.s:26234  .text.CAN_MessagePending:00000000 $t
     /tmp/ccuRzy2a.s:26239  .text.CAN_MessagePending:00000000 CAN_MessagePending
     /tmp/ccuRzy2a.s:26302  .text.CAN_OperatingModeRequest:00000000 $t
     /tmp/ccuRzy2a.s:26307  .text.CAN_OperatingModeRequest:00000000 CAN_OperatingModeRequest
     /tmp/ccuRzy2a.s:26486  .text.CAN_Sleep:00000000 $t
     /tmp/ccuRzy2a.s:26491  .text.CAN_Sleep:00000000 CAN_Sleep
     /tmp/ccuRzy2a.s:26541  .text.CAN_WakeUp:00000000 $t
     /tmp/ccuRzy2a.s:26546  .text.CAN_WakeUp:00000000 CAN_WakeUp
     /tmp/ccuRzy2a.s:26617  .text.CAN_GetLastErrorCode:00000000 $t
     /tmp/ccuRzy2a.s:26622  .text.CAN_GetLastErrorCode:00000000 CAN_GetLastErrorCode
     /tmp/ccuRzy2a.s:26661  .text.CAN_GetReceiveErrorCounter:00000000 $t
     /tmp/ccuRzy2a.s:26666  .text.CAN_GetReceiveErrorCounter:00000000 CAN_GetReceiveErrorCounter
     /tmp/ccuRzy2a.s:26704  .text.CAN_GetLSBTransmitErrorCounter:00000000 $t
     /tmp/ccuRzy2a.s:26709  .text.CAN_GetLSBTransmitErrorCounter:00000000 CAN_GetLSBTransmitErrorCounter
     /tmp/ccuRzy2a.s:26748  .text.CAN_ITConfig:00000000 $t
     /tmp/ccuRzy2a.s:26753  .text.CAN_ITConfig:00000000 CAN_ITConfig
     /tmp/ccuRzy2a.s:26805  .text.CAN_GetFlagStatus:00000000 $t
     /tmp/ccuRzy2a.s:26810  .text.CAN_GetFlagStatus:00000000 CAN_GetFlagStatus
     /tmp/ccuRzy2a.s:26958  .text.CAN_ClearFlag:00000000 $t
     /tmp/ccuRzy2a.s:26963  .text.CAN_ClearFlag:00000000 CAN_ClearFlag
     /tmp/ccuRzy2a.s:27047  .text.CAN_ClearFlag:00000074 $d
     /tmp/ccuRzy2a.s:27052  .text.CAN_GetITStatus:00000000 $t
     /tmp/ccuRzy2a.s:27057  .text.CAN_GetITStatus:00000000 CAN_GetITStatus
     /tmp/ccuRzy2a.s:27490  .text.CheckITStatus:00000000 CheckITStatus
     /tmp/ccuRzy2a.s:27305  .text.CAN_GetITStatus:000001b4 $d
     /tmp/ccuRzy2a.s:27310  .text.CAN_ClearITPendingBit:00000000 $t
     /tmp/ccuRzy2a.s:27315  .text.CAN_ClearITPendingBit:00000000 CAN_ClearITPendingBit
     /tmp/ccuRzy2a.s:27481  .text.CAN_ClearITPendingBit:000000f4 $d
     /tmp/ccuRzy2a.s:27486  .text.CheckITStatus:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
