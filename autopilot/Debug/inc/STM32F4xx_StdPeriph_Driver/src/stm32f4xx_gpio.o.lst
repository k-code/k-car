   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_gpio.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c"
 24575              		.align	2
 24576              		.global	GPIO_DeInit
 24577              		.thumb
 24578              		.thumb_func
 24580              	GPIO_DeInit:
 24581              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @file    stm32f4xx_gpio.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          functionalities of the GPIO peripheral:           
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - Initialization and Configuration
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Read and Write
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           - GPIO Alternate functions configuration
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @verbatim
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                 How to use this driver
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          ===================================================================       
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           1. Enable the GPIO AHB clock using the following function
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *           2. Configure the GPIO pin(s) using GPIO_Init()
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              Four possible configuration are available for each pin:
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Input: Floating, Pull-up, Pull-down.
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Output: Push-Pull (Pull-up, Pull-down or no Pull)
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          Open Drain (Pull-up, Pull-down or no Pull).
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  In output mode, the speed is configurable: 2 MHz, 25 MHz,
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  50 MHz or 100 MHz.
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Alternate Function: Push-Pull (Pull-up, Pull-down or no Pull)
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                                      Open Drain (Pull-up, Pull-down or no Pull).
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                - Analog: required mode when a pin is to be used as ADC channel
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                          or DAC output.
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * 
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          3- Peripherals alternate function:
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For ADC and DAC, configure the desired pin in analog mode using 
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                  GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AN;
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *              - For other peripherals (TIM, USART...):
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Configure the desired pin in alternate function mode using
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *                 - Call GPIO_Init() function
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *        
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          4. To get the level of a pin configured in input mode use GPIO_ReadInputDataBit()
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          5. To set/reset the level of a pin configured in output mode use
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             GPIO_SetBits()/GPIO_ResetBits()
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *               
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          6. During and just after reset, the alternate functions are not 
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             active and the GPIO pins are configured in input floating mode
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             (except JTAG pins).
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          7. The LSE oscillator pins OSC32_IN and OSC32_OUT can be used as 
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose (PC14 and PC15, respectively) when the LSE
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The LSE has priority over the GPIO function.
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          8. The HSE oscillator pins OSC_IN/OSC_OUT can be used as 
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             general-purpose PH0 and PH1, respectively, when the HSE 
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             oscillator is off. The HSE has priority over the GPIO function.
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *             
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *  @endverbatim        
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @attention
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   ******************************************************************************
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Includes ------------------------------------------------------------------*/
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_gpio.h"
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** #include "stm32f4xx_rcc.h"
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO 
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief GPIO driver modules
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private define ------------------------------------------------------------*/
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private macro -------------------------------------------------------------*/
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private variables ---------------------------------------------------------*/
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /* Private functions ---------------------------------------------------------*/
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Private_Functions
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */ 
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group1 Initialization and Configuration
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   Initialization and Configuration
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                         Initialization and Configuration
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Deinitializes the GPIOx peripheral registers to their default reset values.
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   By default, The GPIO pins are configured in input floating mode (except JTAG pins).
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 24582              		.loc 1 121 0
 24583              		.cfi_startproc
 24584              		@ args = 0, pretend = 0, frame = 8
 24585              		@ frame_needed = 1, uses_anonymous_args = 0
 24586 0000 80B5     		push	{r7, lr}
 24587              	.LCFI0:
 24588              		.cfi_def_cfa_offset 8
 24589 0002 82B0     		sub	sp, sp, #8
 24590              	.LCFI1:
 24591              		.cfi_def_cfa_offset 16
 24592 0004 00AF     		add	r7, sp, #0
 24593              		.cfi_offset 14, -4
 24594              		.cfi_offset 7, -8
 24595              	.LCFI2:
 24596              		.cfi_def_cfa_register 7
 24597 0006 7860     		str	r0, [r7, #4]
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (GPIOx == GPIOA)
 24598              		.loc 1 125 0
 24599 0008 7A68     		ldr	r2, [r7, #4]
 24600 000a 4D4B     		ldr	r3, .L11
 24601 000c 9A42     		cmp	r2, r3
 24602 000e 0CD1     		bne	.L2
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
 24603              		.loc 1 127 0
 24604 0010 4FF00100 		mov	r0, #1
 24605 0014 4FF00101 		mov	r1, #1
 24606 0018 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
 24607              		.loc 1 128 0
 24608 001c 4FF00100 		mov	r0, #1
 24609 0020 4FF00001 		mov	r1, #0
 24610 0024 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 24611 0028 86E0     		b	.L1
 24612              	.L2:
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOB)
 24613              		.loc 1 130 0
 24614 002a 7A68     		ldr	r2, [r7, #4]
 24615 002c 454B     		ldr	r3, .L11+4
 24616 002e 9A42     		cmp	r2, r3
 24617 0030 0CD1     		bne	.L4
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
 24618              		.loc 1 132 0
 24619 0032 4FF00200 		mov	r0, #2
 24620 0036 4FF00101 		mov	r1, #1
 24621 003a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
 24622              		.loc 1 133 0
 24623 003e 4FF00200 		mov	r0, #2
 24624 0042 4FF00001 		mov	r1, #0
 24625 0046 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 24626 004a 75E0     		b	.L1
 24627              	.L4:
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOC)
 24628              		.loc 1 135 0
 24629 004c 7A68     		ldr	r2, [r7, #4]
 24630 004e 3E4B     		ldr	r3, .L11+8
 24631 0050 9A42     		cmp	r2, r3
 24632 0052 0CD1     		bne	.L5
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
 24633              		.loc 1 137 0
 24634 0054 4FF00400 		mov	r0, #4
 24635 0058 4FF00101 		mov	r1, #1
 24636 005c FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
 24637              		.loc 1 138 0
 24638 0060 4FF00400 		mov	r0, #4
 24639 0064 4FF00001 		mov	r1, #0
 24640 0068 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 24641 006c 64E0     		b	.L1
 24642              	.L5:
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOD)
 24643              		.loc 1 140 0
 24644 006e 7A68     		ldr	r2, [r7, #4]
 24645 0070 364B     		ldr	r3, .L11+12
 24646 0072 9A42     		cmp	r2, r3
 24647 0074 0CD1     		bne	.L6
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
 24648              		.loc 1 142 0
 24649 0076 4FF00800 		mov	r0, #8
 24650 007a 4FF00101 		mov	r1, #1
 24651 007e FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
 24652              		.loc 1 143 0
 24653 0082 4FF00800 		mov	r0, #8
 24654 0086 4FF00001 		mov	r1, #0
 24655 008a FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 24656 008e 53E0     		b	.L1
 24657              	.L6:
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOE)
 24658              		.loc 1 145 0
 24659 0090 7A68     		ldr	r2, [r7, #4]
 24660 0092 2F4B     		ldr	r3, .L11+16
 24661 0094 9A42     		cmp	r2, r3
 24662 0096 0CD1     		bne	.L7
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
 24663              		.loc 1 147 0
 24664 0098 4FF01000 		mov	r0, #16
 24665 009c 4FF00101 		mov	r1, #1
 24666 00a0 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
 24667              		.loc 1 148 0
 24668 00a4 4FF01000 		mov	r0, #16
 24669 00a8 4FF00001 		mov	r1, #0
 24670 00ac FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 24671 00b0 42E0     		b	.L1
 24672              	.L7:
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOF)
 24673              		.loc 1 150 0
 24674 00b2 7A68     		ldr	r2, [r7, #4]
 24675 00b4 274B     		ldr	r3, .L11+20
 24676 00b6 9A42     		cmp	r2, r3
 24677 00b8 0CD1     		bne	.L8
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
 24678              		.loc 1 152 0
 24679 00ba 4FF02000 		mov	r0, #32
 24680 00be 4FF00101 		mov	r1, #1
 24681 00c2 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
 24682              		.loc 1 153 0
 24683 00c6 4FF02000 		mov	r0, #32
 24684 00ca 4FF00001 		mov	r1, #0
 24685 00ce FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 24686 00d2 31E0     		b	.L1
 24687              	.L8:
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOG)
 24688              		.loc 1 155 0
 24689 00d4 7A68     		ldr	r2, [r7, #4]
 24690 00d6 204B     		ldr	r3, .L11+24
 24691 00d8 9A42     		cmp	r2, r3
 24692 00da 0CD1     		bne	.L9
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
 24693              		.loc 1 157 0
 24694 00dc 4FF04000 		mov	r0, #64
 24695 00e0 4FF00101 		mov	r1, #1
 24696 00e4 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
 24697              		.loc 1 158 0
 24698 00e8 4FF04000 		mov	r0, #64
 24699 00ec 4FF00001 		mov	r1, #0
 24700 00f0 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 24701 00f4 20E0     		b	.L1
 24702              	.L9:
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else if (GPIOx == GPIOH)
 24703              		.loc 1 160 0
 24704 00f6 7A68     		ldr	r2, [r7, #4]
 24705 00f8 184B     		ldr	r3, .L11+28
 24706 00fa 9A42     		cmp	r2, r3
 24707 00fc 0CD1     		bne	.L10
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
 24708              		.loc 1 162 0
 24709 00fe 4FF08000 		mov	r0, #128
 24710 0102 4FF00101 		mov	r1, #1
 24711 0106 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
 24712              		.loc 1 163 0
 24713 010a 4FF08000 		mov	r0, #128
 24714 010e 4FF00001 		mov	r1, #0
 24715 0112 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 24716 0116 0FE0     		b	.L1
 24717              	.L10:
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (GPIOx == GPIOI)
 24718              		.loc 1 167 0
 24719 0118 7A68     		ldr	r2, [r7, #4]
 24720 011a 114B     		ldr	r3, .L11+32
 24721 011c 9A42     		cmp	r2, r3
 24722 011e 0BD1     		bne	.L1
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
 24723              		.loc 1 169 0
 24724 0120 4FF48070 		mov	r0, #256
 24725 0124 4FF00101 		mov	r1, #1
 24726 0128 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
 24727              		.loc 1 170 0
 24728 012c 4FF48070 		mov	r0, #256
 24729 0130 4FF00001 		mov	r1, #0
 24730 0134 FFF7FEFF 		bl	RCC_AHB1PeriphResetCmd
 24731              	.L1:
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 24732              		.loc 1 173 0
 24733 0138 07F10807 		add	r7, r7, #8
 24734 013c BD46     		mov	sp, r7
 24735 013e 80BD     		pop	{r7, pc}
 24736              	.L12:
 24737              		.align	2
 24738              	.L11:
 24739 0140 00000240 		.word	1073872896
 24740 0144 00040240 		.word	1073873920
 24741 0148 00080240 		.word	1073874944
 24742 014c 000C0240 		.word	1073875968
 24743 0150 00100240 		.word	1073876992
 24744 0154 00140240 		.word	1073878016
 24745 0158 00180240 		.word	1073879040
 24746 015c 001C0240 		.word	1073880064
 24747 0160 00200240 		.word	1073881088
 24748              		.cfi_endproc
 24749              	.LFE110:
 24751              		.section	.text.GPIO_Init,"ax",%progbits
 24752              		.align	2
 24753              		.global	GPIO_Init
 24754              		.thumb
 24755              		.thumb_func
 24757              	GPIO_Init:
 24758              	.LFB111:
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Initializes the GPIOx peripheral according to the specified parameters in the GPIO_Init
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that contains
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the configuration information for the specified GPIO peripheral.
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 24759              		.loc 1 183 0
 24760              		.cfi_startproc
 24761              		@ args = 0, pretend = 0, frame = 24
 24762              		@ frame_needed = 1, uses_anonymous_args = 0
 24763              		@ link register save eliminated.
 24764 0000 80B4     		push	{r7}
 24765              	.LCFI3:
 24766              		.cfi_def_cfa_offset 4
 24767 0002 87B0     		sub	sp, sp, #28
 24768              	.LCFI4:
 24769              		.cfi_def_cfa_offset 32
 24770 0004 00AF     		add	r7, sp, #0
 24771              		.cfi_offset 7, -4
 24772              	.LCFI5:
 24773              		.cfi_def_cfa_register 7
 24774 0006 7860     		str	r0, [r7, #4]
 24775 0008 3960     		str	r1, [r7, #0]
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
 24776              		.loc 1 184 0
 24777 000a 4FF00003 		mov	r3, #0
 24778 000e 7B61     		str	r3, [r7, #20]
 24779 0010 4FF00003 		mov	r3, #0
 24780 0014 3B61     		str	r3, [r7, #16]
 24781 0016 4FF00003 		mov	r3, #0
 24782 001a FB60     		str	r3, [r7, #12]
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* -------------------------Configure the port pins---------------- */
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /*-- GPIO Mode Configuration --*/
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 24783              		.loc 1 194 0
 24784 001c 4FF00003 		mov	r3, #0
 24785 0020 7B61     		str	r3, [r7, #20]
 24786 0022 87E0     		b	.L14
 24787              	.L18:
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     pos = ((uint32_t)0x01) << pinpos;
 24788              		.loc 1 196 0
 24789 0024 7B69     		ldr	r3, [r7, #20]
 24790 0026 4FF00102 		mov	r2, #1
 24791 002a 02FA03F3 		lsl	r3, r2, r3
 24792 002e 3B61     		str	r3, [r7, #16]
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     /* Get the port pins position */
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 24793              		.loc 1 198 0
 24794 0030 3B68     		ldr	r3, [r7, #0]
 24795 0032 1A68     		ldr	r2, [r3, #0]
 24796 0034 3B69     		ldr	r3, [r7, #16]
 24797 0036 02EA0303 		and	r3, r2, r3
 24798 003a FB60     		str	r3, [r7, #12]
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     if (currentpin == pos)
 24799              		.loc 1 200 0
 24800 003c FA68     		ldr	r2, [r7, #12]
 24801 003e 3B69     		ldr	r3, [r7, #16]
 24802 0040 9A42     		cmp	r2, r3
 24803 0042 73D1     		bne	.L15
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     {
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
 24804              		.loc 1 202 0
 24805 0044 7B68     		ldr	r3, [r7, #4]
 24806 0046 1A68     		ldr	r2, [r3, #0]
 24807 0048 7B69     		ldr	r3, [r7, #20]
 24808 004a 4FEA4303 		lsl	r3, r3, #1
 24809 004e 4FF00301 		mov	r1, #3
 24810 0052 01FA03F3 		lsl	r3, r1, r3
 24811 0056 6FEA0303 		mvn	r3, r3
 24812 005a 1A40     		ands	r2, r2, r3
 24813 005c 7B68     		ldr	r3, [r7, #4]
 24814 005e 1A60     		str	r2, [r3, #0]
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
 24815              		.loc 1 203 0
 24816 0060 7B68     		ldr	r3, [r7, #4]
 24817 0062 1A68     		ldr	r2, [r3, #0]
 24818 0064 3B68     		ldr	r3, [r7, #0]
 24819 0066 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24820 0068 1946     		mov	r1, r3
 24821 006a 7B69     		ldr	r3, [r7, #20]
 24822 006c 4FEA4303 		lsl	r3, r3, #1
 24823 0070 01FA03F3 		lsl	r3, r1, r3
 24824 0074 1A43     		orrs	r2, r2, r3
 24825 0076 7B68     		ldr	r3, [r7, #4]
 24826 0078 1A60     		str	r2, [r3, #0]
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode
 24827              		.loc 1 205 0
 24828 007a 3B68     		ldr	r3, [r7, #0]
 24829 007c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24830 007e 012B     		cmp	r3, #1
 24831 0080 03D0     		beq	.L16
 24832              		.loc 1 205 0 is_stmt 0 discriminator 1
 24833 0082 3B68     		ldr	r3, [r7, #0]
 24834 0084 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 24835 0086 022B     		cmp	r3, #2
 24836 0088 34D1     		bne	.L17
 24837              	.L16:
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       {
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Speed mode parameters */
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Speed mode configuration */
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
 24838              		.loc 1 211 0 is_stmt 1
 24839 008a 7B68     		ldr	r3, [r7, #4]
 24840 008c 9A68     		ldr	r2, [r3, #8]
 24841 008e 7B69     		ldr	r3, [r7, #20]
 24842 0090 4FEA4303 		lsl	r3, r3, #1
 24843 0094 4FF00301 		mov	r1, #3
 24844 0098 01FA03F3 		lsl	r3, r1, r3
 24845 009c 6FEA0303 		mvn	r3, r3
 24846 00a0 1A40     		ands	r2, r2, r3
 24847 00a2 7B68     		ldr	r3, [r7, #4]
 24848 00a4 9A60     		str	r2, [r3, #8]
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
 24849              		.loc 1 212 0
 24850 00a6 7B68     		ldr	r3, [r7, #4]
 24851 00a8 9A68     		ldr	r2, [r3, #8]
 24852 00aa 3B68     		ldr	r3, [r7, #0]
 24853 00ac 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 24854 00ae 1946     		mov	r1, r3
 24855 00b0 7B69     		ldr	r3, [r7, #20]
 24856 00b2 4FEA4303 		lsl	r3, r3, #1
 24857 00b6 01FA03F3 		lsl	r3, r1, r3
 24858 00ba 1A43     		orrs	r2, r2, r3
 24859 00bc 7B68     		ldr	r3, [r7, #4]
 24860 00be 9A60     		str	r2, [r3, #8]
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Check Output mode parameters */
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         /* Output mode configuration*/
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
 24861              		.loc 1 218 0
 24862 00c0 7B68     		ldr	r3, [r7, #4]
 24863 00c2 5A68     		ldr	r2, [r3, #4]
 24864 00c4 7B69     		ldr	r3, [r7, #20]
 24865 00c6 9BB2     		uxth	r3, r3
 24866 00c8 4FF00101 		mov	r1, #1
 24867 00cc 01FA03F3 		lsl	r3, r1, r3
 24868 00d0 6FEA0303 		mvn	r3, r3
 24869 00d4 1A40     		ands	r2, r2, r3
 24870 00d6 7B68     		ldr	r3, [r7, #4]
 24871 00d8 5A60     		str	r2, [r3, #4]
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****         GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
 24872              		.loc 1 219 0
 24873 00da 7B68     		ldr	r3, [r7, #4]
 24874 00dc 5A68     		ldr	r2, [r3, #4]
 24875 00de 3B68     		ldr	r3, [r7, #0]
 24876 00e0 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 24877 00e2 1946     		mov	r1, r3
 24878 00e4 7B69     		ldr	r3, [r7, #20]
 24879 00e6 9BB2     		uxth	r3, r3
 24880 00e8 01FA03F3 		lsl	r3, r1, r3
 24881 00ec 9BB2     		uxth	r3, r3
 24882 00ee 1A43     		orrs	r2, r2, r3
 24883 00f0 7B68     		ldr	r3, [r7, #4]
 24884 00f2 5A60     		str	r2, [r3, #4]
 24885              	.L17:
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       }
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       /* Pull-up Pull down resistor configuration*/
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
 24886              		.loc 1 223 0
 24887 00f4 7B68     		ldr	r3, [r7, #4]
 24888 00f6 DA68     		ldr	r2, [r3, #12]
 24889 00f8 7B69     		ldr	r3, [r7, #20]
 24890 00fa 9BB2     		uxth	r3, r3
 24891 00fc 4FEA4303 		lsl	r3, r3, #1
 24892 0100 4FF00301 		mov	r1, #3
 24893 0104 01FA03F3 		lsl	r3, r1, r3
 24894 0108 6FEA0303 		mvn	r3, r3
 24895 010c 1A40     		ands	r2, r2, r3
 24896 010e 7B68     		ldr	r3, [r7, #4]
 24897 0110 DA60     		str	r2, [r3, #12]
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****       GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
 24898              		.loc 1 224 0
 24899 0112 7B68     		ldr	r3, [r7, #4]
 24900 0114 DA68     		ldr	r2, [r3, #12]
 24901 0116 3B68     		ldr	r3, [r7, #0]
 24902 0118 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 24903 011a 1946     		mov	r1, r3
 24904 011c 7B69     		ldr	r3, [r7, #20]
 24905 011e 4FEA4303 		lsl	r3, r3, #1
 24906 0122 01FA03F3 		lsl	r3, r1, r3
 24907 0126 1A43     		orrs	r2, r2, r3
 24908 0128 7B68     		ldr	r3, [r7, #4]
 24909 012a DA60     		str	r2, [r3, #12]
 24910              	.L15:
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 24911              		.loc 1 194 0
 24912 012c 7B69     		ldr	r3, [r7, #20]
 24913 012e 03F10103 		add	r3, r3, #1
 24914 0132 7B61     		str	r3, [r7, #20]
 24915              	.L14:
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   for (pinpos = 0x00; pinpos < 0x10; pinpos++)
 24916              		.loc 1 194 0 is_stmt 0 discriminator 1
 24917 0134 7B69     		ldr	r3, [r7, #20]
 24918 0136 0F2B     		cmp	r3, #15
 24919 0138 7FF674AF 		bls	.L18
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     }
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 24920              		.loc 1 227 0 is_stmt 1
 24921 013c 07F11C07 		add	r7, r7, #28
 24922 0140 BD46     		mov	sp, r7
 24923 0142 80BC     		pop	{r7}
 24924 0144 7047     		bx	lr
 24925              		.cfi_endproc
 24926              	.LFE111:
 24928 0146 00BF     		.section	.text.GPIO_StructInit,"ax",%progbits
 24929              		.align	2
 24930              		.global	GPIO_StructInit
 24931              		.thumb
 24932              		.thumb_func
 24934              	GPIO_StructInit:
 24935              	.LFB112:
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Fills each GPIO_InitStruct member with its default value.
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure which will be initialized.
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 24936              		.loc 1 235 0
 24937              		.cfi_startproc
 24938              		@ args = 0, pretend = 0, frame = 8
 24939              		@ frame_needed = 1, uses_anonymous_args = 0
 24940              		@ link register save eliminated.
 24941 0000 80B4     		push	{r7}
 24942              	.LCFI6:
 24943              		.cfi_def_cfa_offset 4
 24944 0002 83B0     		sub	sp, sp, #12
 24945              	.LCFI7:
 24946              		.cfi_def_cfa_offset 16
 24947 0004 00AF     		add	r7, sp, #0
 24948              		.cfi_offset 7, -4
 24949              	.LCFI8:
 24950              		.cfi_def_cfa_register 7
 24951 0006 7860     		str	r0, [r7, #4]
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset GPIO init structure parameters values */
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 24952              		.loc 1 237 0
 24953 0008 7B68     		ldr	r3, [r7, #4]
 24954 000a 4FF6FF72 		movw	r2, #65535
 24955 000e 1A60     		str	r2, [r3, #0]
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
 24956              		.loc 1 238 0
 24957 0010 7B68     		ldr	r3, [r7, #4]
 24958 0012 4FF00002 		mov	r2, #0
 24959 0016 1A71     		strb	r2, [r3, #4]
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 24960              		.loc 1 239 0
 24961 0018 7B68     		ldr	r3, [r7, #4]
 24962 001a 4FF00002 		mov	r2, #0
 24963 001e 5A71     		strb	r2, [r3, #5]
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
 24964              		.loc 1 240 0
 24965 0020 7B68     		ldr	r3, [r7, #4]
 24966 0022 4FF00002 		mov	r2, #0
 24967 0026 9A71     		strb	r2, [r3, #6]
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
 24968              		.loc 1 241 0
 24969 0028 7B68     		ldr	r3, [r7, #4]
 24970 002a 4FF00002 		mov	r2, #0
 24971 002e DA71     		strb	r2, [r3, #7]
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 24972              		.loc 1 242 0
 24973 0030 07F10C07 		add	r7, r7, #12
 24974 0034 BD46     		mov	sp, r7
 24975 0036 80BC     		pop	{r7}
 24976 0038 7047     		bx	lr
 24977              		.cfi_endproc
 24978              	.LFE112:
 24980 003a 00BF     		.section	.text.GPIO_PinLockConfig,"ax",%progbits
 24981              		.align	2
 24982              		.global	GPIO_PinLockConfig
 24983              		.thumb
 24984              		.thumb_func
 24986              	GPIO_PinLockConfig:
 24987              	.LFB113:
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Locks GPIO Pins configuration registers.
 246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The locked registers are GPIOx_MODER, GPIOx_OTYPER, GPIOx_OSPEEDR,
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         GPIOx_PUPDR, GPIOx_AFRL and GPIOx_AFRH.
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   The configuration of the locked GPIO pins can no longer be modified
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         until the next reset.
 250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be locked.
 252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 24988              		.loc 1 256 0
 24989              		.cfi_startproc
 24990              		@ args = 0, pretend = 0, frame = 16
 24991              		@ frame_needed = 1, uses_anonymous_args = 0
 24992              		@ link register save eliminated.
 24993 0000 80B4     		push	{r7}
 24994              	.LCFI9:
 24995              		.cfi_def_cfa_offset 4
 24996 0002 85B0     		sub	sp, sp, #20
 24997              	.LCFI10:
 24998              		.cfi_def_cfa_offset 24
 24999 0004 00AF     		add	r7, sp, #0
 25000              		.cfi_offset 7, -4
 25001              	.LCFI11:
 25002              		.cfi_def_cfa_register 7
 25003 0006 7860     		str	r0, [r7, #4]
 25004 0008 0B46     		mov	r3, r1
 25005 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   __IO uint32_t tmp = 0x00010000;
 25006              		.loc 1 257 0
 25007 000c 4FF48033 		mov	r3, #65536
 25008 0010 FB60     		str	r3, [r7, #12]
 258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp |= GPIO_Pin;
 25009              		.loc 1 263 0
 25010 0012 7A88     		ldrh	r2, [r7, #2]
 25011 0014 FB68     		ldr	r3, [r7, #12]
 25012 0016 42EA0303 		orr	r3, r2, r3
 25013 001a FB60     		str	r3, [r7, #12]
 264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 25014              		.loc 1 265 0
 25015 001c FA68     		ldr	r2, [r7, #12]
 25016 001e 7B68     		ldr	r3, [r7, #4]
 25017 0020 DA61     		str	r2, [r3, #28]
 266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Reset LCKK bit */
 267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 25018              		.loc 1 267 0
 25019 0022 7A88     		ldrh	r2, [r7, #2]
 25020 0024 7B68     		ldr	r3, [r7, #4]
 25021 0026 DA61     		str	r2, [r3, #28]
 268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Set LCKK bit */
 269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->LCKR = tmp;
 25022              		.loc 1 269 0
 25023 0028 FA68     		ldr	r2, [r7, #12]
 25024 002a 7B68     		ldr	r3, [r7, #4]
 25025 002c DA61     		str	r2, [r3, #28]
 270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 25026              		.loc 1 271 0
 25027 002e 7B68     		ldr	r3, [r7, #4]
 25028 0030 DB69     		ldr	r3, [r3, #28]
 25029 0032 FB60     		str	r3, [r7, #12]
 272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Read LCKK bit*/
 273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   tmp = GPIOx->LCKR;
 25030              		.loc 1 273 0
 25031 0034 7B68     		ldr	r3, [r7, #4]
 25032 0036 DB69     		ldr	r3, [r3, #28]
 25033 0038 FB60     		str	r3, [r7, #12]
 274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25034              		.loc 1 274 0
 25035 003a 07F11407 		add	r7, r7, #20
 25036 003e BD46     		mov	sp, r7
 25037 0040 80BC     		pop	{r7}
 25038 0042 7047     		bx	lr
 25039              		.cfi_endproc
 25040              	.LFE113:
 25042              		.section	.text.GPIO_ReadInputDataBit,"ax",%progbits
 25043              		.align	2
 25044              		.global	GPIO_ReadInputDataBit
 25045              		.thumb
 25046              		.thumb_func
 25048              	GPIO_ReadInputDataBit:
 25049              	.LFB114:
 275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group2 GPIO Read and Write
 281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Read and Write
 282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                               GPIO Read and Write
 286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified input port pin.
 294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_Pin_x where x can be (0..15).
 297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The input port pin value.
 298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25050              		.loc 1 300 0
 25051              		.cfi_startproc
 25052              		@ args = 0, pretend = 0, frame = 16
 25053              		@ frame_needed = 1, uses_anonymous_args = 0
 25054              		@ link register save eliminated.
 25055 0000 80B4     		push	{r7}
 25056              	.LCFI12:
 25057              		.cfi_def_cfa_offset 4
 25058 0002 85B0     		sub	sp, sp, #20
 25059              	.LCFI13:
 25060              		.cfi_def_cfa_offset 24
 25061 0004 00AF     		add	r7, sp, #0
 25062              		.cfi_offset 7, -4
 25063              	.LCFI14:
 25064              		.cfi_def_cfa_register 7
 25065 0006 7860     		str	r0, [r7, #4]
 25066 0008 0B46     		mov	r3, r1
 25067 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 25068              		.loc 1 301 0
 25069 000c 4FF00003 		mov	r3, #0
 25070 0010 FB73     		strb	r3, [r7, #15]
 302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
 25071              		.loc 1 307 0
 25072 0012 7B68     		ldr	r3, [r7, #4]
 25073 0014 1A69     		ldr	r2, [r3, #16]
 25074 0016 7B88     		ldrh	r3, [r7, #2]
 25075 0018 02EA0303 		and	r3, r2, r3
 25076 001c 002B     		cmp	r3, #0
 25077 001e 03D0     		beq	.L22
 308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 25078              		.loc 1 309 0
 25079 0020 4FF00103 		mov	r3, #1
 25080 0024 FB73     		strb	r3, [r7, #15]
 25081 0026 02E0     		b	.L23
 25082              	.L22:
 310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 25083              		.loc 1 313 0
 25084 0028 4FF00003 		mov	r3, #0
 25085 002c FB73     		strb	r3, [r7, #15]
 25086              	.L23:
 314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 25087              		.loc 1 315 0
 25088 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25089              		.loc 1 316 0
 25090 0030 1846     		mov	r0, r3
 25091 0032 07F11407 		add	r7, r7, #20
 25092 0036 BD46     		mov	sp, r7
 25093 0038 80BC     		pop	{r7}
 25094 003a 7047     		bx	lr
 25095              		.cfi_endproc
 25096              	.LFE114:
 25098              		.section	.text.GPIO_ReadInputData,"ax",%progbits
 25099              		.align	2
 25100              		.global	GPIO_ReadInputData
 25101              		.thumb
 25102              		.thumb_func
 25104              	GPIO_ReadInputData:
 25105              	.LFB115:
 317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO input data port.
 320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO input data port value.
 322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25106              		.loc 1 324 0
 25107              		.cfi_startproc
 25108              		@ args = 0, pretend = 0, frame = 8
 25109              		@ frame_needed = 1, uses_anonymous_args = 0
 25110              		@ link register save eliminated.
 25111 0000 80B4     		push	{r7}
 25112              	.LCFI15:
 25113              		.cfi_def_cfa_offset 4
 25114 0002 83B0     		sub	sp, sp, #12
 25115              	.LCFI16:
 25116              		.cfi_def_cfa_offset 16
 25117 0004 00AF     		add	r7, sp, #0
 25118              		.cfi_offset 7, -4
 25119              	.LCFI17:
 25120              		.cfi_def_cfa_register 7
 25121 0006 7860     		str	r0, [r7, #4]
 325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->IDR);
 25122              		.loc 1 328 0
 25123 0008 7B68     		ldr	r3, [r7, #4]
 25124 000a 1B69     		ldr	r3, [r3, #16]
 25125 000c 9BB2     		uxth	r3, r3
 329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25126              		.loc 1 329 0
 25127 000e 1846     		mov	r0, r3
 25128 0010 07F10C07 		add	r7, r7, #12
 25129 0014 BD46     		mov	sp, r7
 25130 0016 80BC     		pop	{r7}
 25131 0018 7047     		bx	lr
 25132              		.cfi_endproc
 25133              	.LFE115:
 25135 001a 00BF     		.section	.text.GPIO_ReadOutputDataBit,"ax",%progbits
 25136              		.align	2
 25137              		.global	GPIO_ReadOutputDataBit
 25138              		.thumb
 25139              		.thumb_func
 25141              	GPIO_ReadOutputDataBit:
 25142              	.LFB116:
 330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified output data port bit.
 333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to read.
 335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be GPIO_Pin_x where x can be (0..15).
 336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval The output port pin value.
 337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 339:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25143              		.loc 1 339 0
 25144              		.cfi_startproc
 25145              		@ args = 0, pretend = 0, frame = 16
 25146              		@ frame_needed = 1, uses_anonymous_args = 0
 25147              		@ link register save eliminated.
 25148 0000 80B4     		push	{r7}
 25149              	.LCFI18:
 25150              		.cfi_def_cfa_offset 4
 25151 0002 85B0     		sub	sp, sp, #20
 25152              	.LCFI19:
 25153              		.cfi_def_cfa_offset 24
 25154 0004 00AF     		add	r7, sp, #0
 25155              		.cfi_offset 7, -4
 25156              	.LCFI20:
 25157              		.cfi_def_cfa_register 7
 25158 0006 7860     		str	r0, [r7, #4]
 25159 0008 0B46     		mov	r3, r1
 25160 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 340:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint8_t bitstatus = 0x00;
 25161              		.loc 1 340 0
 25162 000c 4FF00003 		mov	r3, #0
 25163 0010 FB73     		strb	r3, [r7, #15]
 341:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 342:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 343:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 344:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 345:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 346:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
 25164              		.loc 1 346 0
 25165 0012 7B68     		ldr	r3, [r7, #4]
 25166 0014 5A69     		ldr	r2, [r3, #20]
 25167 0016 7B88     		ldrh	r3, [r7, #2]
 25168 0018 02EA0303 		and	r3, r2, r3
 25169 001c 002B     		cmp	r3, #0
 25170 001e 03D0     		beq	.L26
 347:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 348:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_SET;
 25171              		.loc 1 348 0
 25172 0020 4FF00103 		mov	r3, #1
 25173 0024 FB73     		strb	r3, [r7, #15]
 25174 0026 02E0     		b	.L27
 25175              	.L26:
 349:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 350:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 351:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 352:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     bitstatus = (uint8_t)Bit_RESET;
 25176              		.loc 1 352 0
 25177 0028 4FF00003 		mov	r3, #0
 25178 002c FB73     		strb	r3, [r7, #15]
 25179              	.L27:
 353:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 354:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return bitstatus;
 25180              		.loc 1 354 0
 25181 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25182              		.loc 1 355 0
 25183 0030 1846     		mov	r0, r3
 25184 0032 07F11407 		add	r7, r7, #20
 25185 0036 BD46     		mov	sp, r7
 25186 0038 80BC     		pop	{r7}
 25187 003a 7047     		bx	lr
 25188              		.cfi_endproc
 25189              	.LFE116:
 25191              		.section	.text.GPIO_ReadOutputData,"ax",%progbits
 25192              		.align	2
 25193              		.global	GPIO_ReadOutputData
 25194              		.thumb
 25195              		.thumb_func
 25197              	GPIO_ReadOutputData:
 25198              	.LFB117:
 356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 357:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 358:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Reads the specified GPIO output data port.
 359:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 360:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval GPIO output data port value.
 361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 363:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25199              		.loc 1 363 0
 25200              		.cfi_startproc
 25201              		@ args = 0, pretend = 0, frame = 8
 25202              		@ frame_needed = 1, uses_anonymous_args = 0
 25203              		@ link register save eliminated.
 25204 0000 80B4     		push	{r7}
 25205              	.LCFI21:
 25206              		.cfi_def_cfa_offset 4
 25207 0002 83B0     		sub	sp, sp, #12
 25208              	.LCFI22:
 25209              		.cfi_def_cfa_offset 16
 25210 0004 00AF     		add	r7, sp, #0
 25211              		.cfi_offset 7, -4
 25212              	.LCFI23:
 25213              		.cfi_def_cfa_register 7
 25214 0006 7860     		str	r0, [r7, #4]
 364:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 365:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 366:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 367:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   return ((uint16_t)GPIOx->ODR);
 25215              		.loc 1 367 0
 25216 0008 7B68     		ldr	r3, [r7, #4]
 25217 000a 5B69     		ldr	r3, [r3, #20]
 25218 000c 9BB2     		uxth	r3, r3
 368:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25219              		.loc 1 368 0
 25220 000e 1846     		mov	r0, r3
 25221 0010 07F10C07 		add	r7, r7, #12
 25222 0014 BD46     		mov	sp, r7
 25223 0016 80BC     		pop	{r7}
 25224 0018 7047     		bx	lr
 25225              		.cfi_endproc
 25226              	.LFE117:
 25228 001a 00BF     		.section	.text.GPIO_SetBits,"ax",%progbits
 25229              		.align	2
 25230              		.global	GPIO_SetBits
 25231              		.thumb
 25232              		.thumb_func
 25234              	GPIO_SetBits:
 25235              	.LFB118:
 369:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 370:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets the selected data port bits.
 372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 373:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 374:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 377:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 378:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 379:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 380:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 381:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25236              		.loc 1 381 0
 25237              		.cfi_startproc
 25238              		@ args = 0, pretend = 0, frame = 8
 25239              		@ frame_needed = 1, uses_anonymous_args = 0
 25240              		@ link register save eliminated.
 25241 0000 80B4     		push	{r7}
 25242              	.LCFI24:
 25243              		.cfi_def_cfa_offset 4
 25244 0002 83B0     		sub	sp, sp, #12
 25245              	.LCFI25:
 25246              		.cfi_def_cfa_offset 16
 25247 0004 00AF     		add	r7, sp, #0
 25248              		.cfi_offset 7, -4
 25249              	.LCFI26:
 25250              		.cfi_def_cfa_register 7
 25251 0006 7860     		str	r0, [r7, #4]
 25252 0008 0B46     		mov	r3, r1
 25253 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 382:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 383:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 384:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 385:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 386:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRL = GPIO_Pin;
 25254              		.loc 1 386 0
 25255 000c 7B68     		ldr	r3, [r7, #4]
 25256 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 25257 0010 1A83     		strh	r2, [r3, #24]	@ movhi
 387:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25258              		.loc 1 387 0
 25259 0012 07F10C07 		add	r7, r7, #12
 25260 0016 BD46     		mov	sp, r7
 25261 0018 80BC     		pop	{r7}
 25262 001a 7047     		bx	lr
 25263              		.cfi_endproc
 25264              	.LFE118:
 25266              		.section	.text.GPIO_ResetBits,"ax",%progbits
 25267              		.align	2
 25268              		.global	GPIO_ResetBits
 25269              		.thumb
 25270              		.thumb_func
 25272              	GPIO_ResetBits:
 25273              	.LFB119:
 388:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 389:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 390:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Clears the selected data port bits.
 391:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @note   This functions uses GPIOx_BSRR register to allow atomic read/modify 
 392:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         accesses. In this way, there is no risk of an IRQ occurring between
 393:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         the read and the modify access.
 394:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 395:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bits to be written.
 396:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be any combination of GPIO_Pin_x where x can be (0..15).
 397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 398:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 399:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 400:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25274              		.loc 1 400 0
 25275              		.cfi_startproc
 25276              		@ args = 0, pretend = 0, frame = 8
 25277              		@ frame_needed = 1, uses_anonymous_args = 0
 25278              		@ link register save eliminated.
 25279 0000 80B4     		push	{r7}
 25280              	.LCFI27:
 25281              		.cfi_def_cfa_offset 4
 25282 0002 83B0     		sub	sp, sp, #12
 25283              	.LCFI28:
 25284              		.cfi_def_cfa_offset 16
 25285 0004 00AF     		add	r7, sp, #0
 25286              		.cfi_offset 7, -4
 25287              	.LCFI29:
 25288              		.cfi_def_cfa_register 7
 25289 0006 7860     		str	r0, [r7, #4]
 25290 0008 0B46     		mov	r3, r1
 25291 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 401:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 402:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 403:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 404:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 405:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->BSRRH = GPIO_Pin;
 25292              		.loc 1 405 0
 25293 000c 7B68     		ldr	r3, [r7, #4]
 25294 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 25295 0010 5A83     		strh	r2, [r3, #26]	@ movhi
 406:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25296              		.loc 1 406 0
 25297 0012 07F10C07 		add	r7, r7, #12
 25298 0016 BD46     		mov	sp, r7
 25299 0018 80BC     		pop	{r7}
 25300 001a 7047     		bx	lr
 25301              		.cfi_endproc
 25302              	.LFE119:
 25304              		.section	.text.GPIO_WriteBit,"ax",%progbits
 25305              		.align	2
 25306              		.global	GPIO_WriteBit
 25307              		.thumb
 25308              		.thumb_func
 25310              	GPIO_WriteBit:
 25311              	.LFB120:
 407:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 408:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 409:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Sets or clears the selected data port bit.
 410:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 411:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: specifies the port bit to be written.
 412:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of GPIO_Pin_x where x can be (0..15).
 413:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  BitVal: specifies the value to be written to the selected bit.
 414:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the BitAction enum values:
 415:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_RESET: to clear the port pin
 416:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg Bit_SET: to set the port pin
 417:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 418:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 419:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
 420:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25312              		.loc 1 420 0
 25313              		.cfi_startproc
 25314              		@ args = 0, pretend = 0, frame = 8
 25315              		@ frame_needed = 1, uses_anonymous_args = 0
 25316              		@ link register save eliminated.
 25317 0000 80B4     		push	{r7}
 25318              	.LCFI30:
 25319              		.cfi_def_cfa_offset 4
 25320 0002 83B0     		sub	sp, sp, #12
 25321              	.LCFI31:
 25322              		.cfi_def_cfa_offset 16
 25323 0004 00AF     		add	r7, sp, #0
 25324              		.cfi_offset 7, -4
 25325              	.LCFI32:
 25326              		.cfi_def_cfa_register 7
 25327 0006 7860     		str	r0, [r7, #4]
 25328 0008 1346     		mov	r3, r2
 25329 000a 0A46     		mov	r2, r1	@ movhi
 25330 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 25331 000e 7B70     		strb	r3, [r7, #1]
 421:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 422:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 423:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal));
 425:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 426:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   if (BitVal != Bit_RESET)
 25332              		.loc 1 426 0
 25333 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 25334 0012 002B     		cmp	r3, #0
 25335 0014 03D0     		beq	.L32
 427:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 428:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRL = GPIO_Pin;
 25336              		.loc 1 428 0
 25337 0016 7B68     		ldr	r3, [r7, #4]
 25338 0018 7A88     		ldrh	r2, [r7, #2]	@ movhi
 25339 001a 1A83     		strh	r2, [r3, #24]	@ movhi
 25340 001c 02E0     		b	.L31
 25341              	.L32:
 429:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 430:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   else
 431:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   {
 432:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****     GPIOx->BSRRH = GPIO_Pin ;
 25342              		.loc 1 432 0
 25343 001e 7B68     		ldr	r3, [r7, #4]
 25344 0020 7A88     		ldrh	r2, [r7, #2]	@ movhi
 25345 0022 5A83     		strh	r2, [r3, #26]	@ movhi
 25346              	.L31:
 433:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   }
 434:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25347              		.loc 1 434 0
 25348 0024 07F10C07 		add	r7, r7, #12
 25349 0028 BD46     		mov	sp, r7
 25350 002a 80BC     		pop	{r7}
 25351 002c 7047     		bx	lr
 25352              		.cfi_endproc
 25353              	.LFE120:
 25355 002e 00BF     		.section	.text.GPIO_Write,"ax",%progbits
 25356              		.align	2
 25357              		.global	GPIO_Write
 25358              		.thumb
 25359              		.thumb_func
 25361              	GPIO_Write:
 25362              	.LFB121:
 435:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 436:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 437:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Writes data to the specified GPIO data port.
 438:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 439:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  PortVal: specifies the value to be written to the port output data register.
 440:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 441:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 442:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
 443:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25363              		.loc 1 443 0
 25364              		.cfi_startproc
 25365              		@ args = 0, pretend = 0, frame = 8
 25366              		@ frame_needed = 1, uses_anonymous_args = 0
 25367              		@ link register save eliminated.
 25368 0000 80B4     		push	{r7}
 25369              	.LCFI33:
 25370              		.cfi_def_cfa_offset 4
 25371 0002 83B0     		sub	sp, sp, #12
 25372              	.LCFI34:
 25373              		.cfi_def_cfa_offset 16
 25374 0004 00AF     		add	r7, sp, #0
 25375              		.cfi_offset 7, -4
 25376              	.LCFI35:
 25377              		.cfi_def_cfa_register 7
 25378 0006 7860     		str	r0, [r7, #4]
 25379 0008 0B46     		mov	r3, r1
 25380 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 444:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 445:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 446:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 447:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR = PortVal;
 25381              		.loc 1 447 0
 25382 000c 7A88     		ldrh	r2, [r7, #2]
 25383 000e 7B68     		ldr	r3, [r7, #4]
 25384 0010 5A61     		str	r2, [r3, #20]
 448:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25385              		.loc 1 448 0
 25386 0012 07F10C07 		add	r7, r7, #12
 25387 0016 BD46     		mov	sp, r7
 25388 0018 80BC     		pop	{r7}
 25389 001a 7047     		bx	lr
 25390              		.cfi_endproc
 25391              	.LFE121:
 25393              		.section	.text.GPIO_ToggleBits,"ax",%progbits
 25394              		.align	2
 25395              		.global	GPIO_ToggleBits
 25396              		.thumb
 25397              		.thumb_func
 25399              	GPIO_ToggleBits:
 25400              	.LFB122:
 449:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 450:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 451:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Toggles the specified GPIO pins..
 452:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 453:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_Pin: Specifies the pins to be toggled.
 454:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 455:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 456:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
 457:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25401              		.loc 1 457 0
 25402              		.cfi_startproc
 25403              		@ args = 0, pretend = 0, frame = 8
 25404              		@ frame_needed = 1, uses_anonymous_args = 0
 25405              		@ link register save eliminated.
 25406 0000 80B4     		push	{r7}
 25407              	.LCFI36:
 25408              		.cfi_def_cfa_offset 4
 25409 0002 83B0     		sub	sp, sp, #12
 25410              	.LCFI37:
 25411              		.cfi_def_cfa_offset 16
 25412 0004 00AF     		add	r7, sp, #0
 25413              		.cfi_offset 7, -4
 25414              	.LCFI38:
 25415              		.cfi_def_cfa_register 7
 25416 0006 7860     		str	r0, [r7, #4]
 25417 0008 0B46     		mov	r3, r1
 25418 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 458:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 459:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 460:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 461:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->ODR ^= GPIO_Pin;
 25419              		.loc 1 461 0
 25420 000c 7B68     		ldr	r3, [r7, #4]
 25421 000e 5A69     		ldr	r2, [r3, #20]
 25422 0010 7B88     		ldrh	r3, [r7, #2]
 25423 0012 5A40     		eors	r2, r2, r3
 25424 0014 7B68     		ldr	r3, [r7, #4]
 25425 0016 5A61     		str	r2, [r3, #20]
 462:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25426              		.loc 1 462 0
 25427 0018 07F10C07 		add	r7, r7, #12
 25428 001c BD46     		mov	sp, r7
 25429 001e 80BC     		pop	{r7}
 25430 0020 7047     		bx	lr
 25431              		.cfi_endproc
 25432              	.LFE122:
 25434 0022 00BF     		.section	.text.GPIO_PinAFConfig,"ax",%progbits
 25435              		.align	2
 25436              		.global	GPIO_PinAFConfig
 25437              		.thumb
 25438              		.thumb_func
 25440              	GPIO_PinAFConfig:
 25441              	.LFB123:
 463:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 464:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 465:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @}
 466:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 467:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 468:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /** @defgroup GPIO_Group3 GPIO Alternate functions configuration function
 469:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *  @brief   GPIO Alternate functions configuration function
 470:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  *
 471:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @verbatim   
 472:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================
 473:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****                GPIO Alternate functions configuration function
 474:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****  ===============================================================================  
 475:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 476:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** @endverbatim
 477:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @{
 478:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 479:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** 
 480:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** /**
 481:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @brief  Changes the mapping of the specified pin.
 482:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIOx: where x can be (A..I) to select the GPIO peripheral.
 483:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_PinSource: specifies the pin for the Alternate function.
 484:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *         This parameter can be GPIO_PinSourcex where x can be (0..15).
 485:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @param  GPIO_AFSelection: selects the pin to used as Alternate function.
 486:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *          This parameter can be one of the following values:
 487:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_RTC_50Hz: Connect RTC_50Hz pin to AF0 (default after reset) 
 488:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_MCO: Connect MCO pin (MCO1 and MCO2) to AF0 (default after reset) 
 489:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TAMPER: Connect TAMPER pins (TAMPER_1 and TAMPER_2) to AF0 (default aft
 490:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SWJ: Connect SWJ pins (SWD and JTAG)to AF0 (default after reset) 
 491:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TRACE: Connect TRACE pins to AF0 (default after reset)
 492:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM1: Connect TIM1 pins to AF1
 493:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM2: Connect TIM2 pins to AF1
 494:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM3: Connect TIM3 pins to AF2
 495:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM4: Connect TIM4 pins to AF2
 496:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM5: Connect TIM5 pins to AF2
 497:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM8: Connect TIM8 pins to AF3
 498:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM9: Connect TIM9 pins to AF3
 499:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM10: Connect TIM10 pins to AF3
 500:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM11: Connect TIM11 pins to AF3
 501:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C1: Connect I2C1 pins to AF4
 502:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C2: Connect I2C2 pins to AF4
 503:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2C3: Connect I2C3 pins to AF4
 504:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI1: Connect SPI1 pins to AF5
 505:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI2: Connect SPI2/I2S2 pins to AF5
 506:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SPI3: Connect SPI3/I2S3 pins to AF6
 507:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_I2S3ext: Connect I2S3ext pins to AF7
 508:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART1: Connect USART1 pins to AF7
 509:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART2: Connect USART2 pins to AF7
 510:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART3: Connect USART3 pins to AF7
 511:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART4: Connect UART4 pins to AF8
 512:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_UART5: Connect UART5 pins to AF8
 513:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_USART6: Connect USART6 pins to AF8
 514:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN1: Connect CAN1 pins to AF9
 515:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_CAN2: Connect CAN2 pins to AF9
 516:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM12: Connect TIM12 pins to AF9
 517:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM13: Connect TIM13 pins to AF9
 518:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_TIM14: Connect TIM14 pins to AF9
 519:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_FS: Connect OTG_FS pins to AF10
 520:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS: Connect OTG_HS pins to AF10
 521:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_ETH: Connect ETHERNET pins to AF11
 522:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_FSMC: Connect FSMC pins to AF12
 523:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_OTG_HS_FS: Connect OTG HS (configured in FS) pins to AF12
 524:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_SDIO: Connect SDIO pins to AF12
 525:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_DCMI: Connect DCMI pins to AF13
 526:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   *            @arg GPIO_AF_EVENTOUT: Connect EVENTOUT pins to AF15
 527:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   * @retval None
 528:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   */
 529:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
 530:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** {
 25442              		.loc 1 530 0
 25443              		.cfi_startproc
 25444              		@ args = 0, pretend = 0, frame = 16
 25445              		@ frame_needed = 1, uses_anonymous_args = 0
 25446              		@ link register save eliminated.
 25447 0000 80B4     		push	{r7}
 25448              	.LCFI39:
 25449              		.cfi_def_cfa_offset 4
 25450 0002 85B0     		sub	sp, sp, #20
 25451              	.LCFI40:
 25452              		.cfi_def_cfa_offset 24
 25453 0004 00AF     		add	r7, sp, #0
 25454              		.cfi_offset 7, -4
 25455              	.LCFI41:
 25456              		.cfi_def_cfa_register 7
 25457 0006 7860     		str	r0, [r7, #4]
 25458 0008 1346     		mov	r3, r2
 25459 000a 0A46     		mov	r2, r1	@ movhi
 25460 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 25461 000e 7B70     		strb	r3, [r7, #1]
 531:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp = 0x00;
 25462              		.loc 1 531 0
 25463 0010 4FF00003 		mov	r3, #0
 25464 0014 FB60     		str	r3, [r7, #12]
 532:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   uint32_t temp_2 = 0x00;
 25465              		.loc 1 532 0
 25466 0016 4FF00003 		mov	r3, #0
 25467 001a BB60     		str	r3, [r7, #8]
 533:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 534:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   /* Check the parameters */
 535:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 536:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 537:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   assert_param(IS_GPIO_AF(GPIO_AF));
 538:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   
 539:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
 25468              		.loc 1 539 0
 25469 001c 7A78     		ldrb	r2, [r7, #1]	@ zero_extendqisi2
 25470 001e 7B88     		ldrh	r3, [r7, #2]
 25471 0020 03F00703 		and	r3, r3, #7
 25472 0024 4FEA8303 		lsl	r3, r3, #2
 25473 0028 02FA03F3 		lsl	r3, r2, r3
 25474 002c FB60     		str	r3, [r7, #12]
 540:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (
 25475              		.loc 1 540 0
 25476 002e 7B88     		ldrh	r3, [r7, #2]
 25477 0030 4FEAD303 		lsr	r3, r3, #3
 25478 0034 9BB2     		uxth	r3, r3
 25479 0036 1A46     		mov	r2, r3
 25480 0038 7B88     		ldrh	r3, [r7, #2]
 25481 003a 4FEAD303 		lsr	r3, r3, #3
 25482 003e 9BB2     		uxth	r3, r3
 25483 0040 1946     		mov	r1, r3
 25484 0042 7B68     		ldr	r3, [r7, #4]
 25485 0044 01F10801 		add	r1, r1, #8
 25486 0048 53F82110 		ldr	r1, [r3, r1, lsl #2]
 25487 004c 7B88     		ldrh	r3, [r7, #2]
 25488 004e 03F00703 		and	r3, r3, #7
 25489 0052 4FEA8303 		lsl	r3, r3, #2
 25490 0056 4FF00F00 		mov	r0, #15
 25491 005a 00FA03F3 		lsl	r3, r0, r3
 25492 005e 6FEA0303 		mvn	r3, r3
 25493 0062 1940     		ands	r1, r1, r3
 25494 0064 7B68     		ldr	r3, [r7, #4]
 25495 0066 02F10802 		add	r2, r2, #8
 25496 006a 43F82210 		str	r1, [r3, r2, lsl #2]
 541:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
 25497              		.loc 1 541 0
 25498 006e 7B88     		ldrh	r3, [r7, #2]
 25499 0070 4FEAD303 		lsr	r3, r3, #3
 25500 0074 9BB2     		uxth	r3, r3
 25501 0076 1A46     		mov	r2, r3
 25502 0078 7B68     		ldr	r3, [r7, #4]
 25503 007a 02F10802 		add	r2, r2, #8
 25504 007e 53F82220 		ldr	r2, [r3, r2, lsl #2]
 25505 0082 FB68     		ldr	r3, [r7, #12]
 25506 0084 42EA0303 		orr	r3, r2, r3
 25507 0088 BB60     		str	r3, [r7, #8]
 542:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c ****   GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
 25508              		.loc 1 542 0
 25509 008a 7B88     		ldrh	r3, [r7, #2]
 25510 008c 4FEAD303 		lsr	r3, r3, #3
 25511 0090 9BB2     		uxth	r3, r3
 25512 0092 1A46     		mov	r2, r3
 25513 0094 7B68     		ldr	r3, [r7, #4]
 25514 0096 02F10802 		add	r2, r2, #8
 25515 009a B968     		ldr	r1, [r7, #8]
 25516 009c 43F82210 		str	r1, [r3, r2, lsl #2]
 543:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_gpio.c **** }
 25517              		.loc 1 543 0
 25518 00a0 07F11407 		add	r7, r7, #20
 25519 00a4 BD46     		mov	sp, r7
 25520 00a6 80BC     		pop	{r7}
 25521 00a8 7047     		bx	lr
 25522              		.cfi_endproc
 25523              	.LFE123:
 25525 00aa 00BF     		.text
 25526              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_gpio.c
     /tmp/ccladMt9.s:24575  .text.GPIO_DeInit:00000000 $t
     /tmp/ccladMt9.s:24580  .text.GPIO_DeInit:00000000 GPIO_DeInit
     /tmp/ccladMt9.s:24739  .text.GPIO_DeInit:00000140 $d
     /tmp/ccladMt9.s:24752  .text.GPIO_Init:00000000 $t
     /tmp/ccladMt9.s:24757  .text.GPIO_Init:00000000 GPIO_Init
     /tmp/ccladMt9.s:24929  .text.GPIO_StructInit:00000000 $t
     /tmp/ccladMt9.s:24934  .text.GPIO_StructInit:00000000 GPIO_StructInit
     /tmp/ccladMt9.s:24981  .text.GPIO_PinLockConfig:00000000 $t
     /tmp/ccladMt9.s:24986  .text.GPIO_PinLockConfig:00000000 GPIO_PinLockConfig
     /tmp/ccladMt9.s:25043  .text.GPIO_ReadInputDataBit:00000000 $t
     /tmp/ccladMt9.s:25048  .text.GPIO_ReadInputDataBit:00000000 GPIO_ReadInputDataBit
     /tmp/ccladMt9.s:25099  .text.GPIO_ReadInputData:00000000 $t
     /tmp/ccladMt9.s:25104  .text.GPIO_ReadInputData:00000000 GPIO_ReadInputData
     /tmp/ccladMt9.s:25136  .text.GPIO_ReadOutputDataBit:00000000 $t
     /tmp/ccladMt9.s:25141  .text.GPIO_ReadOutputDataBit:00000000 GPIO_ReadOutputDataBit
     /tmp/ccladMt9.s:25192  .text.GPIO_ReadOutputData:00000000 $t
     /tmp/ccladMt9.s:25197  .text.GPIO_ReadOutputData:00000000 GPIO_ReadOutputData
     /tmp/ccladMt9.s:25229  .text.GPIO_SetBits:00000000 $t
     /tmp/ccladMt9.s:25234  .text.GPIO_SetBits:00000000 GPIO_SetBits
     /tmp/ccladMt9.s:25267  .text.GPIO_ResetBits:00000000 $t
     /tmp/ccladMt9.s:25272  .text.GPIO_ResetBits:00000000 GPIO_ResetBits
     /tmp/ccladMt9.s:25305  .text.GPIO_WriteBit:00000000 $t
     /tmp/ccladMt9.s:25310  .text.GPIO_WriteBit:00000000 GPIO_WriteBit
     /tmp/ccladMt9.s:25356  .text.GPIO_Write:00000000 $t
     /tmp/ccladMt9.s:25361  .text.GPIO_Write:00000000 GPIO_Write
     /tmp/ccladMt9.s:25394  .text.GPIO_ToggleBits:00000000 $t
     /tmp/ccladMt9.s:25399  .text.GPIO_ToggleBits:00000000 GPIO_ToggleBits
     /tmp/ccladMt9.s:25435  .text.GPIO_PinAFConfig:00000000 $t
     /tmp/ccladMt9.s:25440  .text.GPIO_PinAFConfig:00000000 GPIO_PinAFConfig
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB1PeriphResetCmd
