   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_crc.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c"
 24575              		.align	2
 24576              		.global	CRC_ResetDR
 24577              		.thumb
 24578              		.thumb_func
 24580              	CRC_ResetDR:
 24581              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @file    stm32f4xx_crc.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief   This file provides all the CRC firmware functions.
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   ******************************************************************************
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @attention
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   *
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   *
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   ******************************************************************************
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Includes ------------------------------------------------------------------*/
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** #include "stm32f4xx_crc.h"
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @{
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /** @defgroup CRC 
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief CRC driver modules
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @{
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private typedef -----------------------------------------------------------*/
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private define ------------------------------------------------------------*/
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private macro -------------------------------------------------------------*/
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private variables ---------------------------------------------------------*/
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private function prototypes -----------------------------------------------*/
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /* Private functions ---------------------------------------------------------*/
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /** @defgroup CRC_Private_Functions
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @{
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Resets the CRC Data register (DR).
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  None
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval None
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** void CRC_ResetDR(void)
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 24582              		.loc 1 51 0
 24583              		.cfi_startproc
 24584              		@ args = 0, pretend = 0, frame = 0
 24585              		@ frame_needed = 1, uses_anonymous_args = 0
 24586              		@ link register save eliminated.
 24587 0000 80B4     		push	{r7}
 24588              	.LCFI0:
 24589              		.cfi_def_cfa_offset 4
 24590 0002 00AF     		add	r7, sp, #0
 24591              		.cfi_offset 7, -4
 24592              	.LCFI1:
 24593              		.cfi_def_cfa_register 7
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   /* Reset CRC generator */
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   CRC->CR = CRC_CR_RESET;
 24594              		.loc 1 53 0
 24595 0004 034B     		ldr	r3, .L2
 24596 0006 4FF00102 		mov	r2, #1
 24597 000a 9A60     		str	r2, [r3, #8]
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 24598              		.loc 1 54 0
 24599 000c BD46     		mov	sp, r7
 24600 000e 80BC     		pop	{r7}
 24601 0010 7047     		bx	lr
 24602              	.L3:
 24603 0012 00BF     		.align	2
 24604              	.L2:
 24605 0014 00300240 		.word	1073885184
 24606              		.cfi_endproc
 24607              	.LFE110:
 24609              		.section	.text.CRC_CalcCRC,"ax",%progbits
 24610              		.align	2
 24611              		.global	CRC_CalcCRC
 24612              		.thumb
 24613              		.thumb_func
 24615              	CRC_CalcCRC:
 24616              	.LFB111:
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Computes the 32-bit CRC of a given data word(32-bit).
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  Data: data word(32-bit) to compute its CRC
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval 32-bit CRC
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** uint32_t CRC_CalcCRC(uint32_t Data)
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 24617              		.loc 1 62 0
 24618              		.cfi_startproc
 24619              		@ args = 0, pretend = 0, frame = 8
 24620              		@ frame_needed = 1, uses_anonymous_args = 0
 24621              		@ link register save eliminated.
 24622 0000 80B4     		push	{r7}
 24623              	.LCFI2:
 24624              		.cfi_def_cfa_offset 4
 24625 0002 83B0     		sub	sp, sp, #12
 24626              	.LCFI3:
 24627              		.cfi_def_cfa_offset 16
 24628 0004 00AF     		add	r7, sp, #0
 24629              		.cfi_offset 7, -4
 24630              	.LCFI4:
 24631              		.cfi_def_cfa_register 7
 24632 0006 7860     		str	r0, [r7, #4]
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   CRC->DR = Data;
 24633              		.loc 1 63 0
 24634 0008 054B     		ldr	r3, .L5
 24635 000a 7A68     		ldr	r2, [r7, #4]
 24636 000c 1A60     		str	r2, [r3, #0]
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   return (CRC->DR);
 24637              		.loc 1 65 0
 24638 000e 044B     		ldr	r3, .L5
 24639 0010 1B68     		ldr	r3, [r3, #0]
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 24640              		.loc 1 66 0
 24641 0012 1846     		mov	r0, r3
 24642 0014 07F10C07 		add	r7, r7, #12
 24643 0018 BD46     		mov	sp, r7
 24644 001a 80BC     		pop	{r7}
 24645 001c 7047     		bx	lr
 24646              	.L6:
 24647 001e 00BF     		.align	2
 24648              	.L5:
 24649 0020 00300240 		.word	1073885184
 24650              		.cfi_endproc
 24651              	.LFE111:
 24653              		.section	.text.CRC_CalcBlockCRC,"ax",%progbits
 24654              		.align	2
 24655              		.global	CRC_CalcBlockCRC
 24656              		.thumb
 24657              		.thumb_func
 24659              	CRC_CalcBlockCRC:
 24660              	.LFB112:
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Computes the 32-bit CRC of a given buffer of data word(32-bit).
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  pBuffer: pointer to the buffer containing the data to be computed
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  BufferLength: length of the buffer to be computed					
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval 32-bit CRC
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** uint32_t CRC_CalcBlockCRC(uint32_t pBuffer[], uint32_t BufferLength)
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 24661              		.loc 1 75 0
 24662              		.cfi_startproc
 24663              		@ args = 0, pretend = 0, frame = 16
 24664              		@ frame_needed = 1, uses_anonymous_args = 0
 24665              		@ link register save eliminated.
 24666 0000 80B4     		push	{r7}
 24667              	.LCFI5:
 24668              		.cfi_def_cfa_offset 4
 24669 0002 85B0     		sub	sp, sp, #20
 24670              	.LCFI6:
 24671              		.cfi_def_cfa_offset 24
 24672 0004 00AF     		add	r7, sp, #0
 24673              		.cfi_offset 7, -4
 24674              	.LCFI7:
 24675              		.cfi_def_cfa_register 7
 24676 0006 7860     		str	r0, [r7, #4]
 24677 0008 3960     		str	r1, [r7, #0]
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   uint32_t index = 0;
 24678              		.loc 1 76 0
 24679 000a 4FF00003 		mov	r3, #0
 24680 000e FB60     		str	r3, [r7, #12]
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   for(index = 0; index < BufferLength; index++)
 24681              		.loc 1 78 0
 24682 0010 4FF00003 		mov	r3, #0
 24683 0014 FB60     		str	r3, [r7, #12]
 24684 0016 0BE0     		b	.L8
 24685              	.L9:
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   {
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****     CRC->DR = pBuffer[index];
 24686              		.loc 1 80 0 discriminator 2
 24687 0018 0B4B     		ldr	r3, .L10
 24688 001a FA68     		ldr	r2, [r7, #12]
 24689 001c 4FEA8202 		lsl	r2, r2, #2
 24690 0020 7968     		ldr	r1, [r7, #4]
 24691 0022 8A18     		adds	r2, r1, r2
 24692 0024 1268     		ldr	r2, [r2, #0]
 24693 0026 1A60     		str	r2, [r3, #0]
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   for(index = 0; index < BufferLength; index++)
 24694              		.loc 1 78 0 discriminator 2
 24695 0028 FB68     		ldr	r3, [r7, #12]
 24696 002a 03F10103 		add	r3, r3, #1
 24697 002e FB60     		str	r3, [r7, #12]
 24698              	.L8:
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   for(index = 0; index < BufferLength; index++)
 24699              		.loc 1 78 0 is_stmt 0 discriminator 1
 24700 0030 FA68     		ldr	r2, [r7, #12]
 24701 0032 3B68     		ldr	r3, [r7, #0]
 24702 0034 9A42     		cmp	r2, r3
 24703 0036 EFD3     		bcc	.L9
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   }
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   return (CRC->DR);
 24704              		.loc 1 82 0 is_stmt 1
 24705 0038 034B     		ldr	r3, .L10
 24706 003a 1B68     		ldr	r3, [r3, #0]
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 24707              		.loc 1 83 0
 24708 003c 1846     		mov	r0, r3
 24709 003e 07F11407 		add	r7, r7, #20
 24710 0042 BD46     		mov	sp, r7
 24711 0044 80BC     		pop	{r7}
 24712 0046 7047     		bx	lr
 24713              	.L11:
 24714              		.align	2
 24715              	.L10:
 24716 0048 00300240 		.word	1073885184
 24717              		.cfi_endproc
 24718              	.LFE112:
 24720              		.section	.text.CRC_GetCRC,"ax",%progbits
 24721              		.align	2
 24722              		.global	CRC_GetCRC
 24723              		.thumb
 24724              		.thumb_func
 24726              	CRC_GetCRC:
 24727              	.LFB113:
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Returns the current CRC value.
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  None
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval 32-bit CRC
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** uint32_t CRC_GetCRC(void)
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 24728              		.loc 1 91 0
 24729              		.cfi_startproc
 24730              		@ args = 0, pretend = 0, frame = 0
 24731              		@ frame_needed = 1, uses_anonymous_args = 0
 24732              		@ link register save eliminated.
 24733 0000 80B4     		push	{r7}
 24734              	.LCFI8:
 24735              		.cfi_def_cfa_offset 4
 24736 0002 00AF     		add	r7, sp, #0
 24737              		.cfi_offset 7, -4
 24738              	.LCFI9:
 24739              		.cfi_def_cfa_register 7
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   return (CRC->DR);
 24740              		.loc 1 92 0
 24741 0004 024B     		ldr	r3, .L13
 24742 0006 1B68     		ldr	r3, [r3, #0]
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 24743              		.loc 1 93 0
 24744 0008 1846     		mov	r0, r3
 24745 000a BD46     		mov	sp, r7
 24746 000c 80BC     		pop	{r7}
 24747 000e 7047     		bx	lr
 24748              	.L14:
 24749              		.align	2
 24750              	.L13:
 24751 0010 00300240 		.word	1073885184
 24752              		.cfi_endproc
 24753              	.LFE113:
 24755              		.section	.text.CRC_SetIDRegister,"ax",%progbits
 24756              		.align	2
 24757              		.global	CRC_SetIDRegister
 24758              		.thumb
 24759              		.thumb_func
 24761              	CRC_SetIDRegister:
 24762              	.LFB114:
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Stores a 8-bit data in the Independent Data(ID) register.
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  IDValue: 8-bit value to be stored in the ID register 					
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval None
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** void CRC_SetIDRegister(uint8_t IDValue)
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 24763              		.loc 1 101 0
 24764              		.cfi_startproc
 24765              		@ args = 0, pretend = 0, frame = 8
 24766              		@ frame_needed = 1, uses_anonymous_args = 0
 24767              		@ link register save eliminated.
 24768 0000 80B4     		push	{r7}
 24769              	.LCFI10:
 24770              		.cfi_def_cfa_offset 4
 24771 0002 83B0     		sub	sp, sp, #12
 24772              	.LCFI11:
 24773              		.cfi_def_cfa_offset 16
 24774 0004 00AF     		add	r7, sp, #0
 24775              		.cfi_offset 7, -4
 24776              	.LCFI12:
 24777              		.cfi_def_cfa_register 7
 24778 0006 0346     		mov	r3, r0
 24779 0008 FB71     		strb	r3, [r7, #7]
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   CRC->IDR = IDValue;
 24780              		.loc 1 102 0
 24781 000a 044B     		ldr	r3, .L16
 24782 000c FA79     		ldrb	r2, [r7, #7]
 24783 000e 1A71     		strb	r2, [r3, #4]
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 24784              		.loc 1 103 0
 24785 0010 07F10C07 		add	r7, r7, #12
 24786 0014 BD46     		mov	sp, r7
 24787 0016 80BC     		pop	{r7}
 24788 0018 7047     		bx	lr
 24789              	.L17:
 24790 001a 00BF     		.align	2
 24791              	.L16:
 24792 001c 00300240 		.word	1073885184
 24793              		.cfi_endproc
 24794              	.LFE114:
 24796              		.section	.text.CRC_GetIDRegister,"ax",%progbits
 24797              		.align	2
 24798              		.global	CRC_GetIDRegister
 24799              		.thumb
 24800              		.thumb_func
 24802              	CRC_GetIDRegister:
 24803              	.LFB115:
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** 
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** /**
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @brief  Returns the 8-bit data stored in the Independent Data(ID) register
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @param  None
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   * @retval 8-bit value of the ID register 
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   */
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** uint8_t CRC_GetIDRegister(void)
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** {
 24804              		.loc 1 111 0
 24805              		.cfi_startproc
 24806              		@ args = 0, pretend = 0, frame = 0
 24807              		@ frame_needed = 1, uses_anonymous_args = 0
 24808              		@ link register save eliminated.
 24809 0000 80B4     		push	{r7}
 24810              	.LCFI13:
 24811              		.cfi_def_cfa_offset 4
 24812 0002 00AF     		add	r7, sp, #0
 24813              		.cfi_offset 7, -4
 24814              	.LCFI14:
 24815              		.cfi_def_cfa_register 7
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c ****   return (CRC->IDR);
 24816              		.loc 1 112 0
 24817 0004 034B     		ldr	r3, .L19
 24818 0006 1B79     		ldrb	r3, [r3, #4]
 24819 0008 DBB2     		uxtb	r3, r3
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_crc.c **** }
 24820              		.loc 1 113 0
 24821 000a 1846     		mov	r0, r3
 24822 000c BD46     		mov	sp, r7
 24823 000e 80BC     		pop	{r7}
 24824 0010 7047     		bx	lr
 24825              	.L20:
 24826 0012 00BF     		.align	2
 24827              	.L19:
 24828 0014 00300240 		.word	1073885184
 24829              		.cfi_endproc
 24830              	.LFE115:
 24832              		.text
 24833              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_crc.c
     /tmp/ccE1Wa7f.s:24575  .text.CRC_ResetDR:00000000 $t
     /tmp/ccE1Wa7f.s:24580  .text.CRC_ResetDR:00000000 CRC_ResetDR
     /tmp/ccE1Wa7f.s:24605  .text.CRC_ResetDR:00000014 $d
     /tmp/ccE1Wa7f.s:24610  .text.CRC_CalcCRC:00000000 $t
     /tmp/ccE1Wa7f.s:24615  .text.CRC_CalcCRC:00000000 CRC_CalcCRC
     /tmp/ccE1Wa7f.s:24649  .text.CRC_CalcCRC:00000020 $d
     /tmp/ccE1Wa7f.s:24654  .text.CRC_CalcBlockCRC:00000000 $t
     /tmp/ccE1Wa7f.s:24659  .text.CRC_CalcBlockCRC:00000000 CRC_CalcBlockCRC
     /tmp/ccE1Wa7f.s:24716  .text.CRC_CalcBlockCRC:00000048 $d
     /tmp/ccE1Wa7f.s:24721  .text.CRC_GetCRC:00000000 $t
     /tmp/ccE1Wa7f.s:24726  .text.CRC_GetCRC:00000000 CRC_GetCRC
     /tmp/ccE1Wa7f.s:24751  .text.CRC_GetCRC:00000010 $d
     /tmp/ccE1Wa7f.s:24756  .text.CRC_SetIDRegister:00000000 $t
     /tmp/ccE1Wa7f.s:24761  .text.CRC_SetIDRegister:00000000 CRC_SetIDRegister
     /tmp/ccE1Wa7f.s:24792  .text.CRC_SetIDRegister:0000001c $d
     /tmp/ccE1Wa7f.s:24797  .text.CRC_GetIDRegister:00000000 $t
     /tmp/ccE1Wa7f.s:24802  .text.CRC_GetIDRegister:00000000 CRC_GetIDRegister
     /tmp/ccE1Wa7f.s:24828  .text.CRC_GetIDRegister:00000014 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
