   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_hash.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c"
 24575              		.align	2
 24576              		.global	HASH_DeInit
 24577              		.thumb
 24578              		.thumb_func
 24580              	HASH_DeInit:
 24581              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @file    stm32f4xx_hash.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          functionalities of the HASH / HMAC Processor (HASH) peripheral:           
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Initialization and Configuration functions
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Message Digest generation functions
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - context swapping functions   
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - DMA interface function       
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Interrupts and flags management       
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @verbatim
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                               
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ===================================================================      
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                                   How to use this driver
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ===================================================================
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HASH operation : 
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ----------------                   
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         1. Enable the HASH controller clock using 
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE) function.
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         2. Initialise the HASH using HASH_Init() function. 
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         3 . Reset the HASH processor core, so that the HASH will be ready 
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to compute he message digest of a new message by using 
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             HASH_Reset() function.
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         4. Enable the HASH controller using the HASH_Cmd() function. 
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         5. if using DMA for Data input transfer, Activate the DMA Request 
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            using HASH_DMACmd() function 
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                    
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         6. if DMA is not used for data transfer, use HASH_DataIn() function 
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            to enter data to IN FIFO.
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         7. Configure the Number of valid bits in last word of the message 
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            using HASH_SetLastWordValidBitsNbr() function.
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         8. if the message length is not an exact multiple of 512 bits, 
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            then the function HASH_StartDigest() must be called to 
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            launch the computation of the final digest.     
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         9. Once computed, the digest can be read using HASH_GetDigest() 
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            function.         
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                   
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *        10. To control HASH events you can use one of the following 
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              two methods:
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               a- Check on HASH flags using the HASH_GetFlagStatus() function.  
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               b- Use HASH interrupts through the function HASH_ITConfig() at 
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  initialization phase and HASH_GetITStatus() function into 
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  interrupt routines in hashing phase.
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          After checking on a flag you should clear it using HASH_ClearFlag()
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          function. And after checking on an interrupt event you should 
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          clear it using HASH_ClearITPendingBit() function.     
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                     
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *        11. Save and restore hash processor context using 
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            HASH_SaveContext() and HASH_RestoreContext() functions.     
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HMAC operation : 
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ----------------  
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          The HMAC algorithm is used for message authentication, by 
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          irreversibly binding the message being processed to a key chosen 
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          by the user. 
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          For HMAC specifications, refer to "HMAC: keyed-hashing for message 
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          authentication, H. Krawczyk, M. Bellare, R. Canetti, February 1997"
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          Basically, the HMAC algorithm consists of two nested hash operations:
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HMAC(message) = Hash[((key | pad) XOR 0x5C) | Hash(((key | pad) XOR 0x36) | message)]
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          where:
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          - "pad" is a sequence of zeroes needed to extend the key to the 
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  length of the underlying hash function data block (that is 
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  512 bits for both the SHA-1 and MD5 hash algorithms)
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          - "|"   represents the concatenation operator 
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         To compute the HMAC, four different phases are required:
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                    
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         1.  Initialise the HASH using HASH_Init() function to do HMAC 
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             operation. 
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         2.  The key (to be used for the inner hash function) is then given 
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to the core. This operation follows the same mechanism as the 
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             one used to send the message in the hash operation (that is, 
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             by HASH_DataIn() function and, finally, 
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             HASH_StartDigest() function.
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         3.  Once the last word has been entered and computation has started, 
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the hash processor elaborates the key. It is then ready to 
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             accept the message text using the same mechanism as the one 
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             used to send the message in the hash operation.
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *       
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         4.  After the first hash round, the hash processor returns "ready" 
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to indicate that it is ready to receive the key to be used for 
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the outer hash function (normally, this key is the same as the 
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             one used for the inner hash function). When the last word of 
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the key is entered and computation starts, the HMAC result is 
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             made available using HASH_GetDigest() function.
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @endverbatim
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @attention
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************  
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Includes ------------------------------------------------------------------*/
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** #include "stm32f4xx_hash.h"
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** #include "stm32f4xx_rcc.h"
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH 
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief HASH driver modules
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private typedef -----------------------------------------------------------*/
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private define ------------------------------------------------------------*/
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private macro -------------------------------------------------------------*/
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private variables ---------------------------------------------------------*/
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private function prototypes -----------------------------------------------*/
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private functions ---------------------------------------------------------*/ 
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Private_Functions
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group1 Initialization and Configuration functions
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief    Initialization and Configuration functions 
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim    
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       Initialization and Configuration functions
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to 
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Initialize the HASH peripheral
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Configure the HASH Processor 
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - MD5/SHA1, 
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH/HMAC, 
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - datatype 
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HMAC Key (if mode = HMAC)
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Reset the HASH Processor 
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Deinitializes the HASH peripheral registers to their default reset values
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DeInit(void)
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 24582              		.loc 1 172 0
 24583              		.cfi_startproc
 24584              		@ args = 0, pretend = 0, frame = 0
 24585              		@ frame_needed = 1, uses_anonymous_args = 0
 24586 0000 80B5     		push	{r7, lr}
 24587              	.LCFI0:
 24588              		.cfi_def_cfa_offset 8
 24589 0002 00AF     		add	r7, sp, #0
 24590              		.cfi_offset 14, -4
 24591              		.cfi_offset 7, -8
 24592              	.LCFI1:
 24593              		.cfi_def_cfa_register 7
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Enable HASH reset state */
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, ENABLE);
 24594              		.loc 1 174 0
 24595 0004 4FF02000 		mov	r0, #32
 24596 0008 4FF00101 		mov	r1, #1
 24597 000c FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Release HASH from reset state */
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, DISABLE);
 24598              		.loc 1 176 0
 24599 0010 4FF02000 		mov	r0, #32
 24600 0014 4FF00001 		mov	r1, #0
 24601 0018 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 24602              		.loc 1 177 0
 24603 001c 80BD     		pop	{r7, pc}
 24604              		.cfi_endproc
 24605              	.LFE110:
 24607 001e 00BF     		.section	.text.HASH_Init,"ax",%progbits
 24608              		.align	2
 24609              		.global	HASH_Init
 24610              		.thumb
 24611              		.thumb_func
 24613              	HASH_Init:
 24614              	.LFB111:
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Initializes the HASH peripheral according to the specified parameters
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         in the HASH_InitStruct structure.
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   the hash processor is reset when calling this function so that the
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         HASH will be ready to compute the message digest of a new message.
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         There is no need to call HASH_Reset() function.           
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct: pointer to a HASH_InitTypeDef structure that contains
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the configuration information for the HASH peripheral.
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The field HASH_HMACKeyType in HASH_InitTypeDef must be filled only 
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          if the algorithm mode is HMAC.       
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_Init(HASH_InitTypeDef* HASH_InitStruct)
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 24615              		.loc 1 192 0
 24616              		.cfi_startproc
 24617              		@ args = 0, pretend = 0, frame = 8
 24618              		@ frame_needed = 1, uses_anonymous_args = 0
 24619              		@ link register save eliminated.
 24620 0000 80B4     		push	{r7}
 24621              	.LCFI2:
 24622              		.cfi_def_cfa_offset 4
 24623 0002 83B0     		sub	sp, sp, #12
 24624              	.LCFI3:
 24625              		.cfi_def_cfa_offset 16
 24626 0004 00AF     		add	r7, sp, #0
 24627              		.cfi_offset 7, -4
 24628              	.LCFI4:
 24629              		.cfi_def_cfa_register 7
 24630 0006 7860     		str	r0, [r7, #4]
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOSELECTION(HASH_InitStruct->HASH_AlgoSelection));
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_DATATYPE(HASH_InitStruct->HASH_DataType));
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOMODE(HASH_InitStruct->HASH_AlgoMode));
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Configure the Algorithm used, algorithm mode and the datatype */
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR &= ~ (HASH_CR_ALGO | HASH_CR_DATATYPE | HASH_CR_MODE);
 24631              		.loc 1 199 0
 24632 0008 184B     		ldr	r3, .L4
 24633 000a 184A     		ldr	r2, .L4
 24634 000c 1268     		ldr	r2, [r2, #0]
 24635 000e 22F0F002 		bic	r2, r2, #240
 24636 0012 1A60     		str	r2, [r3, #0]
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
 24637              		.loc 1 200 0
 24638 0014 154B     		ldr	r3, .L4
 24639 0016 154A     		ldr	r2, .L4
 24640 0018 1168     		ldr	r1, [r2, #0]
 24641 001a 7A68     		ldr	r2, [r7, #4]
 24642 001c 1068     		ldr	r0, [r2, #0]
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
 24643              		.loc 1 201 0
 24644 001e 7A68     		ldr	r2, [r7, #4]
 24645 0020 9268     		ldr	r2, [r2, #8]
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
 24646              		.loc 1 200 0
 24647 0022 1043     		orrs	r0, r0, r2
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_AlgoMode);
 24648              		.loc 1 202 0
 24649 0024 7A68     		ldr	r2, [r7, #4]
 24650 0026 5268     		ldr	r2, [r2, #4]
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
 24651              		.loc 1 201 0
 24652 0028 40EA0202 		orr	r2, r0, r2
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
 24653              		.loc 1 200 0
 24654 002c 41EA0202 		orr	r2, r1, r2
 24655 0030 1A60     		str	r2, [r3, #0]
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* if algorithm mode is HMAC, set the Key */  
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if(HASH_InitStruct->HASH_AlgoMode == HASH_AlgoMode_HMAC) 
 24656              		.loc 1 205 0
 24657 0032 7B68     		ldr	r3, [r7, #4]
 24658 0034 5B68     		ldr	r3, [r3, #4]
 24659 0036 402B     		cmp	r3, #64
 24660 0038 0DD1     		bne	.L3
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     assert_param(IS_HASH_HMAC_KEYTYPE(HASH_InitStruct->HASH_HMACKeyType));
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_LKEY;
 24661              		.loc 1 208 0
 24662 003a 0C4B     		ldr	r3, .L4
 24663 003c 0B4A     		ldr	r2, .L4
 24664 003e 1268     		ldr	r2, [r2, #0]
 24665 0040 22F48032 		bic	r2, r2, #65536
 24666 0044 1A60     		str	r2, [r3, #0]
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
 24667              		.loc 1 209 0
 24668 0046 094B     		ldr	r3, .L4
 24669 0048 084A     		ldr	r2, .L4
 24670 004a 1168     		ldr	r1, [r2, #0]
 24671 004c 7A68     		ldr	r2, [r7, #4]
 24672 004e D268     		ldr	r2, [r2, #12]
 24673 0050 41EA0202 		orr	r2, r1, r2
 24674 0054 1A60     		str	r2, [r3, #0]
 24675              	.L3:
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core, so that the HASH will be ready to compute 
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      the message digest of a new message */
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;  
 24676              		.loc 1 214 0
 24677 0056 054B     		ldr	r3, .L4
 24678 0058 044A     		ldr	r2, .L4
 24679 005a 1268     		ldr	r2, [r2, #0]
 24680 005c 42F00402 		orr	r2, r2, #4
 24681 0060 1A60     		str	r2, [r3, #0]
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 24682              		.loc 1 215 0
 24683 0062 07F10C07 		add	r7, r7, #12
 24684 0066 BD46     		mov	sp, r7
 24685 0068 80BC     		pop	{r7}
 24686 006a 7047     		bx	lr
 24687              	.L5:
 24688              		.align	2
 24689              	.L4:
 24690 006c 00040650 		.word	1342571520
 24691              		.cfi_endproc
 24692              	.LFE111:
 24694              		.section	.text.HASH_StructInit,"ax",%progbits
 24695              		.align	2
 24696              		.global	HASH_StructInit
 24697              		.thumb
 24698              		.thumb_func
 24700              	HASH_StructInit:
 24701              	.LFB112:
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Fills each HASH_InitStruct member with its default value.
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct : pointer to a HASH_InitTypeDef structure which will
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          be initialized.  
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @note  The default values set are : Processor mode is HASH, Algorithm selected is SHA1,
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          Data type selected is 32b and HMAC Key Type is short key.  
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct)
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 24702              		.loc 1 226 0
 24703              		.cfi_startproc
 24704              		@ args = 0, pretend = 0, frame = 8
 24705              		@ frame_needed = 1, uses_anonymous_args = 0
 24706              		@ link register save eliminated.
 24707 0000 80B4     		push	{r7}
 24708              	.LCFI5:
 24709              		.cfi_def_cfa_offset 4
 24710 0002 83B0     		sub	sp, sp, #12
 24711              	.LCFI6:
 24712              		.cfi_def_cfa_offset 16
 24713 0004 00AF     		add	r7, sp, #0
 24714              		.cfi_offset 7, -4
 24715              	.LCFI7:
 24716              		.cfi_def_cfa_register 7
 24717 0006 7860     		str	r0, [r7, #4]
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoSelection member */
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 24718              		.loc 1 228 0
 24719 0008 7B68     		ldr	r3, [r7, #4]
 24720 000a 4FF00002 		mov	r2, #0
 24721 000e 1A60     		str	r2, [r3, #0]
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoMode member */
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoMode = HASH_AlgoMode_HASH;
 24722              		.loc 1 231 0
 24723 0010 7B68     		ldr	r3, [r7, #4]
 24724 0012 4FF00002 		mov	r2, #0
 24725 0016 5A60     		str	r2, [r3, #4]
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_DataType member */
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_DataType = HASH_DataType_32b;
 24726              		.loc 1 234 0
 24727 0018 7B68     		ldr	r3, [r7, #4]
 24728 001a 4FF00002 		mov	r2, #0
 24729 001e 9A60     		str	r2, [r3, #8]
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_HMACKeyType member */
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 24730              		.loc 1 237 0
 24731 0020 7B68     		ldr	r3, [r7, #4]
 24732 0022 4FF00002 		mov	r2, #0
 24733 0026 DA60     		str	r2, [r3, #12]
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 24734              		.loc 1 238 0
 24735 0028 07F10C07 		add	r7, r7, #12
 24736 002c BD46     		mov	sp, r7
 24737 002e 80BC     		pop	{r7}
 24738 0030 7047     		bx	lr
 24739              		.cfi_endproc
 24740              	.LFE112:
 24742 0032 00BF     		.section	.text.HASH_Reset,"ax",%progbits
 24743              		.align	2
 24744              		.global	HASH_Reset
 24745              		.thumb
 24746              		.thumb_func
 24748              	HASH_Reset:
 24749              	.LFB113:
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Resets the HASH processor core, so that the HASH will be ready
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         to compute the message digest of a new message.
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   Calling this function will clear the HASH_SR_DCIS (Digest calculation 
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         completion interrupt status) bit corresponding to HASH_IT_DCI 
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         interrupt and HASH_FLAG_DCIS flag. 
 246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_Reset(void)
 250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 24750              		.loc 1 250 0
 24751              		.cfi_startproc
 24752              		@ args = 0, pretend = 0, frame = 0
 24753              		@ frame_needed = 1, uses_anonymous_args = 0
 24754              		@ link register save eliminated.
 24755 0000 80B4     		push	{r7}
 24756              	.LCFI8:
 24757              		.cfi_def_cfa_offset 4
 24758 0002 00AF     		add	r7, sp, #0
 24759              		.cfi_offset 7, -4
 24760              	.LCFI9:
 24761              		.cfi_def_cfa_register 7
 251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core */
 252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;
 24762              		.loc 1 252 0
 24763 0004 044B     		ldr	r3, .L8
 24764 0006 044A     		ldr	r2, .L8
 24765 0008 1268     		ldr	r2, [r2, #0]
 24766 000a 42F00402 		orr	r2, r2, #4
 24767 000e 1A60     		str	r2, [r3, #0]
 253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 24768              		.loc 1 253 0
 24769 0010 BD46     		mov	sp, r7
 24770 0012 80BC     		pop	{r7}
 24771 0014 7047     		bx	lr
 24772              	.L9:
 24773 0016 00BF     		.align	2
 24774              	.L8:
 24775 0018 00040650 		.word	1342571520
 24776              		.cfi_endproc
 24777              	.LFE113:
 24779              		.section	.text.HASH_SetLastWordValidBitsNbr,"ax",%progbits
 24780              		.align	2
 24781              		.global	HASH_SetLastWordValidBitsNbr
 24782              		.thumb
 24783              		.thumb_func
 24785              	HASH_SetLastWordValidBitsNbr:
 24786              	.LFB114:
 254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  
 258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group2 Message Digest generation functions
 259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief    Message Digest generation functions
 260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim    
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       Message Digest generation functions
 264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing the generation of message digest: 
 266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Push data in the IN FIFO : using HASH_DataIn()
 267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Get the number of words set in IN FIFO, use HASH_GetInFIFOWordsNbr()  
 268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - set the last word valid bits number using HASH_SetLastWordValidBitsNbr() 
 269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - start digest calculation : using HASH_StartDigest()
 270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Get the Digest message : using HASH_GetDigest()
 271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  
 272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Configure the Number of valid bits in last word of the message
 279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  ValidNumber: Number of valid bits in last word of the message.
 280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           This parameter must be a number between 0 and 0x1F.
 281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x00: All 32 bits of the last data written are valid
 282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x01: Only bit [0] of the last data written is valid
 283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x02: Only bits[1:0] of the last data written are valid
 284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x03: Only bits[2:0] of the last data written are valid
 285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - ...
 286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x1F: Only bits[30:0] of the last data written are valid    
 287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The Number of valid bits must be set before to start the message 
 288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         digest competition (in Hash and HMAC) and key treatment(in HMAC).    
 289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_SetLastWordValidBitsNbr(uint16_t ValidNumber)
 292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 24787              		.loc 1 292 0
 24788              		.cfi_startproc
 24789              		@ args = 0, pretend = 0, frame = 8
 24790              		@ frame_needed = 1, uses_anonymous_args = 0
 24791              		@ link register save eliminated.
 24792 0000 80B4     		push	{r7}
 24793              	.LCFI10:
 24794              		.cfi_def_cfa_offset 4
 24795 0002 83B0     		sub	sp, sp, #12
 24796              	.LCFI11:
 24797              		.cfi_def_cfa_offset 16
 24798 0004 00AF     		add	r7, sp, #0
 24799              		.cfi_offset 7, -4
 24800              	.LCFI12:
 24801              		.cfi_def_cfa_register 7
 24802 0006 0346     		mov	r3, r0
 24803 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_VALIDBITSNUMBER(ValidNumber));
 295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Configure the Number of valid bits in last word of the message */
 297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR &= ~(HASH_STR_NBW);
 24804              		.loc 1 297 0
 24805 000a 094B     		ldr	r3, .L11
 24806 000c 084A     		ldr	r2, .L11
 24807 000e 9268     		ldr	r2, [r2, #8]
 24808 0010 22F01F02 		bic	r2, r2, #31
 24809 0014 9A60     		str	r2, [r3, #8]
 298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR |= ValidNumber;
 24810              		.loc 1 298 0
 24811 0016 064B     		ldr	r3, .L11
 24812 0018 054A     		ldr	r2, .L11
 24813 001a 9168     		ldr	r1, [r2, #8]
 24814 001c FA88     		ldrh	r2, [r7, #6]
 24815 001e 41EA0202 		orr	r2, r1, r2
 24816 0022 9A60     		str	r2, [r3, #8]
 299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 24817              		.loc 1 299 0
 24818 0024 07F10C07 		add	r7, r7, #12
 24819 0028 BD46     		mov	sp, r7
 24820 002a 80BC     		pop	{r7}
 24821 002c 7047     		bx	lr
 24822              	.L12:
 24823 002e 00BF     		.align	2
 24824              	.L11:
 24825 0030 00040650 		.word	1342571520
 24826              		.cfi_endproc
 24827              	.LFE114:
 24829              		.section	.text.HASH_DataIn,"ax",%progbits
 24830              		.align	2
 24831              		.global	HASH_DataIn
 24832              		.thumb
 24833              		.thumb_func
 24835              	HASH_DataIn:
 24836              	.LFB115:
 300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 301:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 302:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Writes data in the Data Input FIFO
 303:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  Data: new data of the message to be processed.
 304:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 305:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 306:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DataIn(uint32_t Data)
 307:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 24837              		.loc 1 307 0
 24838              		.cfi_startproc
 24839              		@ args = 0, pretend = 0, frame = 8
 24840              		@ frame_needed = 1, uses_anonymous_args = 0
 24841              		@ link register save eliminated.
 24842 0000 80B4     		push	{r7}
 24843              	.LCFI13:
 24844              		.cfi_def_cfa_offset 4
 24845 0002 83B0     		sub	sp, sp, #12
 24846              	.LCFI14:
 24847              		.cfi_def_cfa_offset 16
 24848 0004 00AF     		add	r7, sp, #0
 24849              		.cfi_offset 7, -4
 24850              	.LCFI15:
 24851              		.cfi_def_cfa_register 7
 24852 0006 7860     		str	r0, [r7, #4]
 308:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Write in the DIN register a new data */
 309:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->DIN = Data;
 24853              		.loc 1 309 0
 24854 0008 034B     		ldr	r3, .L14
 24855 000a 7A68     		ldr	r2, [r7, #4]
 24856 000c 5A60     		str	r2, [r3, #4]
 310:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 24857              		.loc 1 310 0
 24858 000e 07F10C07 		add	r7, r7, #12
 24859 0012 BD46     		mov	sp, r7
 24860 0014 80BC     		pop	{r7}
 24861 0016 7047     		bx	lr
 24862              	.L15:
 24863              		.align	2
 24864              	.L14:
 24865 0018 00040650 		.word	1342571520
 24866              		.cfi_endproc
 24867              	.LFE115:
 24869              		.section	.text.HASH_GetInFIFOWordsNbr,"ax",%progbits
 24870              		.align	2
 24871              		.global	HASH_GetInFIFOWordsNbr
 24872              		.thumb
 24873              		.thumb_func
 24875              	HASH_GetInFIFOWordsNbr:
 24876              	.LFB116:
 311:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 312:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 313:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Returns the number of words already pushed into the IN FIFO.
 314:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 315:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The value of words already pushed into the IN FIFO.
 316:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 317:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** uint8_t HASH_GetInFIFOWordsNbr(void)
 318:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 24877              		.loc 1 318 0
 24878              		.cfi_startproc
 24879              		@ args = 0, pretend = 0, frame = 0
 24880              		@ frame_needed = 1, uses_anonymous_args = 0
 24881              		@ link register save eliminated.
 24882 0000 80B4     		push	{r7}
 24883              	.LCFI16:
 24884              		.cfi_def_cfa_offset 4
 24885 0002 00AF     		add	r7, sp, #0
 24886              		.cfi_offset 7, -4
 24887              	.LCFI17:
 24888              		.cfi_def_cfa_register 7
 319:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the value of NBW bits */
 320:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return ((HASH->CR & HASH_CR_NBW) >> 8);
 24889              		.loc 1 320 0
 24890 0004 054B     		ldr	r3, .L17
 24891 0006 1B68     		ldr	r3, [r3, #0]
 24892 0008 03F47063 		and	r3, r3, #3840
 24893 000c 4FEA1323 		lsr	r3, r3, #8
 24894 0010 DBB2     		uxtb	r3, r3
 321:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 24895              		.loc 1 321 0
 24896 0012 1846     		mov	r0, r3
 24897 0014 BD46     		mov	sp, r7
 24898 0016 80BC     		pop	{r7}
 24899 0018 7047     		bx	lr
 24900              	.L18:
 24901 001a 00BF     		.align	2
 24902              	.L17:
 24903 001c 00040650 		.word	1342571520
 24904              		.cfi_endproc
 24905              	.LFE116:
 24907              		.section	.text.HASH_GetDigest,"ax",%progbits
 24908              		.align	2
 24909              		.global	HASH_GetDigest
 24910              		.thumb
 24911              		.thumb_func
 24913              	HASH_GetDigest:
 24914              	.LFB117:
 322:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 323:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 324:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Provides the message digest result.
 325:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   In MD5 mode, Data[4] filed of HASH_MsgDigest structure is not used
 326:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         and is read as zero.  
 327:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_MessageDigest: pointer to a HASH_MsgDigest structure which will 
 328:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         hold the message digest result 
 329:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 330:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 331:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_GetDigest(HASH_MsgDigest* HASH_MessageDigest)
 332:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 24915              		.loc 1 332 0
 24916              		.cfi_startproc
 24917              		@ args = 0, pretend = 0, frame = 8
 24918              		@ frame_needed = 1, uses_anonymous_args = 0
 24919              		@ link register save eliminated.
 24920 0000 80B4     		push	{r7}
 24921              	.LCFI18:
 24922              		.cfi_def_cfa_offset 4
 24923 0002 83B0     		sub	sp, sp, #12
 24924              	.LCFI19:
 24925              		.cfi_def_cfa_offset 16
 24926 0004 00AF     		add	r7, sp, #0
 24927              		.cfi_offset 7, -4
 24928              	.LCFI20:
 24929              		.cfi_def_cfa_register 7
 24930 0006 7860     		str	r0, [r7, #4]
 333:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Get the data field */
 334:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[0] = HASH->HR[0];
 24931              		.loc 1 334 0
 24932 0008 0C4B     		ldr	r3, .L20
 24933 000a DA68     		ldr	r2, [r3, #12]
 24934 000c 7B68     		ldr	r3, [r7, #4]
 24935 000e 1A60     		str	r2, [r3, #0]
 335:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[1] = HASH->HR[1];
 24936              		.loc 1 335 0
 24937 0010 0A4B     		ldr	r3, .L20
 24938 0012 1A69     		ldr	r2, [r3, #16]
 24939 0014 7B68     		ldr	r3, [r7, #4]
 24940 0016 5A60     		str	r2, [r3, #4]
 336:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[2] = HASH->HR[2];
 24941              		.loc 1 336 0
 24942 0018 084B     		ldr	r3, .L20
 24943 001a 5A69     		ldr	r2, [r3, #20]
 24944 001c 7B68     		ldr	r3, [r7, #4]
 24945 001e 9A60     		str	r2, [r3, #8]
 337:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[3] = HASH->HR[3];
 24946              		.loc 1 337 0
 24947 0020 064B     		ldr	r3, .L20
 24948 0022 9A69     		ldr	r2, [r3, #24]
 24949 0024 7B68     		ldr	r3, [r7, #4]
 24950 0026 DA60     		str	r2, [r3, #12]
 338:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[4] = HASH->HR[4];
 24951              		.loc 1 338 0
 24952 0028 044B     		ldr	r3, .L20
 24953 002a DA69     		ldr	r2, [r3, #28]
 24954 002c 7B68     		ldr	r3, [r7, #4]
 24955 002e 1A61     		str	r2, [r3, #16]
 339:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 24956              		.loc 1 339 0
 24957 0030 07F10C07 		add	r7, r7, #12
 24958 0034 BD46     		mov	sp, r7
 24959 0036 80BC     		pop	{r7}
 24960 0038 7047     		bx	lr
 24961              	.L21:
 24962 003a 00BF     		.align	2
 24963              	.L20:
 24964 003c 00040650 		.word	1342571520
 24965              		.cfi_endproc
 24966              	.LFE117:
 24968              		.section	.text.HASH_StartDigest,"ax",%progbits
 24969              		.align	2
 24970              		.global	HASH_StartDigest
 24971              		.thumb
 24972              		.thumb_func
 24974              	HASH_StartDigest:
 24975              	.LFB118:
 340:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 341:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 342:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Starts the message padding and calculation of the final message     
 343:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 344:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 345:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 346:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_StartDigest(void)
 347:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 24976              		.loc 1 347 0
 24977              		.cfi_startproc
 24978              		@ args = 0, pretend = 0, frame = 0
 24979              		@ frame_needed = 1, uses_anonymous_args = 0
 24980              		@ link register save eliminated.
 24981 0000 80B4     		push	{r7}
 24982              	.LCFI21:
 24983              		.cfi_def_cfa_offset 4
 24984 0002 00AF     		add	r7, sp, #0
 24985              		.cfi_offset 7, -4
 24986              	.LCFI22:
 24987              		.cfi_def_cfa_register 7
 348:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Start the Digest calculation */
 349:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR |= HASH_STR_DCAL;
 24988              		.loc 1 349 0
 24989 0004 044B     		ldr	r3, .L23
 24990 0006 044A     		ldr	r2, .L23
 24991 0008 9268     		ldr	r2, [r2, #8]
 24992 000a 42F48072 		orr	r2, r2, #256
 24993 000e 9A60     		str	r2, [r3, #8]
 350:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 24994              		.loc 1 350 0
 24995 0010 BD46     		mov	sp, r7
 24996 0012 80BC     		pop	{r7}
 24997 0014 7047     		bx	lr
 24998              	.L24:
 24999 0016 00BF     		.align	2
 25000              	.L23:
 25001 0018 00040650 		.word	1342571520
 25002              		.cfi_endproc
 25003              	.LFE118:
 25005              		.section	.text.HASH_SaveContext,"ax",%progbits
 25006              		.align	2
 25007              		.global	HASH_SaveContext
 25008              		.thumb
 25009              		.thumb_func
 25011              	HASH_SaveContext:
 25012              	.LFB119:
 351:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 352:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 353:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 354:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 355:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group3 Context swapping functions
 356:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   Context swapping functions
 357:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 358:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 359:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 360:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                              Context swapping functions
 361:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 362:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 363:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to save and store HASH Context
 364:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 365:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   It is possible to interrupt a HASH/HMAC process to perform another processing 
 366:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   with a higher priority, and to complete the interrupted process later on, when 
 367:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   the higher priority task is complete. To do so, the context of the interrupted 
 368:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   task must be saved from the HASH registers to memory, and then be restored 
 369:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   from memory to the HASH registers.
 370:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 371:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   1. To save the current context, use HASH_SaveContext() function
 372:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   2. To restore the saved context, use HASH_RestoreContext() function 
 373:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 374:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 375:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 376:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 377:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 378:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 379:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 380:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Save the Hash peripheral Context. 
 381:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The context can be saved only when no block is currently being 
 382:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         processed. So user must wait for DINIS = 1 (the last block has been 
 383:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         processed and the input FIFO is empty) or NBW != 0 (the FIFO is not 
 384:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         full and no processing is ongoing).   
 385:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_ContextSave: pointer to a HASH_Context structure that contains
 386:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the repository for current context.
 387:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 388:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 389:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_SaveContext(HASH_Context* HASH_ContextSave)
 390:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 25013              		.loc 1 390 0
 25014              		.cfi_startproc
 25015              		@ args = 0, pretend = 0, frame = 16
 25016              		@ frame_needed = 1, uses_anonymous_args = 0
 25017              		@ link register save eliminated.
 25018 0000 80B4     		push	{r7}
 25019              	.LCFI23:
 25020              		.cfi_def_cfa_offset 4
 25021 0002 85B0     		sub	sp, sp, #20
 25022              	.LCFI24:
 25023              		.cfi_def_cfa_offset 24
 25024 0004 00AF     		add	r7, sp, #0
 25025              		.cfi_offset 7, -4
 25026              	.LCFI25:
 25027              		.cfi_def_cfa_register 7
 25028 0006 7860     		str	r0, [r7, #4]
 391:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 25029              		.loc 1 391 0
 25030 0008 4FF00003 		mov	r3, #0
 25031 000c FB73     		strb	r3, [r7, #15]
 392:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 393:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* save context registers */
 394:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_IMR = HASH->IMR;  
 25032              		.loc 1 394 0
 25033 000e 154B     		ldr	r3, .L28
 25034 0010 1A6A     		ldr	r2, [r3, #32]
 25035 0012 7B68     		ldr	r3, [r7, #4]
 25036 0014 1A60     		str	r2, [r3, #0]
 395:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_STR = HASH->STR;      
 25037              		.loc 1 395 0
 25038 0016 134B     		ldr	r3, .L28
 25039 0018 9A68     		ldr	r2, [r3, #8]
 25040 001a 7B68     		ldr	r3, [r7, #4]
 25041 001c 5A60     		str	r2, [r3, #4]
 396:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_CR  = HASH->CR;     
 25042              		.loc 1 396 0
 25043 001e 114B     		ldr	r3, .L28
 25044 0020 1A68     		ldr	r2, [r3, #0]
 25045 0022 7B68     		ldr	r3, [r7, #4]
 25046 0024 9A60     		str	r2, [r3, #8]
 397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 25047              		.loc 1 397 0
 25048 0026 4FF00003 		mov	r3, #0
 25049 002a FB73     		strb	r3, [r7, #15]
 25050 002c 11E0     		b	.L26
 25051              	.L27:
 398:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 399:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      HASH_ContextSave->HASH_CSR[i] = HASH->CSR[i];
 25052              		.loc 1 399 0 discriminator 2
 25053 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25054 0030 0C4A     		ldr	r2, .L28
 25055 0032 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 25056 0034 01F13E01 		add	r1, r1, #62
 25057 0038 52F82120 		ldr	r2, [r2, r1, lsl #2]
 25058 003c 7968     		ldr	r1, [r7, #4]
 25059 003e 03F10203 		add	r3, r3, #2
 25060 0042 4FEA8303 		lsl	r3, r3, #2
 25061 0046 CB18     		adds	r3, r1, r3
 25062 0048 5A60     		str	r2, [r3, #4]
 397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 25063              		.loc 1 397 0 discriminator 2
 25064 004a FB7B     		ldrb	r3, [r7, #15]
 25065 004c 03F10103 		add	r3, r3, #1
 25066 0050 FB73     		strb	r3, [r7, #15]
 25067              	.L26:
 397:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 25068              		.loc 1 397 0 is_stmt 0 discriminator 1
 25069 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25070 0054 322B     		cmp	r3, #50
 25071 0056 EAD9     		bls	.L27
 400:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }   
 401:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 25072              		.loc 1 401 0 is_stmt 1
 25073 0058 07F11407 		add	r7, r7, #20
 25074 005c BD46     		mov	sp, r7
 25075 005e 80BC     		pop	{r7}
 25076 0060 7047     		bx	lr
 25077              	.L29:
 25078 0062 00BF     		.align	2
 25079              	.L28:
 25080 0064 00040650 		.word	1342571520
 25081              		.cfi_endproc
 25082              	.LFE119:
 25084              		.section	.text.HASH_RestoreContext,"ax",%progbits
 25085              		.align	2
 25086              		.global	HASH_RestoreContext
 25087              		.thumb
 25088              		.thumb_func
 25090              	HASH_RestoreContext:
 25091              	.LFB120:
 402:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 403:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 404:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Restore the Hash peripheral Context.  
 405:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   After calling this function, user can restart the processing from the
 406:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         point where it has been interrupted.  
 407:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_ContextRestore: pointer to a HASH_Context structure that contains
 408:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the repository for saved context.
 409:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 410:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 411:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_RestoreContext(HASH_Context* HASH_ContextRestore)  
 412:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 25092              		.loc 1 412 0
 25093              		.cfi_startproc
 25094              		@ args = 0, pretend = 0, frame = 16
 25095              		@ frame_needed = 1, uses_anonymous_args = 0
 25096              		@ link register save eliminated.
 25097 0000 80B4     		push	{r7}
 25098              	.LCFI26:
 25099              		.cfi_def_cfa_offset 4
 25100 0002 85B0     		sub	sp, sp, #20
 25101              	.LCFI27:
 25102              		.cfi_def_cfa_offset 24
 25103 0004 00AF     		add	r7, sp, #0
 25104              		.cfi_offset 7, -4
 25105              	.LCFI28:
 25106              		.cfi_def_cfa_register 7
 25107 0006 7860     		str	r0, [r7, #4]
 413:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 25108              		.loc 1 413 0
 25109 0008 4FF00003 		mov	r3, #0
 25110 000c FB73     		strb	r3, [r7, #15]
 414:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 415:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* restore context registers */
 416:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->IMR = HASH_ContextRestore->HASH_IMR;   
 25111              		.loc 1 416 0
 25112 000e 184B     		ldr	r3, .L33
 25113 0010 7A68     		ldr	r2, [r7, #4]
 25114 0012 1268     		ldr	r2, [r2, #0]
 25115 0014 1A62     		str	r2, [r3, #32]
 417:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR = HASH_ContextRestore->HASH_STR;     
 25116              		.loc 1 417 0
 25117 0016 164B     		ldr	r3, .L33
 25118 0018 7A68     		ldr	r2, [r7, #4]
 25119 001a 5268     		ldr	r2, [r2, #4]
 25120 001c 9A60     		str	r2, [r3, #8]
 418:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR = HASH_ContextRestore->HASH_CR;
 25121              		.loc 1 418 0
 25122 001e 144B     		ldr	r3, .L33
 25123 0020 7A68     		ldr	r2, [r7, #4]
 25124 0022 9268     		ldr	r2, [r2, #8]
 25125 0024 1A60     		str	r2, [r3, #0]
 419:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 420:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the hash processor */
 421:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT; 
 25126              		.loc 1 421 0
 25127 0026 124B     		ldr	r3, .L33
 25128 0028 114A     		ldr	r2, .L33
 25129 002a 1268     		ldr	r2, [r2, #0]
 25130 002c 42F00402 		orr	r2, r2, #4
 25131 0030 1A60     		str	r2, [r3, #0]
 422:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 423:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    /* continue restoring context registers */     
 424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 25132              		.loc 1 424 0
 25133 0032 4FF00003 		mov	r3, #0
 25134 0036 FB73     		strb	r3, [r7, #15]
 25135 0038 11E0     		b	.L31
 25136              	.L32:
 425:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 426:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      HASH->CSR[i] = HASH_ContextRestore->HASH_CSR[i];
 25137              		.loc 1 426 0 discriminator 2
 25138 003a 0D4A     		ldr	r2, .L33
 25139 003c F87B     		ldrb	r0, [r7, #15]	@ zero_extendqisi2
 25140 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25141 0040 7968     		ldr	r1, [r7, #4]
 25142 0042 03F10203 		add	r3, r3, #2
 25143 0046 4FEA8303 		lsl	r3, r3, #2
 25144 004a CB18     		adds	r3, r1, r3
 25145 004c 5968     		ldr	r1, [r3, #4]
 25146 004e 00F13E03 		add	r3, r0, #62
 25147 0052 42F82310 		str	r1, [r2, r3, lsl #2]
 424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 25148              		.loc 1 424 0 discriminator 2
 25149 0056 FB7B     		ldrb	r3, [r7, #15]
 25150 0058 03F10103 		add	r3, r3, #1
 25151 005c FB73     		strb	r3, [r7, #15]
 25152              	.L31:
 424:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 25153              		.loc 1 424 0 is_stmt 0 discriminator 1
 25154 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 25155 0060 322B     		cmp	r3, #50
 25156 0062 EAD9     		bls	.L32
 427:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }   
 428:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 25157              		.loc 1 428 0 is_stmt 1
 25158 0064 07F11407 		add	r7, r7, #20
 25159 0068 BD46     		mov	sp, r7
 25160 006a 80BC     		pop	{r7}
 25161 006c 7047     		bx	lr
 25162              	.L34:
 25163 006e 00BF     		.align	2
 25164              	.L33:
 25165 0070 00040650 		.word	1342571520
 25166              		.cfi_endproc
 25167              	.LFE120:
 25169              		.section	.text.HASH_DMACmd,"ax",%progbits
 25170              		.align	2
 25171              		.global	HASH_DMACmd
 25172              		.thumb
 25173              		.thumb_func
 25175              	HASH_DMACmd:
 25176              	.LFB121:
 429:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 430:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 431:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 432:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 433:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group4 HASH's DMA interface Configuration function
 434:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   HASH's DMA interface Configuration function 
 435:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 436:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 437:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 438:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                    HASH's DMA interface Configuration function
 439:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 440:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 441:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to configure the DMA interface for 
 442:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH/ HMAC data input transfer.
 443:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 444:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   When the DMA mode is enabled (using the HASH_DMACmd() function), data can be 
 445:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   sent to the IN FIFO using the DMA peripheral.
 446:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 447:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 448:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 449:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 450:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 451:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 452:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 453:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 454:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the HASH DMA interface.
 455:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The DMA is disabled by hardware after the end of transfer.
 456:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 457:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
 458:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 459:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 460:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DMACmd(FunctionalState NewState)
 461:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 25177              		.loc 1 461 0
 25178              		.cfi_startproc
 25179              		@ args = 0, pretend = 0, frame = 8
 25180              		@ frame_needed = 1, uses_anonymous_args = 0
 25181              		@ link register save eliminated.
 25182 0000 80B4     		push	{r7}
 25183              	.LCFI29:
 25184              		.cfi_def_cfa_offset 4
 25185 0002 83B0     		sub	sp, sp, #12
 25186              	.LCFI30:
 25187              		.cfi_def_cfa_offset 16
 25188 0004 00AF     		add	r7, sp, #0
 25189              		.cfi_offset 7, -4
 25190              	.LCFI31:
 25191              		.cfi_def_cfa_register 7
 25192 0006 0346     		mov	r3, r0
 25193 0008 FB71     		strb	r3, [r7, #7]
 462:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 463:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 464:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 465:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 25194              		.loc 1 465 0
 25195 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25196 000c 002B     		cmp	r3, #0
 25197 000e 06D0     		beq	.L36
 466:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 467:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Enable the HASH DMA request */
 468:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_DMAE;
 25198              		.loc 1 468 0
 25199 0010 084B     		ldr	r3, .L38
 25200 0012 084A     		ldr	r2, .L38
 25201 0014 1268     		ldr	r2, [r2, #0]
 25202 0016 42F00802 		orr	r2, r2, #8
 25203 001a 1A60     		str	r2, [r3, #0]
 25204 001c 05E0     		b	.L35
 25205              	.L36:
 469:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 470:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 471:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 472:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Disable the HASH DMA request */
 473:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_DMAE;
 25206              		.loc 1 473 0
 25207 001e 054B     		ldr	r3, .L38
 25208 0020 044A     		ldr	r2, .L38
 25209 0022 1268     		ldr	r2, [r2, #0]
 25210 0024 22F00802 		bic	r2, r2, #8
 25211 0028 1A60     		str	r2, [r3, #0]
 25212              	.L35:
 474:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 475:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 25213              		.loc 1 475 0
 25214 002a 07F10C07 		add	r7, r7, #12
 25215 002e BD46     		mov	sp, r7
 25216 0030 80BC     		pop	{r7}
 25217 0032 7047     		bx	lr
 25218              	.L39:
 25219              		.align	2
 25220              	.L38:
 25221 0034 00040650 		.word	1342571520
 25222              		.cfi_endproc
 25223              	.LFE121:
 25225              		.section	.text.HASH_ITConfig,"ax",%progbits
 25226              		.align	2
 25227              		.global	HASH_ITConfig
 25228              		.thumb
 25229              		.thumb_func
 25231              	HASH_ITConfig:
 25232              	.LFB122:
 476:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 477:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 478:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 479:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 480:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group5 Interrupts and flags management functions
 481:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   Interrupts and flags management functions
 482:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 483:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 484:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 485:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                    Interrupts and flags management functions
 486:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 487:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 488:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to configure the HASH Interrupts and 
 489:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   to get the status and clear flags and Interrupts pending bits.
 490:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 491:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   The HASH provides 2 Interrupts sources and 5 Flags:
 492:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 493:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Flags :
 494:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ---------- 
 495:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      1. HASH_FLAG_DINIS : set when 16 locations are free in the Data IN FIFO 
 496:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           which means that a  new block (512 bit) can be entered 
 497:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           into the input buffer.
 498:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           
 499:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      2. HASH_FLAG_DCIS :  set when Digest calculation is complete
 500:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       
 501:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      3. HASH_FLAG_DMAS :  set when HASH's DMA interface is enabled (DMAE=1) or 
 502:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           a transfer is ongoing.
 503:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware.
 504:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                            
 505:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      4. HASH_FLAG_BUSY :  set when The hash core is processing a block of data
 506:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware. 
 507:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                            
 508:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      5. HASH_FLAG_DINNE : set when Data IN FIFO is not empty which means that 
 509:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           the Data IN FIFO contains at least one word of data.
 510:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware.
 511:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      
 512:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Interrupts :
 513:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ------------
 514:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     
 515:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    1. HASH_IT_DINI  : if enabled, this interrupt source is pending when 16 
 516:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       locations are free in the Data IN FIFO  which means that 
 517:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       a new block (512 bit) can be entered into the input buffer.
 518:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       This interrupt source is cleared using 
 519:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       HASH_ClearITPendingBit(HASH_IT_DINI) function.
 520:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 521:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    2. HASH_IT_DCI   : if enabled, this interrupt source is pending when Digest 
 522:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       calculation is complete.
 523:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       This interrupt source is cleared using 
 524:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       HASH_ClearITPendingBit(HASH_IT_DCI) function.
 525:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 526:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Managing the HASH controller events :
 527:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ------------------------------------ 
 528:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   The user should identify which mode will be used in his application to manage 
 529:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   the HASH controller events: Polling mode or Interrupt mode.
 530:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 531:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   1.  In the Polling Mode it is advised to use the following functions:
 532:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_GetFlagStatus() : to check if flags events occur. 
 533:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ClearFlag()     : to clear the flags events.
 534:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     
 535:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 536:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ITConfig()       : to enable or disable the interrupt source.
 537:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_GetITStatus()    : to check if Interrupt occurs.
 538:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ClearITPendingBit() : to clear the Interrupt pending Bit 
 539:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                                 (corresponding Flag). 
 540:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 541:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 542:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 543:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 544:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 545:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 546:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the specified HASH interrupts.
 547:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to be enabled or disabled.
 548:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 549:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 550:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 551:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the specified HASH interrupt.
 552:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           This parameter can be: ENABLE or DISABLE.
 553:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 554:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 555:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ITConfig(uint8_t HASH_IT, FunctionalState NewState)
 556:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 25233              		.loc 1 556 0
 25234              		.cfi_startproc
 25235              		@ args = 0, pretend = 0, frame = 8
 25236              		@ frame_needed = 1, uses_anonymous_args = 0
 25237              		@ link register save eliminated.
 25238 0000 80B4     		push	{r7}
 25239              	.LCFI32:
 25240              		.cfi_def_cfa_offset 4
 25241 0002 83B0     		sub	sp, sp, #12
 25242              	.LCFI33:
 25243              		.cfi_def_cfa_offset 16
 25244 0004 00AF     		add	r7, sp, #0
 25245              		.cfi_offset 7, -4
 25246              	.LCFI34:
 25247              		.cfi_def_cfa_register 7
 25248 0006 0246     		mov	r2, r0
 25249 0008 0B46     		mov	r3, r1
 25250 000a FA71     		strb	r2, [r7, #7]
 25251 000c BB71     		strb	r3, [r7, #6]
 557:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 558:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 559:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 560:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 561:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 25252              		.loc 1 561 0
 25253 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 25254 0010 002B     		cmp	r3, #0
 25255 0012 07D0     		beq	.L41
 562:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 563:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Enable the selected HASH interrupt */
 564:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->IMR |= HASH_IT;
 25256              		.loc 1 564 0
 25257 0014 0B4B     		ldr	r3, .L43
 25258 0016 0B4A     		ldr	r2, .L43
 25259 0018 116A     		ldr	r1, [r2, #32]
 25260 001a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 25261 001c 41EA0202 		orr	r2, r1, r2
 25262 0020 1A62     		str	r2, [r3, #32]
 25263 0022 09E0     		b	.L40
 25264              	.L41:
 565:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 566:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 567:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 568:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Disable the selected HASH interrupt */
 569:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->IMR &= (uint8_t) ~HASH_IT;
 25265              		.loc 1 569 0
 25266 0024 074B     		ldr	r3, .L43
 25267 0026 074A     		ldr	r2, .L43
 25268 0028 116A     		ldr	r1, [r2, #32]
 25269 002a FA79     		ldrb	r2, [r7, #7]
 25270 002c 6FEA0202 		mvn	r2, r2
 25271 0030 D2B2     		uxtb	r2, r2
 25272 0032 01EA0202 		and	r2, r1, r2
 25273 0036 1A62     		str	r2, [r3, #32]
 25274              	.L40:
 570:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 571:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 25275              		.loc 1 571 0
 25276 0038 07F10C07 		add	r7, r7, #12
 25277 003c BD46     		mov	sp, r7
 25278 003e 80BC     		pop	{r7}
 25279 0040 7047     		bx	lr
 25280              	.L44:
 25281 0042 00BF     		.align	2
 25282              	.L43:
 25283 0044 00040650 		.word	1342571520
 25284              		.cfi_endproc
 25285              	.LFE122:
 25287              		.section	.text.HASH_GetFlagStatus,"ax",%progbits
 25288              		.align	2
 25289              		.global	HASH_GetFlagStatus
 25290              		.thumb
 25291              		.thumb_func
 25293              	HASH_GetFlagStatus:
 25294              	.LFB123:
 572:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 573:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 574:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH flag is set or not.
 575:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the HASH flag to check.
 576:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 577:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data input interrupt status flag
 578:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest calculation completion interrupt status flag
 579:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_BUSY: Busy flag
 580:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DMAS: DMAS Status flag
 581:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINNE: Data Input register (DIN) not empty status flag
 582:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_FLAG (SET or RESET)
 583:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 584:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** FlagStatus HASH_GetFlagStatus(uint16_t HASH_FLAG)
 585:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 25295              		.loc 1 585 0
 25296              		.cfi_startproc
 25297              		@ args = 0, pretend = 0, frame = 16
 25298              		@ frame_needed = 1, uses_anonymous_args = 0
 25299              		@ link register save eliminated.
 25300 0000 80B4     		push	{r7}
 25301              	.LCFI35:
 25302              		.cfi_def_cfa_offset 4
 25303 0002 85B0     		sub	sp, sp, #20
 25304              	.LCFI36:
 25305              		.cfi_def_cfa_offset 24
 25306 0004 00AF     		add	r7, sp, #0
 25307              		.cfi_offset 7, -4
 25308              	.LCFI37:
 25309              		.cfi_def_cfa_register 7
 25310 0006 0346     		mov	r3, r0
 25311 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 586:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   FlagStatus bitstatus = RESET;
 25312              		.loc 1 586 0
 25313 000a 4FF00003 		mov	r3, #0
 25314 000e FB73     		strb	r3, [r7, #15]
 587:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint32_t tempreg = 0;
 25315              		.loc 1 587 0
 25316 0010 4FF00003 		mov	r3, #0
 25317 0014 BB60     		str	r3, [r7, #8]
 588:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 589:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 590:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_FLAG(HASH_FLAG));
 591:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 592:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* check if the FLAG is in CR register */
 593:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if ((HASH_FLAG & HASH_FLAG_DINNE) != (uint16_t)RESET ) 
 25318              		.loc 1 593 0
 25319 0016 FB88     		ldrh	r3, [r7, #6]
 25320 0018 03F48053 		and	r3, r3, #4096
 25321 001c 002B     		cmp	r3, #0
 25322 001e 03D0     		beq	.L46
 594:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 595:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     tempreg = HASH->CR;
 25323              		.loc 1 595 0
 25324 0020 0D4B     		ldr	r3, .L50
 25325 0022 1B68     		ldr	r3, [r3, #0]
 25326 0024 BB60     		str	r3, [r7, #8]
 25327 0026 02E0     		b	.L47
 25328              	.L46:
 596:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 597:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else /* The FLAG is in SR register */
 598:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 599:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     tempreg = HASH->SR;
 25329              		.loc 1 599 0
 25330 0028 0B4B     		ldr	r3, .L50
 25331 002a 5B6A     		ldr	r3, [r3, #36]
 25332 002c BB60     		str	r3, [r7, #8]
 25333              	.L47:
 600:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 601:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 602:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH flag */
 603:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if ((tempreg & HASH_FLAG) != (uint16_t)RESET)
 25334              		.loc 1 603 0
 25335 002e FA88     		ldrh	r2, [r7, #6]
 25336 0030 BB68     		ldr	r3, [r7, #8]
 25337 0032 02EA0303 		and	r3, r2, r3
 25338 0036 002B     		cmp	r3, #0
 25339 0038 03D0     		beq	.L48
 604:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 605:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH is set */
 606:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = SET;
 25340              		.loc 1 606 0
 25341 003a 4FF00103 		mov	r3, #1
 25342 003e FB73     		strb	r3, [r7, #15]
 25343 0040 02E0     		b	.L49
 25344              	.L48:
 607:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 608:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 609:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 610:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_FLAG is reset */
 611:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 25345              		.loc 1 611 0
 25346 0042 4FF00003 		mov	r3, #0
 25347 0046 FB73     		strb	r3, [r7, #15]
 25348              	.L49:
 612:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 613:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 614:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the HASH_FLAG status */
 615:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return  bitstatus;
 25349              		.loc 1 615 0
 25350 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 616:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 25351              		.loc 1 616 0
 25352 004a 1846     		mov	r0, r3
 25353 004c 07F11407 		add	r7, r7, #20
 25354 0050 BD46     		mov	sp, r7
 25355 0052 80BC     		pop	{r7}
 25356 0054 7047     		bx	lr
 25357              	.L51:
 25358 0056 00BF     		.align	2
 25359              	.L50:
 25360 0058 00040650 		.word	1342571520
 25361              		.cfi_endproc
 25362              	.LFE123:
 25364              		.section	.text.HASH_ClearFlag,"ax",%progbits
 25365              		.align	2
 25366              		.global	HASH_ClearFlag
 25367              		.thumb
 25368              		.thumb_func
 25370              	HASH_ClearFlag:
 25371              	.LFB124:
 617:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 618:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH flags.
 619:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the flag to clear. 
 620:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 621:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data Input Flag
 622:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest Calculation Completion Flag                       
 623:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 624:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 625:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ClearFlag(uint16_t HASH_FLAG)
 626:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 25372              		.loc 1 626 0
 25373              		.cfi_startproc
 25374              		@ args = 0, pretend = 0, frame = 8
 25375              		@ frame_needed = 1, uses_anonymous_args = 0
 25376              		@ link register save eliminated.
 25377 0000 80B4     		push	{r7}
 25378              	.LCFI38:
 25379              		.cfi_def_cfa_offset 4
 25380 0002 83B0     		sub	sp, sp, #12
 25381              	.LCFI39:
 25382              		.cfi_def_cfa_offset 16
 25383 0004 00AF     		add	r7, sp, #0
 25384              		.cfi_offset 7, -4
 25385              	.LCFI40:
 25386              		.cfi_def_cfa_register 7
 25387 0006 0346     		mov	r3, r0
 25388 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 627:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 628:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_CLEAR_FLAG(HASH_FLAG));
 629:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 630:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Clear the selected HASH flags */
 631:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->SR = ~(uint32_t)HASH_FLAG;
 25389              		.loc 1 631 0
 25390 000a 054B     		ldr	r3, .L53
 25391 000c FA88     		ldrh	r2, [r7, #6]
 25392 000e 6FEA0202 		mvn	r2, r2
 25393 0012 5A62     		str	r2, [r3, #36]
 632:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 25394              		.loc 1 632 0
 25395 0014 07F10C07 		add	r7, r7, #12
 25396 0018 BD46     		mov	sp, r7
 25397 001a 80BC     		pop	{r7}
 25398 001c 7047     		bx	lr
 25399              	.L54:
 25400 001e 00BF     		.align	2
 25401              	.L53:
 25402 0020 00040650 		.word	1342571520
 25403              		.cfi_endproc
 25404              	.LFE124:
 25406              		.section	.text.HASH_GetITStatus,"ax",%progbits
 25407              		.align	2
 25408              		.global	HASH_GetITStatus
 25409              		.thumb
 25410              		.thumb_func
 25412              	HASH_GetITStatus:
 25413              	.LFB125:
 633:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 634:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH interrupt has occurred or not.
 635:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to check.
 636:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 637:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 638:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 639:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_IT (SET or RESET).
 640:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 641:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** ITStatus HASH_GetITStatus(uint8_t HASH_IT)
 642:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 25414              		.loc 1 642 0
 25415              		.cfi_startproc
 25416              		@ args = 0, pretend = 0, frame = 16
 25417              		@ frame_needed = 1, uses_anonymous_args = 0
 25418              		@ link register save eliminated.
 25419 0000 80B4     		push	{r7}
 25420              	.LCFI41:
 25421              		.cfi_def_cfa_offset 4
 25422 0002 85B0     		sub	sp, sp, #20
 25423              	.LCFI42:
 25424              		.cfi_def_cfa_offset 24
 25425 0004 00AF     		add	r7, sp, #0
 25426              		.cfi_offset 7, -4
 25427              	.LCFI43:
 25428              		.cfi_def_cfa_register 7
 25429 0006 0346     		mov	r3, r0
 25430 0008 FB71     		strb	r3, [r7, #7]
 643:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ITStatus bitstatus = RESET;
 25431              		.loc 1 643 0
 25432 000a 4FF00003 		mov	r3, #0
 25433 000e FB73     		strb	r3, [r7, #15]
 644:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint32_t tmpreg = 0;
 25434              		.loc 1 644 0
 25435 0010 4FF00003 		mov	r3, #0
 25436 0014 BB60     		str	r3, [r7, #8]
 645:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 646:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 647:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_IT(HASH_IT));  
 648:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 649:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 650:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH interrupt */
 651:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   tmpreg =  HASH->SR;
 25437              		.loc 1 651 0
 25438 0016 0D4B     		ldr	r3, .L58
 25439 0018 5B6A     		ldr	r3, [r3, #36]
 25440 001a BB60     		str	r3, [r7, #8]
 652:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 653:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (((HASH->IMR & tmpreg) & HASH_IT) != RESET)
 25441              		.loc 1 653 0
 25442 001c 0B4B     		ldr	r3, .L58
 25443 001e 1A6A     		ldr	r2, [r3, #32]
 25444 0020 BB68     		ldr	r3, [r7, #8]
 25445 0022 1A40     		ands	r2, r2, r3
 25446 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 25447 0026 02EA0303 		and	r3, r2, r3
 25448 002a 002B     		cmp	r3, #0
 25449 002c 03D0     		beq	.L56
 654:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 655:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_IT is set */
 656:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = SET;
 25450              		.loc 1 656 0
 25451 002e 4FF00103 		mov	r3, #1
 25452 0032 FB73     		strb	r3, [r7, #15]
 25453 0034 02E0     		b	.L57
 25454              	.L56:
 657:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 658:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 659:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 660:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_IT is reset */
 661:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 25455              		.loc 1 661 0
 25456 0036 4FF00003 		mov	r3, #0
 25457 003a FB73     		strb	r3, [r7, #15]
 25458              	.L57:
 662:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 663:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the HASH_IT status */
 664:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return bitstatus;
 25459              		.loc 1 664 0
 25460 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 665:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 25461              		.loc 1 665 0
 25462 003e 1846     		mov	r0, r3
 25463 0040 07F11407 		add	r7, r7, #20
 25464 0044 BD46     		mov	sp, r7
 25465 0046 80BC     		pop	{r7}
 25466 0048 7047     		bx	lr
 25467              	.L59:
 25468 004a 00BF     		.align	2
 25469              	.L58:
 25470 004c 00040650 		.word	1342571520
 25471              		.cfi_endproc
 25472              	.LFE125:
 25474              		.section	.text.HASH_ClearITPendingBit,"ax",%progbits
 25475              		.align	2
 25476              		.global	HASH_ClearITPendingBit
 25477              		.thumb
 25478              		.thumb_func
 25480              	HASH_ClearITPendingBit:
 25481              	.LFB126:
 666:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 667:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 668:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH interrupt pending bit(s).
 669:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt pending bit(s) to clear.
 670:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 671:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 672:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 673:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 674:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 675:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ClearITPendingBit(uint8_t HASH_IT)
 676:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 25482              		.loc 1 676 0
 25483              		.cfi_startproc
 25484              		@ args = 0, pretend = 0, frame = 8
 25485              		@ frame_needed = 1, uses_anonymous_args = 0
 25486              		@ link register save eliminated.
 25487 0000 80B4     		push	{r7}
 25488              	.LCFI44:
 25489              		.cfi_def_cfa_offset 4
 25490 0002 83B0     		sub	sp, sp, #12
 25491              	.LCFI45:
 25492              		.cfi_def_cfa_offset 16
 25493 0004 00AF     		add	r7, sp, #0
 25494              		.cfi_offset 7, -4
 25495              	.LCFI46:
 25496              		.cfi_def_cfa_register 7
 25497 0006 0346     		mov	r3, r0
 25498 0008 FB71     		strb	r3, [r7, #7]
 677:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 678:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 679:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 680:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Clear the selected HASH interrupt pending bit */
 681:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->SR = (uint8_t)~HASH_IT;
 25499              		.loc 1 681 0
 25500 000a 054B     		ldr	r3, .L61
 25501 000c FA79     		ldrb	r2, [r7, #7]
 25502 000e 6FEA0202 		mvn	r2, r2
 25503 0012 D2B2     		uxtb	r2, r2
 25504 0014 5A62     		str	r2, [r3, #36]
 682:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 25505              		.loc 1 682 0
 25506 0016 07F10C07 		add	r7, r7, #12
 25507 001a BD46     		mov	sp, r7
 25508 001c 80BC     		pop	{r7}
 25509 001e 7047     		bx	lr
 25510              	.L62:
 25511              		.align	2
 25512              	.L61:
 25513 0020 00040650 		.word	1342571520
 25514              		.cfi_endproc
 25515              	.LFE126:
 25517              		.text
 25518              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash.c
     /tmp/ccA5ZJ9b.s:24575  .text.HASH_DeInit:00000000 $t
     /tmp/ccA5ZJ9b.s:24580  .text.HASH_DeInit:00000000 HASH_DeInit
     /tmp/ccA5ZJ9b.s:24608  .text.HASH_Init:00000000 $t
     /tmp/ccA5ZJ9b.s:24613  .text.HASH_Init:00000000 HASH_Init
     /tmp/ccA5ZJ9b.s:24690  .text.HASH_Init:0000006c $d
     /tmp/ccA5ZJ9b.s:24695  .text.HASH_StructInit:00000000 $t
     /tmp/ccA5ZJ9b.s:24700  .text.HASH_StructInit:00000000 HASH_StructInit
     /tmp/ccA5ZJ9b.s:24743  .text.HASH_Reset:00000000 $t
     /tmp/ccA5ZJ9b.s:24748  .text.HASH_Reset:00000000 HASH_Reset
     /tmp/ccA5ZJ9b.s:24775  .text.HASH_Reset:00000018 $d
     /tmp/ccA5ZJ9b.s:24780  .text.HASH_SetLastWordValidBitsNbr:00000000 $t
     /tmp/ccA5ZJ9b.s:24785  .text.HASH_SetLastWordValidBitsNbr:00000000 HASH_SetLastWordValidBitsNbr
     /tmp/ccA5ZJ9b.s:24825  .text.HASH_SetLastWordValidBitsNbr:00000030 $d
     /tmp/ccA5ZJ9b.s:24830  .text.HASH_DataIn:00000000 $t
     /tmp/ccA5ZJ9b.s:24835  .text.HASH_DataIn:00000000 HASH_DataIn
     /tmp/ccA5ZJ9b.s:24865  .text.HASH_DataIn:00000018 $d
     /tmp/ccA5ZJ9b.s:24870  .text.HASH_GetInFIFOWordsNbr:00000000 $t
     /tmp/ccA5ZJ9b.s:24875  .text.HASH_GetInFIFOWordsNbr:00000000 HASH_GetInFIFOWordsNbr
     /tmp/ccA5ZJ9b.s:24903  .text.HASH_GetInFIFOWordsNbr:0000001c $d
     /tmp/ccA5ZJ9b.s:24908  .text.HASH_GetDigest:00000000 $t
     /tmp/ccA5ZJ9b.s:24913  .text.HASH_GetDigest:00000000 HASH_GetDigest
     /tmp/ccA5ZJ9b.s:24964  .text.HASH_GetDigest:0000003c $d
     /tmp/ccA5ZJ9b.s:24969  .text.HASH_StartDigest:00000000 $t
     /tmp/ccA5ZJ9b.s:24974  .text.HASH_StartDigest:00000000 HASH_StartDigest
     /tmp/ccA5ZJ9b.s:25001  .text.HASH_StartDigest:00000018 $d
     /tmp/ccA5ZJ9b.s:25006  .text.HASH_SaveContext:00000000 $t
     /tmp/ccA5ZJ9b.s:25011  .text.HASH_SaveContext:00000000 HASH_SaveContext
     /tmp/ccA5ZJ9b.s:25080  .text.HASH_SaveContext:00000064 $d
     /tmp/ccA5ZJ9b.s:25085  .text.HASH_RestoreContext:00000000 $t
     /tmp/ccA5ZJ9b.s:25090  .text.HASH_RestoreContext:00000000 HASH_RestoreContext
     /tmp/ccA5ZJ9b.s:25165  .text.HASH_RestoreContext:00000070 $d
     /tmp/ccA5ZJ9b.s:25170  .text.HASH_DMACmd:00000000 $t
     /tmp/ccA5ZJ9b.s:25175  .text.HASH_DMACmd:00000000 HASH_DMACmd
     /tmp/ccA5ZJ9b.s:25221  .text.HASH_DMACmd:00000034 $d
     /tmp/ccA5ZJ9b.s:25226  .text.HASH_ITConfig:00000000 $t
     /tmp/ccA5ZJ9b.s:25231  .text.HASH_ITConfig:00000000 HASH_ITConfig
     /tmp/ccA5ZJ9b.s:25283  .text.HASH_ITConfig:00000044 $d
     /tmp/ccA5ZJ9b.s:25288  .text.HASH_GetFlagStatus:00000000 $t
     /tmp/ccA5ZJ9b.s:25293  .text.HASH_GetFlagStatus:00000000 HASH_GetFlagStatus
     /tmp/ccA5ZJ9b.s:25360  .text.HASH_GetFlagStatus:00000058 $d
     /tmp/ccA5ZJ9b.s:25365  .text.HASH_ClearFlag:00000000 $t
     /tmp/ccA5ZJ9b.s:25370  .text.HASH_ClearFlag:00000000 HASH_ClearFlag
     /tmp/ccA5ZJ9b.s:25402  .text.HASH_ClearFlag:00000020 $d
     /tmp/ccA5ZJ9b.s:25407  .text.HASH_GetITStatus:00000000 $t
     /tmp/ccA5ZJ9b.s:25412  .text.HASH_GetITStatus:00000000 HASH_GetITStatus
     /tmp/ccA5ZJ9b.s:25470  .text.HASH_GetITStatus:0000004c $d
     /tmp/ccA5ZJ9b.s:25475  .text.HASH_ClearITPendingBit:00000000 $t
     /tmp/ccA5ZJ9b.s:25480  .text.HASH_ClearITPendingBit:00000000 HASH_ClearITPendingBit
     /tmp/ccA5ZJ9b.s:25513  .text.HASH_ClearITPendingBit:00000020 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
