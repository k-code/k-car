   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_wwdg.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c"
 24597              		.align	2
 24598              		.global	WWDG_DeInit
 24599              		.thumb
 24600              		.thumb_func
 24602              	WWDG_DeInit:
 24603              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @file    stm32f4xx_wwdg.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          functionalities of the Window watchdog (WWDG) peripheral:           
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Prescaler, Refresh window and Counter configuration
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - WWDG activation
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *           - Interrupts and flags management
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @verbatim
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *    
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                     WWDG features
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                        
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG generates a system reset on expiry of a programmed
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          time period, unless the program refreshes the counter (downcounter) 
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before to reach 0x3F value (i.e. a reset is generated when the counter
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          value rolls over from 0x40 to 0x3F). 
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          An MCU reset is also generated if the counter value is refreshed
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          before the counter has reached the refresh window value. This 
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          implies that the counter must be refreshed in a limited window.
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Once enabled the WWDG cannot be disabled except by a system reset.                    
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDGRST flag in RCC_CSR register can be used to inform when a WWDG
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          reset occurs.
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          The WWDG counter input clock is derived from the APB clock divided 
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          by a programmable prescaler.
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *              
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG counter clock = PCLK1 / Prescaler
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          WWDG timeout = (WWDG counter clock) * (counter value)
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                      
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          Min-max timeout value @42 MHz(PCLK1): ~97.5 us / ~49.9 ms
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                            
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          ===================================================================
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                                 How to use this driver
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          =================================================================== 
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          1. Enable WWDG clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_WWDG, ENABLE) functio
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          2. Configure the WWDG prescaler using WWDG_SetPrescaler() function
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                           
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          3. Configure the WWDG refresh window using WWDG_SetWindowValue() function
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          4. Set the WWDG counter value and start it using WWDG_Enable() function.
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             When the WWDG is enabled the counter value should be configured to 
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             a value greater than 0x40 to prevent generating an immediate reset.     
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *            
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          5. Optionally you can enable the Early wakeup interrupt which is 
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             generated when the counter reach 0x40.
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             Once enabled this interrupt cannot be disabled except by a system reset.
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                 
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *          6. Then the application program must refresh the WWDG counter at regular
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             WWDG_SetCounter() function. This operation must occur only when
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             the counter value is lower than the refresh window value, 
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *             programmed using WWDG_SetWindowValue().         
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *  @endverbatim  
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *                             
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @attention
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   ******************************************************************************
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Includes ------------------------------------------------------------------*/
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_wwdg.h"
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #include "stm32f4xx_rcc.h"
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG 
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief WWDG driver modules
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private typedef -----------------------------------------------------------*/
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private define ------------------------------------------------------------*/
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* ----------- WWDG registers bit address in the alias region ----------- */
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define WWDG_OFFSET       (WWDG_BASE - PERIPH_BASE)
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Alias word address of EWI bit */
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_OFFSET        (WWDG_OFFSET + 0x04)
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define EWI_BitNumber     0x09
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_EWI_BB        (PERIPH_BB_BASE + (CFR_OFFSET * 32) + (EWI_BitNumber * 4))
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* --------------------- WWDG registers bit mask ------------------------ */
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* CFR register bit mask */
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_WDGTB_MASK    ((uint32_t)0xFFFFFE7F)
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define CFR_W_MASK        ((uint32_t)0xFFFFFF80)
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** #define BIT_MASK          ((uint8_t)0x7F)
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private macro -------------------------------------------------------------*/
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private variables ---------------------------------------------------------*/
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private function prototypes -----------------------------------------------*/
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /* Private functions ---------------------------------------------------------*/
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Private_Functions
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group1 Prescaler, Refresh window and Counter configuration functions
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Prescaler, Refresh window and Counter configuration functions 
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****           Prescaler, Refresh window and Counter configuration functions
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Deinitializes the WWDG peripheral registers to their default reset values.
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_DeInit(void)
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 24604              		.loc 1 135 0
 24605              		.cfi_startproc
 24606              		@ args = 0, pretend = 0, frame = 0
 24607              		@ frame_needed = 1, uses_anonymous_args = 0
 24608 0000 80B5     		push	{r7, lr}
 24609              	.LCFI0:
 24610              		.cfi_def_cfa_offset 8
 24611 0002 00AF     		add	r7, sp, #0
 24612              		.cfi_offset 14, -4
 24613              		.cfi_offset 7, -8
 24614              	.LCFI1:
 24615              		.cfi_def_cfa_register 7
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, ENABLE);
 24616              		.loc 1 136 0
 24617 0004 4FF40060 		mov	r0, #2048
 24618 0008 4FF00101 		mov	r1, #1
 24619 000c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_WWDG, DISABLE);
 24620              		.loc 1 137 0
 24621 0010 4FF40060 		mov	r0, #2048
 24622 0014 4FF00001 		mov	r1, #0
 24623 0018 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 24624              		.loc 1 138 0
 24625 001c 80BD     		pop	{r7, pc}
 24626              		.cfi_endproc
 24627              	.LFE110:
 24629 001e 00BF     		.section	.text.WWDG_SetPrescaler,"ax",%progbits
 24630              		.align	2
 24631              		.global	WWDG_SetPrescaler
 24632              		.thumb
 24633              		.thumb_func
 24635              	WWDG_SetPrescaler:
 24636              	.LFB111:
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG Prescaler.
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WWDG_Prescaler: specifies the WWDG Prescaler.
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter can be one of the following values:
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_1: WWDG counter clock = (PCLK1/4096)/1
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_2: WWDG counter clock = (PCLK1/4096)/2
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_4: WWDG counter clock = (PCLK1/4096)/4
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *     @arg WWDG_Prescaler_8: WWDG counter clock = (PCLK1/4096)/8
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetPrescaler(uint32_t WWDG_Prescaler)
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 24637              		.loc 1 151 0
 24638              		.cfi_startproc
 24639              		@ args = 0, pretend = 0, frame = 16
 24640              		@ frame_needed = 1, uses_anonymous_args = 0
 24641              		@ link register save eliminated.
 24642 0000 80B4     		push	{r7}
 24643              	.LCFI2:
 24644              		.cfi_def_cfa_offset 4
 24645 0002 85B0     		sub	sp, sp, #20
 24646              	.LCFI3:
 24647              		.cfi_def_cfa_offset 24
 24648 0004 00AF     		add	r7, sp, #0
 24649              		.cfi_offset 7, -4
 24650              	.LCFI4:
 24651              		.cfi_def_cfa_register 7
 24652 0006 7860     		str	r0, [r7, #4]
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   uint32_t tmpreg = 0;
 24653              		.loc 1 152 0
 24654 0008 4FF00003 		mov	r3, #0
 24655 000c FB60     		str	r3, [r7, #12]
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_PRESCALER(WWDG_Prescaler));
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear WDGTB[1:0] bits */
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_WDGTB_MASK;
 24656              		.loc 1 156 0
 24657 000e 094B     		ldr	r3, .L3
 24658 0010 5B68     		ldr	r3, [r3, #4]
 24659 0012 23F4C073 		bic	r3, r3, #384
 24660 0016 FB60     		str	r3, [r7, #12]
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set WDGTB[1:0] bits according to WWDG_Prescaler value */
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WWDG_Prescaler;
 24661              		.loc 1 158 0
 24662 0018 FA68     		ldr	r2, [r7, #12]
 24663 001a 7B68     		ldr	r3, [r7, #4]
 24664 001c 42EA0303 		orr	r3, r2, r3
 24665 0020 FB60     		str	r3, [r7, #12]
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
 24666              		.loc 1 160 0
 24667 0022 044B     		ldr	r3, .L3
 24668 0024 FA68     		ldr	r2, [r7, #12]
 24669 0026 5A60     		str	r2, [r3, #4]
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 24670              		.loc 1 161 0
 24671 0028 07F11407 		add	r7, r7, #20
 24672 002c BD46     		mov	sp, r7
 24673 002e 80BC     		pop	{r7}
 24674 0030 7047     		bx	lr
 24675              	.L4:
 24676 0032 00BF     		.align	2
 24677              	.L3:
 24678 0034 002C0040 		.word	1073753088
 24679              		.cfi_endproc
 24680              	.LFE111:
 24682              		.section	.text.WWDG_SetWindowValue,"ax",%progbits
 24683              		.align	2
 24684              		.global	WWDG_SetWindowValue
 24685              		.thumb
 24686              		.thumb_func
 24688              	WWDG_SetWindowValue:
 24689              	.LFB112:
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG window value.
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  WindowValue: specifies the window value to be compared to the downcounter.
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter value must be lower than 0x80.
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetWindowValue(uint8_t WindowValue)
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 24690              		.loc 1 170 0
 24691              		.cfi_startproc
 24692              		@ args = 0, pretend = 0, frame = 16
 24693              		@ frame_needed = 1, uses_anonymous_args = 0
 24694              		@ link register save eliminated.
 24695 0000 80B4     		push	{r7}
 24696              	.LCFI5:
 24697              		.cfi_def_cfa_offset 4
 24698 0002 85B0     		sub	sp, sp, #20
 24699              	.LCFI6:
 24700              		.cfi_def_cfa_offset 24
 24701 0004 00AF     		add	r7, sp, #0
 24702              		.cfi_offset 7, -4
 24703              	.LCFI7:
 24704              		.cfi_def_cfa_register 7
 24705 0006 0346     		mov	r3, r0
 24706 0008 FB71     		strb	r3, [r7, #7]
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   __IO uint32_t tmpreg = 0;
 24707              		.loc 1 171 0
 24708 000a 4FF00003 		mov	r3, #0
 24709 000e FB60     		str	r3, [r7, #12]
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_WINDOW_VALUE(WindowValue));
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Clear W[6:0] bits */
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg = WWDG->CFR & CFR_W_MASK;
 24710              		.loc 1 177 0
 24711 0010 094B     		ldr	r3, .L6
 24712 0012 5B68     		ldr	r3, [r3, #4]
 24713 0014 23F07F03 		bic	r3, r3, #127
 24714 0018 FB60     		str	r3, [r7, #12]
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Set W[6:0] bits according to WindowValue value */
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   tmpreg |= WindowValue & (uint32_t) BIT_MASK;
 24715              		.loc 1 180 0
 24716 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 24717 001c 03F07F02 		and	r2, r3, #127
 24718 0020 FB68     		ldr	r3, [r7, #12]
 24719 0022 42EA0303 		orr	r3, r2, r3
 24720 0026 FB60     		str	r3, [r7, #12]
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Store the new value */
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CFR = tmpreg;
 24721              		.loc 1 183 0
 24722 0028 034B     		ldr	r3, .L6
 24723 002a FA68     		ldr	r2, [r7, #12]
 24724 002c 5A60     		str	r2, [r3, #4]
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 24725              		.loc 1 184 0
 24726 002e 07F11407 		add	r7, r7, #20
 24727 0032 BD46     		mov	sp, r7
 24728 0034 80BC     		pop	{r7}
 24729 0036 7047     		bx	lr
 24730              	.L7:
 24731              		.align	2
 24732              	.L6:
 24733 0038 002C0040 		.word	1073753088
 24734              		.cfi_endproc
 24735              	.LFE112:
 24737              		.section	.text.WWDG_EnableIT,"ax",%progbits
 24738              		.align	2
 24739              		.global	WWDG_EnableIT
 24740              		.thumb
 24741              		.thumb_func
 24743              	WWDG_EnableIT:
 24744              	.LFB113:
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables the WWDG Early Wakeup interrupt(EWI).
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @note   Once enabled this interrupt cannot be disabled except by a system reset.
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_EnableIT(void)
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 24745              		.loc 1 193 0
 24746              		.cfi_startproc
 24747              		@ args = 0, pretend = 0, frame = 0
 24748              		@ frame_needed = 1, uses_anonymous_args = 0
 24749              		@ link register save eliminated.
 24750 0000 80B4     		push	{r7}
 24751              	.LCFI8:
 24752              		.cfi_def_cfa_offset 4
 24753 0002 00AF     		add	r7, sp, #0
 24754              		.cfi_offset 7, -4
 24755              	.LCFI9:
 24756              		.cfi_def_cfa_register 7
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *(__IO uint32_t *) CFR_EWI_BB = (uint32_t)ENABLE;
 24757              		.loc 1 194 0
 24758 0004 034B     		ldr	r3, .L9
 24759 0006 4FF00102 		mov	r2, #1
 24760 000a 1A60     		str	r2, [r3, #0]
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 24761              		.loc 1 195 0
 24762 000c BD46     		mov	sp, r7
 24763 000e 80BC     		pop	{r7}
 24764 0010 7047     		bx	lr
 24765              	.L10:
 24766 0012 00BF     		.align	2
 24767              	.L9:
 24768 0014 A4800542 		.word	1107656868
 24769              		.cfi_endproc
 24770              	.LFE113:
 24772              		.section	.text.WWDG_SetCounter,"ax",%progbits
 24773              		.align	2
 24774              		.global	WWDG_SetCounter
 24775              		.thumb
 24776              		.thumb_func
 24778              	WWDG_SetCounter:
 24779              	.LFB114:
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Sets the WWDG counter value.
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset) 
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_SetCounter(uint8_t Counter)
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 24780              		.loc 1 205 0
 24781              		.cfi_startproc
 24782              		@ args = 0, pretend = 0, frame = 8
 24783              		@ frame_needed = 1, uses_anonymous_args = 0
 24784              		@ link register save eliminated.
 24785 0000 80B4     		push	{r7}
 24786              	.LCFI10:
 24787              		.cfi_def_cfa_offset 4
 24788 0002 83B0     		sub	sp, sp, #12
 24789              	.LCFI11:
 24790              		.cfi_def_cfa_offset 16
 24791 0004 00AF     		add	r7, sp, #0
 24792              		.cfi_offset 7, -4
 24793              	.LCFI12:
 24794              		.cfi_def_cfa_register 7
 24795 0006 0346     		mov	r3, r0
 24796 0008 FB71     		strb	r3, [r7, #7]
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Write to T[6:0] bits to configure the counter value, no need to do
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****      a read-modify-write; writing a 0 to WDGA bit does nothing */
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = Counter & BIT_MASK;
 24797              		.loc 1 210 0
 24798 000a 054B     		ldr	r3, .L12
 24799 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24800 000e 02F07F02 		and	r2, r2, #127
 24801 0012 1A60     		str	r2, [r3, #0]
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 24802              		.loc 1 211 0
 24803 0014 07F10C07 		add	r7, r7, #12
 24804 0018 BD46     		mov	sp, r7
 24805 001a 80BC     		pop	{r7}
 24806 001c 7047     		bx	lr
 24807              	.L13:
 24808 001e 00BF     		.align	2
 24809              	.L12:
 24810 0020 002C0040 		.word	1073753088
 24811              		.cfi_endproc
 24812              	.LFE114:
 24814              		.section	.text.WWDG_Enable,"ax",%progbits
 24815              		.align	2
 24816              		.global	WWDG_Enable
 24817              		.thumb
 24818              		.thumb_func
 24820              	WWDG_Enable:
 24821              	.LFB115:
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group2 WWDG activation functions
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   WWDG activation functions 
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                        WWDG activation function
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Enables WWDG and load the counter value.                  
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  Counter: specifies the watchdog counter value.
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   This parameter must be a number between 0x40 and 0x7F (to prevent generating
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   *   an immediate reset)
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_Enable(uint8_t Counter)
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 24822              		.loc 1 236 0
 24823              		.cfi_startproc
 24824              		@ args = 0, pretend = 0, frame = 8
 24825              		@ frame_needed = 1, uses_anonymous_args = 0
 24826              		@ link register save eliminated.
 24827 0000 80B4     		push	{r7}
 24828              	.LCFI13:
 24829              		.cfi_def_cfa_offset 4
 24830 0002 83B0     		sub	sp, sp, #12
 24831              	.LCFI14:
 24832              		.cfi_def_cfa_offset 16
 24833 0004 00AF     		add	r7, sp, #0
 24834              		.cfi_offset 7, -4
 24835              	.LCFI15:
 24836              		.cfi_def_cfa_register 7
 24837 0006 0346     		mov	r3, r0
 24838 0008 FB71     		strb	r3, [r7, #7]
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   /* Check the parameters */
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   assert_param(IS_WWDG_COUNTER(Counter));
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->CR = WWDG_CR_WDGA | Counter;
 24839              		.loc 1 239 0
 24840 000a 054B     		ldr	r3, .L15
 24841 000c FA79     		ldrb	r2, [r7, #7]
 24842 000e 62F07F02 		orn	r2, r2, #127
 24843 0012 D2B2     		uxtb	r2, r2
 24844 0014 1A60     		str	r2, [r3, #0]
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 24845              		.loc 1 240 0
 24846 0016 07F10C07 		add	r7, r7, #12
 24847 001a BD46     		mov	sp, r7
 24848 001c 80BC     		pop	{r7}
 24849 001e 7047     		bx	lr
 24850              	.L16:
 24851              		.align	2
 24852              	.L15:
 24853 0020 002C0040 		.word	1073753088
 24854              		.cfi_endproc
 24855              	.LFE115:
 24857              		.section	.text.WWDG_GetFlagStatus,"ax",%progbits
 24858              		.align	2
 24859              		.global	WWDG_GetFlagStatus
 24860              		.thumb
 24861              		.thumb_func
 24863              	WWDG_GetFlagStatus:
 24864              	.LFB116:
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @}
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /** @defgroup WWDG_Group3 Interrupts and flags management functions
 246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *  @brief   Interrupts and flags management functions 
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  *
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @verbatim   
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================
 250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****                  Interrupts and flags management functions
 251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****  ===============================================================================  
 252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** @endverbatim
 254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @{
 255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Checks whether the Early Wakeup interrupt flag is set or not.
 259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval The new state of the Early Wakeup interrupt flag (SET or RESET)
 261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** FlagStatus WWDG_GetFlagStatus(void)
 263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 24865              		.loc 1 263 0
 24866              		.cfi_startproc
 24867              		@ args = 0, pretend = 0, frame = 8
 24868              		@ frame_needed = 1, uses_anonymous_args = 0
 24869              		@ link register save eliminated.
 24870 0000 80B4     		push	{r7}
 24871              	.LCFI16:
 24872              		.cfi_def_cfa_offset 4
 24873 0002 83B0     		sub	sp, sp, #12
 24874              	.LCFI17:
 24875              		.cfi_def_cfa_offset 16
 24876 0004 00AF     		add	r7, sp, #0
 24877              		.cfi_offset 7, -4
 24878              	.LCFI18:
 24879              		.cfi_def_cfa_register 7
 264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   FlagStatus bitstatus = RESET;
 24880              		.loc 1 264 0
 24881 0006 4FF00003 		mov	r3, #0
 24882 000a FB71     		strb	r3, [r7, #7]
 265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     
 266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   if ((WWDG->SR) != (uint32_t)RESET)
 24883              		.loc 1 266 0
 24884 000c 084B     		ldr	r3, .L20
 24885 000e 9B68     		ldr	r3, [r3, #8]
 24886 0010 002B     		cmp	r3, #0
 24887 0012 03D0     		beq	.L18
 267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = SET;
 24888              		.loc 1 268 0
 24889 0014 4FF00103 		mov	r3, #1
 24890 0018 FB71     		strb	r3, [r7, #7]
 24891 001a 02E0     		b	.L19
 24892              	.L18:
 269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   else
 271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   {
 272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****     bitstatus = RESET;
 24893              		.loc 1 272 0
 24894 001c 4FF00003 		mov	r3, #0
 24895 0020 FB71     		strb	r3, [r7, #7]
 24896              	.L19:
 273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   }
 274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   return bitstatus;
 24897              		.loc 1 274 0
 24898 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 24899              		.loc 1 275 0
 24900 0024 1846     		mov	r0, r3
 24901 0026 07F10C07 		add	r7, r7, #12
 24902 002a BD46     		mov	sp, r7
 24903 002c 80BC     		pop	{r7}
 24904 002e 7047     		bx	lr
 24905              	.L21:
 24906              		.align	2
 24907              	.L20:
 24908 0030 002C0040 		.word	1073753088
 24909              		.cfi_endproc
 24910              	.LFE116:
 24912              		.section	.text.WWDG_ClearFlag,"ax",%progbits
 24913              		.align	2
 24914              		.global	WWDG_ClearFlag
 24915              		.thumb
 24916              		.thumb_func
 24918              	WWDG_ClearFlag:
 24919              	.LFB117:
 276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** 
 277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** /**
 278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @brief  Clears Early Wakeup interrupt flag.
 279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @param  None
 280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   * @retval None
 281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   */
 282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** void WWDG_ClearFlag(void)
 283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** {
 24920              		.loc 1 283 0
 24921              		.cfi_startproc
 24922              		@ args = 0, pretend = 0, frame = 0
 24923              		@ frame_needed = 1, uses_anonymous_args = 0
 24924              		@ link register save eliminated.
 24925 0000 80B4     		push	{r7}
 24926              	.LCFI19:
 24927              		.cfi_def_cfa_offset 4
 24928 0002 00AF     		add	r7, sp, #0
 24929              		.cfi_offset 7, -4
 24930              	.LCFI20:
 24931              		.cfi_def_cfa_register 7
 284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c ****   WWDG->SR = (uint32_t)RESET;
 24932              		.loc 1 284 0
 24933 0004 034B     		ldr	r3, .L23
 24934 0006 4FF00002 		mov	r2, #0
 24935 000a 9A60     		str	r2, [r3, #8]
 285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_wwdg.c **** }
 24936              		.loc 1 285 0
 24937 000c BD46     		mov	sp, r7
 24938 000e 80BC     		pop	{r7}
 24939 0010 7047     		bx	lr
 24940              	.L24:
 24941 0012 00BF     		.align	2
 24942              	.L23:
 24943 0014 002C0040 		.word	1073753088
 24944              		.cfi_endproc
 24945              	.LFE117:
 24947              		.text
 24948              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_wwdg.c
     /tmp/ccEMe7RA.s:24597  .text.WWDG_DeInit:00000000 $t
     /tmp/ccEMe7RA.s:24602  .text.WWDG_DeInit:00000000 WWDG_DeInit
     /tmp/ccEMe7RA.s:24630  .text.WWDG_SetPrescaler:00000000 $t
     /tmp/ccEMe7RA.s:24635  .text.WWDG_SetPrescaler:00000000 WWDG_SetPrescaler
     /tmp/ccEMe7RA.s:24678  .text.WWDG_SetPrescaler:00000034 $d
     /tmp/ccEMe7RA.s:24683  .text.WWDG_SetWindowValue:00000000 $t
     /tmp/ccEMe7RA.s:24688  .text.WWDG_SetWindowValue:00000000 WWDG_SetWindowValue
     /tmp/ccEMe7RA.s:24733  .text.WWDG_SetWindowValue:00000038 $d
     /tmp/ccEMe7RA.s:24738  .text.WWDG_EnableIT:00000000 $t
     /tmp/ccEMe7RA.s:24743  .text.WWDG_EnableIT:00000000 WWDG_EnableIT
     /tmp/ccEMe7RA.s:24768  .text.WWDG_EnableIT:00000014 $d
     /tmp/ccEMe7RA.s:24773  .text.WWDG_SetCounter:00000000 $t
     /tmp/ccEMe7RA.s:24778  .text.WWDG_SetCounter:00000000 WWDG_SetCounter
     /tmp/ccEMe7RA.s:24810  .text.WWDG_SetCounter:00000020 $d
     /tmp/ccEMe7RA.s:24815  .text.WWDG_Enable:00000000 $t
     /tmp/ccEMe7RA.s:24820  .text.WWDG_Enable:00000000 WWDG_Enable
     /tmp/ccEMe7RA.s:24853  .text.WWDG_Enable:00000020 $d
     /tmp/ccEMe7RA.s:24858  .text.WWDG_GetFlagStatus:00000000 $t
     /tmp/ccEMe7RA.s:24863  .text.WWDG_GetFlagStatus:00000000 WWDG_GetFlagStatus
     /tmp/ccEMe7RA.s:24908  .text.WWDG_GetFlagStatus:00000030 $d
     /tmp/ccEMe7RA.s:24913  .text.WWDG_ClearFlag:00000000 $t
     /tmp/ccEMe7RA.s:24918  .text.WWDG_ClearFlag:00000000 WWDG_ClearFlag
     /tmp/ccEMe7RA.s:24943  .text.WWDG_ClearFlag:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
