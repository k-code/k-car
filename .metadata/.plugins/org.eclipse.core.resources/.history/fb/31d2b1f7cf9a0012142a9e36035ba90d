   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f4xx_hash_sha1.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c"
 24578              		.align	2
 24579              		.global	HASH_SHA1
 24580              		.thumb
 24581              		.thumb_func
 24583              	HASH_SHA1:
 24584              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @file    stm32f4xx_hash_sha1.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief   This file provides high level functions to compute the HASH SHA1 and
   8:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          HMAC SHA1 Digest of an input message.
   9:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          It uses the stm32f4xx_hash.c/.h drivers to access the STM32F4xx HASH
  10:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          peripheral.
  11:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  12:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *  @verbatim
  13:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * 
  14:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          ===================================================================
  15:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *                                   How to use this driver
  16:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          ===================================================================
  17:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          1. Enable The HASH controller clock using 
  18:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE); function.
  19:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  20:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          2. Calculate the HASH SHA1 Digest using HASH_SHA1() function.
  21:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  22:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          3. Calculate the HMAC SHA1 Digest using HMAC_SHA1() function.
  23:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  24:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *  @endverbatim
  25:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  26:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
  27:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @attention
  28:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  29:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  30:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  31:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  32:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  33:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  34:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  35:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *
  36:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  37:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ******************************************************************************
  38:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  39:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  40:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Includes ------------------------------------------------------------------*/
  41:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** #include "stm32f4xx_hash.h"
  42:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  43:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  44:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  45:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  46:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  47:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH 
  48:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief HASH driver modules
  49:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  50:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  51:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  52:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private typedef -----------------------------------------------------------*/
  53:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private define ------------------------------------------------------------*/
  54:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** #define SHA1BUSY_TIMEOUT    ((uint32_t) 0x00010000)
  55:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  56:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private macro -------------------------------------------------------------*/
  57:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private variables ---------------------------------------------------------*/
  58:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private function prototypes -----------------------------------------------*/
  59:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /* Private functions ---------------------------------------------------------*/
  60:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  61:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH_Private_Functions
  62:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  63:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */ 
  64:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  65:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /** @defgroup HASH_Group6 High Level SHA1 functions
  66:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  *  @brief   High Level SHA1 Hash and HMAC functions 
  67:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  *
  68:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** @verbatim   
  69:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  ===============================================================================
  70:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****                           High Level SHA1 Hash and HMAC functions
  71:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****  ===============================================================================
  72:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  73:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  74:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** @endverbatim
  75:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @{
  76:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  77:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  78:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /**
  79:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief  Compute the HASH SHA1 digest.
  80:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Input: pointer to the Input buffer to be treated.
  81:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Ilen: length of the Input buffer.
  82:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Output: the returned digest
  83:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @retval An ErrorStatus enumeration value:
  84:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - SUCCESS: digest computation done
  85:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - ERROR: digest computation failed
  86:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
  87:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** ErrorStatus HASH_SHA1(uint8_t *Input, uint32_t Ilen, uint8_t Output[20])
  88:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** {
 24585              		.loc 1 88 0
 24586              		.cfi_startproc
 24587              		@ args = 0, pretend = 0, frame = 120
 24588              		@ frame_needed = 1, uses_anonymous_args = 0
 24589 0000 90B5     		push	{r4, r7, lr}
 24590              	.LCFI0:
 24591              		.cfi_def_cfa_offset 12
 24592 0002 9FB0     		sub	sp, sp, #124
 24593              	.LCFI1:
 24594              		.cfi_def_cfa_offset 136
 24595 0004 00AF     		add	r7, sp, #0
 24596              		.cfi_offset 14, -4
 24597              		.cfi_offset 7, -8
 24598              		.cfi_offset 4, -12
 24599              	.LCFI2:
 24600              		.cfi_def_cfa_register 7
 24601 0006 F860     		str	r0, [r7, #12]
 24602 0008 B960     		str	r1, [r7, #8]
 24603 000a 7A60     		str	r2, [r7, #4]
  89:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_InitTypeDef SHA1_HASH_InitStructure;
  90:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_MsgDigest SHA1_MessageDigest;
  91:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitsdata = 0;
 24604              		.loc 1 91 0
 24605 000c 4FF00003 		mov	r3, #0
 24606 0010 FB82     		strh	r3, [r7, #22]	@ movhi
  92:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t i = 0;
 24607              		.loc 1 92 0
 24608 0012 4FF00003 		mov	r3, #0
 24609 0016 7B67     		str	r3, [r7, #116]
  93:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint32_t counter = 0;
 24610              		.loc 1 93 0
 24611 0018 4FF00003 		mov	r3, #0
 24612 001c 3B61     		str	r3, [r7, #16]
  94:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t busystatus = 0;
 24613              		.loc 1 94 0
 24614 001e 4FF00003 		mov	r3, #0
 24615 0022 BB66     		str	r3, [r7, #104]
  95:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ErrorStatus status = SUCCESS;
 24616              		.loc 1 95 0
 24617 0024 4FF00103 		mov	r3, #1
 24618 0028 87F87330 		strb	r3, [r7, #115]
  96:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t inputaddr  = (uint32_t)Input;
 24619              		.loc 1 96 0
 24620 002c FB68     		ldr	r3, [r7, #12]
 24621 002e FB66     		str	r3, [r7, #108]
  97:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t outputaddr = (uint32_t)Output;
 24622              		.loc 1 97 0
 24623 0030 7B68     		ldr	r3, [r7, #4]
 24624 0032 7B66     		str	r3, [r7, #100]
  98:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
  99:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Input data */
 100:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
 24625              		.loc 1 100 0
 24626 0034 BB68     		ldr	r3, [r7, #8]
 24627 0036 9BB2     		uxth	r3, r3
 24628 0038 03F00303 		and	r3, r3, #3
 24629 003c 9BB2     		uxth	r3, r3
 24630 003e 4FEAC303 		lsl	r3, r3, #3
 24631 0042 9BB2     		uxth	r3, r3
 24632 0044 FB82     		strh	r3, [r7, #22]	@ movhi
 101:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 102:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH peripheral initialization */
 103:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_DeInit();
 24633              		.loc 1 103 0
 24634 0046 FFF7FEFF 		bl	HASH_DeInit
 104:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 105:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH Configuration */
 106:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 24635              		.loc 1 106 0
 24636 004a 4FF00003 		mov	r3, #0
 24637 004e FB62     		str	r3, [r7, #44]
 107:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HASH;
 24638              		.loc 1 107 0
 24639 0050 4FF00003 		mov	r3, #0
 24640 0054 3B63     		str	r3, [r7, #48]
 108:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
 24641              		.loc 1 108 0
 24642 0056 4FF02003 		mov	r3, #32
 24643 005a 7B63     		str	r3, [r7, #52]
 109:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_Init(&SHA1_HASH_InitStructure);
 24644              		.loc 1 109 0
 24645 005c 07F12C03 		add	r3, r7, #44
 24646 0060 1846     		mov	r0, r3
 24647 0062 FFF7FEFF 		bl	HASH_Init
 110:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 111:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Configure the number of valid bits in last word of the data */
 112:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
 24648              		.loc 1 112 0
 24649 0066 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 24650 0068 9BB2     		uxth	r3, r3
 24651 006a 1846     		mov	r0, r3
 24652 006c FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 113:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 114:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Write the Input block in the IN FIFO */
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Ilen; i+=4)
 24653              		.loc 1 115 0
 24654 0070 4FF00003 		mov	r3, #0
 24655 0074 7B67     		str	r3, [r7, #116]
 24656 0076 0CE0     		b	.L2
 24657              	.L3:
 116:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 117:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_DataIn(*(uint32_t*)inputaddr);
 24658              		.loc 1 117 0 discriminator 2
 24659 0078 FB6E     		ldr	r3, [r7, #108]
 24660 007a 1B68     		ldr	r3, [r3, #0]
 24661 007c 1846     		mov	r0, r3
 24662 007e FFF7FEFF 		bl	HASH_DataIn
 118:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     inputaddr+=4;
 24663              		.loc 1 118 0 discriminator 2
 24664 0082 FB6E     		ldr	r3, [r7, #108]
 24665 0084 03F10403 		add	r3, r3, #4
 24666 0088 FB66     		str	r3, [r7, #108]
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Ilen; i+=4)
 24667              		.loc 1 115 0 discriminator 2
 24668 008a 7B6F     		ldr	r3, [r7, #116]
 24669 008c 03F10403 		add	r3, r3, #4
 24670 0090 7B67     		str	r3, [r7, #116]
 24671              	.L2:
 115:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Ilen; i+=4)
 24672              		.loc 1 115 0 is_stmt 0 discriminator 1
 24673 0092 7A6F     		ldr	r2, [r7, #116]
 24674 0094 BB68     		ldr	r3, [r7, #8]
 24675 0096 9A42     		cmp	r2, r3
 24676 0098 EED3     		bcc	.L3
 119:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 120:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 121:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Start the HASH processor */
 122:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_StartDigest();
 24677              		.loc 1 122 0 is_stmt 1
 24678 009a FFF7FEFF 		bl	HASH_StartDigest
 24679              	.L5:
 123:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 124:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* wait until the Busy flag is RESET */
 125:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   do
 126:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 127:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 24680              		.loc 1 127 0 discriminator 1
 24681 009e 4FF00800 		mov	r0, #8
 24682 00a2 FFF7FEFF 		bl	HASH_GetFlagStatus
 24683 00a6 0346     		mov	r3, r0
 24684 00a8 BB66     		str	r3, [r7, #104]
 128:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     counter++;
 24685              		.loc 1 128 0 discriminator 1
 24686 00aa 3B69     		ldr	r3, [r7, #16]
 24687 00ac 03F10103 		add	r3, r3, #1
 24688 00b0 3B61     		str	r3, [r7, #16]
 129:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 24689              		.loc 1 129 0 discriminator 1
 24690 00b2 3B69     		ldr	r3, [r7, #16]
 24691 00b4 B3F5803F 		cmp	r3, #65536
 24692 00b8 02D0     		beq	.L4
 24693 00ba BB6E     		ldr	r3, [r7, #104]
 24694 00bc 002B     		cmp	r3, #0
 24695 00be EED1     		bne	.L5
 24696              	.L4:
 130:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 131:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   if (busystatus != RESET)
 24697              		.loc 1 131 0
 24698 00c0 BB6E     		ldr	r3, [r7, #104]
 24699 00c2 002B     		cmp	r3, #0
 24700 00c4 04D0     		beq	.L6
 132:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 133:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****      status = ERROR;
 24701              		.loc 1 133 0
 24702 00c6 4FF00003 		mov	r3, #0
 24703 00ca 87F87330 		strb	r3, [r7, #115]
 24704 00ce 3CE0     		b	.L7
 24705              	.L6:
 134:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 135:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   else
 136:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 137:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Read the message digest */
 138:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_GetDigest(&SHA1_MessageDigest);
 24706              		.loc 1 138 0
 24707 00d0 07F11803 		add	r3, r7, #24
 24708 00d4 1846     		mov	r0, r3
 24709 00d6 FFF7FEFF 		bl	HASH_GetDigest
 139:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 24710              		.loc 1 139 0
 24711 00da 7B6E     		ldr	r3, [r7, #100]
 24712 00dc BA69     		ldr	r2, [r7, #24]
 24713 00de 3A66     		str	r2, [r7, #96]
 24714              	.LBB22:
 24715              	.LBB23:
   1:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /**************************************************************************//**
   2:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @version  V2.10
   5:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @date     19. July 2011
   6:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  *
   7:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @note
   8:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  *
  10:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @par
  11:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  *
  15:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * @par
  16:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  *
  22:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  ******************************************************************************/
  23:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  24:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  27:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  28:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   Access to dedicated instructions
  31:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   @{
  32:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** */
  33:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  34:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /* ARM armcc specific functions */
  36:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  37:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #endif
  40:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  41:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  42:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  No Operation
  43:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  44:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  46:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __NOP                             __nop
  47:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  48:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  49:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  51:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     until one of a number of events occurs.
  53:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  54:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __WFI                             __wfi
  55:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  56:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  57:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Wait For Event
  58:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  59:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  62:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __WFE                             __wfe
  63:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  64:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  65:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Send Event
  66:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  67:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  69:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __SEV                             __sev
  70:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  71:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  72:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  74:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  78:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  80:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  81:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  83:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  86:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  88:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  89:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  91:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
  94:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  96:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  97:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
  99:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 101:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 103:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 104:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __REV                             __rev
 105:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 106:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 107:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 109:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 111:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 113:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 114:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 116:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   rev16 r0, r0
 117:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   bx lr
 118:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 119:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 120:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 121:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 123:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 125:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 127:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 128:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 130:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   revsh r0, r0
 131:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   bx lr
 132:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 133:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 134:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 135:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 137:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 139:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 141:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 143:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 144:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __RBIT                            __rbit
 145:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 146:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 147:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 149:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 151:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 154:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 156:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 157:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 159:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 161:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 164:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 166:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 167:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 169:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 171:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 174:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 176:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 177:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 179:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 181:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to store
 182:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          0  Function succeeded
 184:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          1  Function failed
 185:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 186:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 188:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 189:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 191:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 193:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to store
 194:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          0  Function succeeded
 196:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          1  Function failed
 197:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 198:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 200:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 201:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 203:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 205:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to store
 206:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          0  Function succeeded
 208:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return          1  Function failed
 209:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 210:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 212:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 213:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 215:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 217:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 218:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __CLREX                           __clrex
 219:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 220:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 221:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Signed Saturate
 222:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 223:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function saturates a signed value.
 224:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 225:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return             Saturated value
 228:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 229:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __SSAT                            __ssat
 230:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 231:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 232:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 234:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function saturates an unsigned value.
 235:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 236:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return             Saturated value
 239:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 240:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __USAT                            __usat
 241:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 242:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 243:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Count leading zeros
 244:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 245:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 247:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return             number of leading zeros in value
 249:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 250:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #define __CLZ                             __clz 
 251:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 252:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 254:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 255:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 256:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 259:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #include <cmsis_iar.h>
 260:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 261:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 262:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /* GNU gcc specific functions */
 264:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 265:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  No Operation
 266:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 267:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 269:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 271:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("nop");
 272:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 273:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 274:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 275:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 277:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     until one of a number of events occurs.
 279:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 280:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 282:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 284:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 285:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 286:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Wait For Event
 287:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 288:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 291:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 293:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 295:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 296:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 297:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Send Event
 298:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 299:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 301:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 303:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("sev");
 304:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 305:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 306:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 307:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 309:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 313:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 315:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("isb");
 316:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 317:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 318:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 319:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 321:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 324:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 326:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("dsb");
 327:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 328:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 329:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 330:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 332:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 335:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
 336:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 337:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("dmb");
 338:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** }
 339:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 340:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 341:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 343:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** 
 345:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****     \return               Reversed value
 347:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****  */
 348:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h **** {
 350:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   uint32_t result;
 351:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24716              		.loc 7 352 0
 24717 00e0 3A6E     		ldr	r2, [r7, #96]
 24718              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24719 00e2 14BA     		rev r4, r2
 24720              	@ 0 "" 2
 24721              		.thumb
 24722 00e4 FC65     		str	r4, [r7, #92]
 353:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   return(result);
 24723              		.loc 7 353 0
 24724 00e6 FA6D     		ldr	r2, [r7, #92]
 24725              	.LBE23:
 24726              	.LBE22:
 24727              		.loc 1 139 0
 24728 00e8 1A60     		str	r2, [r3, #0]
 140:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 24729              		.loc 1 140 0
 24730 00ea 7B6E     		ldr	r3, [r7, #100]
 24731 00ec 03F10403 		add	r3, r3, #4
 24732 00f0 7B66     		str	r3, [r7, #100]
 141:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 24733              		.loc 1 141 0
 24734 00f2 7B6E     		ldr	r3, [r7, #100]
 24735 00f4 FA69     		ldr	r2, [r7, #28]
 24736 00f6 BA65     		str	r2, [r7, #88]
 24737              	.LBB24:
 24738              	.LBB25:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24739              		.loc 7 352 0
 24740 00f8 BA6D     		ldr	r2, [r7, #88]
 24741              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24742 00fa 14BA     		rev r4, r2
 24743              	@ 0 "" 2
 24744              		.thumb
 24745 00fc 7C65     		str	r4, [r7, #84]
 24746              		.loc 7 353 0
 24747 00fe 7A6D     		ldr	r2, [r7, #84]
 24748              	.LBE25:
 24749              	.LBE24:
 24750              		.loc 1 141 0
 24751 0100 1A60     		str	r2, [r3, #0]
 142:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 24752              		.loc 1 142 0
 24753 0102 7B6E     		ldr	r3, [r7, #100]
 24754 0104 03F10403 		add	r3, r3, #4
 24755 0108 7B66     		str	r3, [r7, #100]
 143:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
 24756              		.loc 1 143 0
 24757 010a 7B6E     		ldr	r3, [r7, #100]
 24758 010c 3A6A     		ldr	r2, [r7, #32]
 24759 010e 3A65     		str	r2, [r7, #80]
 24760              	.LBB26:
 24761              	.LBB27:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24762              		.loc 7 352 0
 24763 0110 3A6D     		ldr	r2, [r7, #80]
 24764              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24765 0112 14BA     		rev r4, r2
 24766              	@ 0 "" 2
 24767              		.thumb
 24768 0114 FC64     		str	r4, [r7, #76]
 24769              		.loc 7 353 0
 24770 0116 FA6C     		ldr	r2, [r7, #76]
 24771              	.LBE27:
 24772              	.LBE26:
 24773              		.loc 1 143 0
 24774 0118 1A60     		str	r2, [r3, #0]
 144:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 24775              		.loc 1 144 0
 24776 011a 7B6E     		ldr	r3, [r7, #100]
 24777 011c 03F10403 		add	r3, r3, #4
 24778 0120 7B66     		str	r3, [r7, #100]
 145:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 24779              		.loc 1 145 0
 24780 0122 7B6E     		ldr	r3, [r7, #100]
 24781 0124 7A6A     		ldr	r2, [r7, #36]
 24782 0126 BA64     		str	r2, [r7, #72]
 24783              	.LBB28:
 24784              	.LBB29:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24785              		.loc 7 352 0
 24786 0128 BA6C     		ldr	r2, [r7, #72]
 24787              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24788 012a 14BA     		rev r4, r2
 24789              	@ 0 "" 2
 24790              		.thumb
 24791 012c 7C64     		str	r4, [r7, #68]
 24792              		.loc 7 353 0
 24793 012e 7A6C     		ldr	r2, [r7, #68]
 24794              	.LBE29:
 24795              	.LBE28:
 24796              		.loc 1 145 0
 24797 0130 1A60     		str	r2, [r3, #0]
 146:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     outputaddr+=4;
 24798              		.loc 1 146 0
 24799 0132 7B6E     		ldr	r3, [r7, #100]
 24800 0134 03F10403 		add	r3, r3, #4
 24801 0138 7B66     		str	r3, [r7, #100]
 147:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 24802              		.loc 1 147 0
 24803 013a 7B6E     		ldr	r3, [r7, #100]
 24804 013c BA6A     		ldr	r2, [r7, #40]
 24805 013e 3A64     		str	r2, [r7, #64]
 24806              	.LBB30:
 24807              	.LBB31:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 24808              		.loc 7 352 0
 24809 0140 3A6C     		ldr	r2, [r7, #64]
 24810              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 24811 0142 14BA     		rev r4, r2
 24812              	@ 0 "" 2
 24813              		.thumb
 24814 0144 FC63     		str	r4, [r7, #60]
 24815              		.loc 7 353 0
 24816 0146 FA6B     		ldr	r2, [r7, #60]
 24817              	.LBE31:
 24818              	.LBE30:
 24819              		.loc 1 147 0
 24820 0148 1A60     		str	r2, [r3, #0]
 24821              	.L7:
 148:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 149:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   return status;
 24822              		.loc 1 149 0
 24823 014a 97F87330 		ldrb	r3, [r7, #115]	@ zero_extendqisi2
 150:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** }
 24824              		.loc 1 150 0
 24825 014e 1846     		mov	r0, r3
 24826 0150 07F17C07 		add	r7, r7, #124
 24827 0154 BD46     		mov	sp, r7
 24828 0156 90BD     		pop	{r4, r7, pc}
 24829              		.cfi_endproc
 24830              	.LFE110:
 24832              		.section	.text.HMAC_SHA1,"ax",%progbits
 24833              		.align	2
 24834              		.global	HMAC_SHA1
 24835              		.thumb
 24836              		.thumb_func
 24838              	HMAC_SHA1:
 24839              	.LFB111:
 151:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 152:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** /**
 153:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @brief  Compute the HMAC SHA1 digest.
 154:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Key: pointer to the Key used for HMAC.
 155:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Keylen: length of the Key used for HMAC.  
 156:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Input: pointer to the Input buffer to be treated.
 157:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Ilen: length of the Input buffer.
 158:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @param  Output: the returned digest
 159:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   * @retval An ErrorStatus enumeration value:
 160:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - SUCCESS: digest computation done
 161:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   *          - ERROR: digest computation failed
 162:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   */
 163:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** ErrorStatus HMAC_SHA1(uint8_t *Key, uint32_t Keylen, uint8_t *Input,
 164:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****                       uint32_t Ilen, uint8_t Output[20])
 165:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** {
 24840              		.loc 1 165 0
 24841              		.cfi_startproc
 24842              		@ args = 4, pretend = 0, frame = 128
 24843              		@ frame_needed = 1, uses_anonymous_args = 0
 24844 0000 90B5     		push	{r4, r7, lr}
 24845              	.LCFI3:
 24846              		.cfi_def_cfa_offset 12
 24847 0002 A1B0     		sub	sp, sp, #132
 24848              	.LCFI4:
 24849              		.cfi_def_cfa_offset 144
 24850 0004 00AF     		add	r7, sp, #0
 24851              		.cfi_offset 14, -4
 24852              		.cfi_offset 7, -8
 24853              		.cfi_offset 4, -12
 24854              	.LCFI5:
 24855              		.cfi_def_cfa_register 7
 24856 0006 F860     		str	r0, [r7, #12]
 24857 0008 B960     		str	r1, [r7, #8]
 24858 000a 7A60     		str	r2, [r7, #4]
 24859 000c 3B60     		str	r3, [r7, #0]
 166:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_InitTypeDef SHA1_HASH_InitStructure;
 167:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_MsgDigest SHA1_MessageDigest;
 168:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitsdata = 0;
 24860              		.loc 1 168 0
 24861 000e 4FF00003 		mov	r3, #0
 24862 0012 7B83     		strh	r3, [r7, #26]	@ movhi
 169:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint16_t nbvalidbitskey = 0;
 24863              		.loc 1 169 0
 24864 0014 4FF00003 		mov	r3, #0
 24865 0018 3B83     		strh	r3, [r7, #24]	@ movhi
 170:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t i = 0;
 24866              		.loc 1 170 0
 24867 001a 4FF00003 		mov	r3, #0
 24868 001e FB67     		str	r3, [r7, #124]
 171:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   __IO uint32_t counter = 0;
 24869              		.loc 1 171 0
 24870 0020 4FF00003 		mov	r3, #0
 24871 0024 7B61     		str	r3, [r7, #20]
 172:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t busystatus = 0;
 24872              		.loc 1 172 0
 24873 0026 4FF00003 		mov	r3, #0
 24874 002a FB66     		str	r3, [r7, #108]
 173:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   ErrorStatus status = SUCCESS;
 24875              		.loc 1 173 0
 24876 002c 4FF00103 		mov	r3, #1
 24877 0030 87F87B30 		strb	r3, [r7, #123]
 174:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t keyaddr    = (uint32_t)Key;
 24878              		.loc 1 174 0
 24879 0034 FB68     		ldr	r3, [r7, #12]
 24880 0036 7B67     		str	r3, [r7, #116]
 175:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t inputaddr  = (uint32_t)Input;
 24881              		.loc 1 175 0
 24882 0038 7B68     		ldr	r3, [r7, #4]
 24883 003a 3B67     		str	r3, [r7, #112]
 176:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   uint32_t outputaddr = (uint32_t)Output;
 24884              		.loc 1 176 0
 24885 003c D7F89030 		ldr	r3, [r7, #144]
 24886 0040 BB66     		str	r3, [r7, #104]
 177:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 178:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Input data */
 179:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
 24887              		.loc 1 179 0
 24888 0042 3B68     		ldr	r3, [r7, #0]
 24889 0044 9BB2     		uxth	r3, r3
 24890 0046 03F00303 		and	r3, r3, #3
 24891 004a 9BB2     		uxth	r3, r3
 24892 004c 4FEAC303 		lsl	r3, r3, #3
 24893 0050 9BB2     		uxth	r3, r3
 24894 0052 7B83     		strh	r3, [r7, #26]	@ movhi
 180:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 181:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Number of valid bits in last word of the Key */
 182:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   nbvalidbitskey = 8 * (Keylen % 4);
 24895              		.loc 1 182 0
 24896 0054 BB68     		ldr	r3, [r7, #8]
 24897 0056 9BB2     		uxth	r3, r3
 24898 0058 03F00303 		and	r3, r3, #3
 24899 005c 9BB2     		uxth	r3, r3
 24900 005e 4FEAC303 		lsl	r3, r3, #3
 24901 0062 9BB2     		uxth	r3, r3
 24902 0064 3B83     		strh	r3, [r7, #24]	@ movhi
 183:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 184:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH peripheral initialization */
 185:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_DeInit();
 24903              		.loc 1 185 0
 24904 0066 FFF7FEFF 		bl	HASH_DeInit
 186:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 187:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* HASH Configuration */
 188:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 24905              		.loc 1 188 0
 24906 006a 4FF00003 		mov	r3, #0
 24907 006e 3B63     		str	r3, [r7, #48]
 189:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HMAC;
 24908              		.loc 1 189 0
 24909 0070 4FF04003 		mov	r3, #64
 24910 0074 7B63     		str	r3, [r7, #52]
 190:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   SHA1_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
 24911              		.loc 1 190 0
 24912 0076 4FF02003 		mov	r3, #32
 24913 007a BB63     		str	r3, [r7, #56]
 191:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   if(Keylen > 64)
 24914              		.loc 1 191 0
 24915 007c BB68     		ldr	r3, [r7, #8]
 24916 007e 402B     		cmp	r3, #64
 24917 0080 03D9     		bls	.L9
 192:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 193:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* HMAC long Key */
 194:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_LongKey;
 24918              		.loc 1 194 0
 24919 0082 4FF48033 		mov	r3, #65536
 24920 0086 FB63     		str	r3, [r7, #60]
 24921 0088 02E0     		b	.L10
 24922              	.L9:
 195:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 196:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   else
 197:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 198:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* HMAC short Key */
 199:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     SHA1_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 24923              		.loc 1 199 0
 24924 008a 4FF00003 		mov	r3, #0
 24925 008e FB63     		str	r3, [r7, #60]
 24926              	.L10:
 200:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 201:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_Init(&SHA1_HASH_InitStructure);
 24927              		.loc 1 201 0
 24928 0090 07F13003 		add	r3, r7, #48
 24929 0094 1846     		mov	r0, r3
 24930 0096 FFF7FEFF 		bl	HASH_Init
 202:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 203:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Configure the number of valid bits in last word of the Key */
 204:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 24931              		.loc 1 204 0
 24932 009a 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 24933 009c 9BB2     		uxth	r3, r3
 24934 009e 1846     		mov	r0, r3
 24935 00a0 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 205:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 206:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Write the Key */
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Keylen; i+=4)
 24936              		.loc 1 207 0
 24937 00a4 4FF00003 		mov	r3, #0
 24938 00a8 FB67     		str	r3, [r7, #124]
 24939 00aa 0CE0     		b	.L11
 24940              	.L12:
 208:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 209:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_DataIn(*(uint32_t*)keyaddr);
 24941              		.loc 1 209 0 discriminator 2
 24942 00ac 7B6F     		ldr	r3, [r7, #116]
 24943 00ae 1B68     		ldr	r3, [r3, #0]
 24944 00b0 1846     		mov	r0, r3
 24945 00b2 FFF7FEFF 		bl	HASH_DataIn
 210:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     keyaddr+=4;
 24946              		.loc 1 210 0 discriminator 2
 24947 00b6 7B6F     		ldr	r3, [r7, #116]
 24948 00b8 03F10403 		add	r3, r3, #4
 24949 00bc 7B67     		str	r3, [r7, #116]
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Keylen; i+=4)
 24950              		.loc 1 207 0 discriminator 2
 24951 00be FB6F     		ldr	r3, [r7, #124]
 24952 00c0 03F10403 		add	r3, r3, #4
 24953 00c4 FB67     		str	r3, [r7, #124]
 24954              	.L11:
 207:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   for(i=0; i<Keylen; i+=4)
 24955              		.loc 1 207 0 is_stmt 0 discriminator 1
 24956 00c6 FA6F     		ldr	r2, [r7, #124]
 24957 00c8 BB68     		ldr	r3, [r7, #8]
 24958 00ca 9A42     		cmp	r2, r3
 24959 00cc EED3     		bcc	.L12
 211:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 212:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 213:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* Start the HASH processor */
 214:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   HASH_StartDigest();
 24960              		.loc 1 214 0 is_stmt 1
 24961 00ce FFF7FEFF 		bl	HASH_StartDigest
 24962              	.L14:
 215:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 216:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   /* wait until the Busy flag is RESET */
 217:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   do
 218:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 219:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 24963              		.loc 1 219 0 discriminator 1
 24964 00d2 4FF00800 		mov	r0, #8
 24965 00d6 FFF7FEFF 		bl	HASH_GetFlagStatus
 24966 00da 0346     		mov	r3, r0
 24967 00dc FB66     		str	r3, [r7, #108]
 220:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     counter++;
 24968              		.loc 1 220 0 discriminator 1
 24969 00de 7B69     		ldr	r3, [r7, #20]
 24970 00e0 03F10103 		add	r3, r3, #1
 24971 00e4 7B61     		str	r3, [r7, #20]
 221:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 24972              		.loc 1 221 0 discriminator 1
 24973 00e6 7B69     		ldr	r3, [r7, #20]
 24974 00e8 B3F5803F 		cmp	r3, #65536
 24975 00ec 02D0     		beq	.L13
 24976 00ee FB6E     		ldr	r3, [r7, #108]
 24977 00f0 002B     		cmp	r3, #0
 24978 00f2 EED1     		bne	.L14
 24979              	.L13:
 222:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 223:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   if (busystatus != RESET)
 24980              		.loc 1 223 0
 24981 00f4 FB6E     		ldr	r3, [r7, #108]
 24982 00f6 002B     		cmp	r3, #0
 24983 00f8 04D0     		beq	.L15
 224:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 225:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****      status = ERROR;
 24984              		.loc 1 225 0
 24985 00fa 4FF00003 		mov	r3, #0
 24986 00fe 87F87B30 		strb	r3, [r7, #123]
 24987 0102 AEE0     		b	.L16
 24988              	.L15:
 226:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 227:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   else
 228:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   {
 229:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Configure the number of valid bits in last word of the Input data */
 230:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
 24989              		.loc 1 230 0
 24990 0104 7B8B     		ldrh	r3, [r7, #26]	@ movhi
 24991 0106 9BB2     		uxth	r3, r3
 24992 0108 1846     		mov	r0, r3
 24993 010a FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 231:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 232:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Write the Input block in the IN FIFO */
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     for(i=0; i<Ilen; i+=4)
 24994              		.loc 1 233 0
 24995 010e 4FF00003 		mov	r3, #0
 24996 0112 FB67     		str	r3, [r7, #124]
 24997 0114 0CE0     		b	.L17
 24998              	.L18:
 234:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 235:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       HASH_DataIn(*(uint32_t*)inputaddr);
 24999              		.loc 1 235 0 discriminator 2
 25000 0116 3B6F     		ldr	r3, [r7, #112]
 25001 0118 1B68     		ldr	r3, [r3, #0]
 25002 011a 1846     		mov	r0, r3
 25003 011c FFF7FEFF 		bl	HASH_DataIn
 236:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       inputaddr+=4;
 25004              		.loc 1 236 0 discriminator 2
 25005 0120 3B6F     		ldr	r3, [r7, #112]
 25006 0122 03F10403 		add	r3, r3, #4
 25007 0126 3B67     		str	r3, [r7, #112]
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     for(i=0; i<Ilen; i+=4)
 25008              		.loc 1 233 0 discriminator 2
 25009 0128 FB6F     		ldr	r3, [r7, #124]
 25010 012a 03F10403 		add	r3, r3, #4
 25011 012e FB67     		str	r3, [r7, #124]
 25012              	.L17:
 233:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     for(i=0; i<Ilen; i+=4)
 25013              		.loc 1 233 0 is_stmt 0 discriminator 1
 25014 0130 FA6F     		ldr	r2, [r7, #124]
 25015 0132 3B68     		ldr	r3, [r7, #0]
 25016 0134 9A42     		cmp	r2, r3
 25017 0136 EED3     		bcc	.L18
 237:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }
 238:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 239:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* Start the HASH processor */
 240:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     HASH_StartDigest();
 25018              		.loc 1 240 0 is_stmt 1
 25019 0138 FFF7FEFF 		bl	HASH_StartDigest
 241:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 242:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 243:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     /* wait until the Busy flag is RESET */
 244:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     counter =0;
 25020              		.loc 1 244 0
 25021 013c 4FF00003 		mov	r3, #0
 25022 0140 7B61     		str	r3, [r7, #20]
 25023              	.L20:
 245:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     do
 246:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 247:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 25024              		.loc 1 247 0 discriminator 1
 25025 0142 4FF00800 		mov	r0, #8
 25026 0146 FFF7FEFF 		bl	HASH_GetFlagStatus
 25027 014a 0346     		mov	r3, r0
 25028 014c FB66     		str	r3, [r7, #108]
 248:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       counter++;
 25029              		.loc 1 248 0 discriminator 1
 25030 014e 7B69     		ldr	r3, [r7, #20]
 25031 0150 03F10103 		add	r3, r3, #1
 25032 0154 7B61     		str	r3, [r7, #20]
 249:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 25033              		.loc 1 249 0 discriminator 1
 25034 0156 7B69     		ldr	r3, [r7, #20]
 25035 0158 B3F5803F 		cmp	r3, #65536
 25036 015c 02D0     		beq	.L19
 25037 015e FB6E     		ldr	r3, [r7, #108]
 25038 0160 002B     		cmp	r3, #0
 25039 0162 EED1     		bne	.L20
 25040              	.L19:
 250:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 251:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     if (busystatus != RESET)
 25041              		.loc 1 251 0
 25042 0164 FB6E     		ldr	r3, [r7, #108]
 25043 0166 002B     		cmp	r3, #0
 25044 0168 04D0     		beq	.L21
 252:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {
 253:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       status = ERROR;
 25045              		.loc 1 253 0
 25046 016a 4FF00003 		mov	r3, #0
 25047 016e 87F87B30 		strb	r3, [r7, #123]
 25048 0172 76E0     		b	.L16
 25049              	.L21:
 254:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }
 255:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     else
 256:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     {  
 257:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* Configure the number of valid bits in last word of the Key */
 258:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 25050              		.loc 1 258 0
 25051 0174 3B8B     		ldrh	r3, [r7, #24]	@ movhi
 25052 0176 9BB2     		uxth	r3, r3
 25053 0178 1846     		mov	r0, r3
 25054 017a FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 259:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 260:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* Write the Key */
 261:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       keyaddr = (uint32_t)Key;
 25055              		.loc 1 261 0
 25056 017e FB68     		ldr	r3, [r7, #12]
 25057 0180 7B67     		str	r3, [r7, #116]
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 25058              		.loc 1 262 0
 25059 0182 4FF00003 		mov	r3, #0
 25060 0186 FB67     		str	r3, [r7, #124]
 25061 0188 0CE0     		b	.L22
 25062              	.L23:
 263:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 264:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         HASH_DataIn(*(uint32_t*)keyaddr);
 25063              		.loc 1 264 0 discriminator 2
 25064 018a 7B6F     		ldr	r3, [r7, #116]
 25065 018c 1B68     		ldr	r3, [r3, #0]
 25066 018e 1846     		mov	r0, r3
 25067 0190 FFF7FEFF 		bl	HASH_DataIn
 265:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         keyaddr+=4;
 25068              		.loc 1 265 0 discriminator 2
 25069 0194 7B6F     		ldr	r3, [r7, #116]
 25070 0196 03F10403 		add	r3, r3, #4
 25071 019a 7B67     		str	r3, [r7, #116]
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 25072              		.loc 1 262 0 discriminator 2
 25073 019c FB6F     		ldr	r3, [r7, #124]
 25074 019e 03F10403 		add	r3, r3, #4
 25075 01a2 FB67     		str	r3, [r7, #124]
 25076              	.L22:
 262:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       for(i=0; i<Keylen; i+=4)
 25077              		.loc 1 262 0 is_stmt 0 discriminator 1
 25078 01a4 FA6F     		ldr	r2, [r7, #124]
 25079 01a6 BB68     		ldr	r3, [r7, #8]
 25080 01a8 9A42     		cmp	r2, r3
 25081 01aa EED3     		bcc	.L23
 266:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }
 267:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 268:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* Start the HASH processor */
 269:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       HASH_StartDigest();
 25082              		.loc 1 269 0 is_stmt 1
 25083 01ac FFF7FEFF 		bl	HASH_StartDigest
 270:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 271:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       /* wait until the Busy flag is RESET */
 272:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       counter =0;
 25084              		.loc 1 272 0
 25085 01b0 4FF00003 		mov	r3, #0
 25086 01b4 7B61     		str	r3, [r7, #20]
 25087              	.L25:
 273:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       do
 274:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 275:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 25088              		.loc 1 275 0 discriminator 1
 25089 01b6 4FF00800 		mov	r0, #8
 25090 01ba FFF7FEFF 		bl	HASH_GetFlagStatus
 25091 01be 0346     		mov	r3, r0
 25092 01c0 FB66     		str	r3, [r7, #108]
 276:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         counter++;
 25093              		.loc 1 276 0 discriminator 1
 25094 01c2 7B69     		ldr	r3, [r7, #20]
 25095 01c4 03F10103 		add	r3, r3, #1
 25096 01c8 7B61     		str	r3, [r7, #20]
 277:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }while ((counter != SHA1BUSY_TIMEOUT) && (busystatus != RESET));
 25097              		.loc 1 277 0 discriminator 1
 25098 01ca 7B69     		ldr	r3, [r7, #20]
 25099 01cc B3F5803F 		cmp	r3, #65536
 25100 01d0 02D0     		beq	.L24
 25101 01d2 FB6E     		ldr	r3, [r7, #108]
 25102 01d4 002B     		cmp	r3, #0
 25103 01d6 EED1     		bne	.L25
 25104              	.L24:
 278:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** 
 279:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       if (busystatus != RESET)
 25105              		.loc 1 279 0
 25106 01d8 FB6E     		ldr	r3, [r7, #108]
 25107 01da 002B     		cmp	r3, #0
 25108 01dc 04D0     		beq	.L26
 280:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 281:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         status = ERROR;
 25109              		.loc 1 281 0
 25110 01de 4FF00003 		mov	r3, #0
 25111 01e2 87F87B30 		strb	r3, [r7, #123]
 25112 01e6 3CE0     		b	.L16
 25113              	.L26:
 282:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }
 283:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       else
 284:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       {
 285:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         /* Read the message digest */
 286:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         HASH_GetDigest(&SHA1_MessageDigest);
 25114              		.loc 1 286 0
 25115 01e8 07F11C03 		add	r3, r7, #28
 25116 01ec 1846     		mov	r0, r3
 25117 01ee FFF7FEFF 		bl	HASH_GetDigest
 287:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[0]);
 25118              		.loc 1 287 0
 25119 01f2 BB6E     		ldr	r3, [r7, #104]
 25120 01f4 FA69     		ldr	r2, [r7, #28]
 25121 01f6 7A66     		str	r2, [r7, #100]
 25122              	.LBB32:
 25123              	.LBB33:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 25124              		.loc 7 352 0
 25125 01f8 7A6E     		ldr	r2, [r7, #100]
 25126              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 25127 01fa 14BA     		rev r4, r2
 25128              	@ 0 "" 2
 25129              		.thumb
 25130 01fc 3C66     		str	r4, [r7, #96]
 25131              		.loc 7 353 0
 25132 01fe 3A6E     		ldr	r2, [r7, #96]
 25133              	.LBE33:
 25134              	.LBE32:
 25135              		.loc 1 287 0
 25136 0200 1A60     		str	r2, [r3, #0]
 288:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 25137              		.loc 1 288 0
 25138 0202 BB6E     		ldr	r3, [r7, #104]
 25139 0204 03F10403 		add	r3, r3, #4
 25140 0208 BB66     		str	r3, [r7, #104]
 289:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[1]);
 25141              		.loc 1 289 0
 25142 020a BB6E     		ldr	r3, [r7, #104]
 25143 020c 3A6A     		ldr	r2, [r7, #32]
 25144 020e FA65     		str	r2, [r7, #92]
 25145              	.LBB34:
 25146              	.LBB35:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 25147              		.loc 7 352 0
 25148 0210 FA6D     		ldr	r2, [r7, #92]
 25149              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 25150 0212 14BA     		rev r4, r2
 25151              	@ 0 "" 2
 25152              		.thumb
 25153 0214 BC65     		str	r4, [r7, #88]
 25154              		.loc 7 353 0
 25155 0216 BA6D     		ldr	r2, [r7, #88]
 25156              	.LBE35:
 25157              	.LBE34:
 25158              		.loc 1 289 0
 25159 0218 1A60     		str	r2, [r3, #0]
 290:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 25160              		.loc 1 290 0
 25161 021a BB6E     		ldr	r3, [r7, #104]
 25162 021c 03F10403 		add	r3, r3, #4
 25163 0220 BB66     		str	r3, [r7, #104]
 291:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[2]);
 25164              		.loc 1 291 0
 25165 0222 BB6E     		ldr	r3, [r7, #104]
 25166 0224 7A6A     		ldr	r2, [r7, #36]
 25167 0226 7A65     		str	r2, [r7, #84]
 25168              	.LBB36:
 25169              	.LBB37:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 25170              		.loc 7 352 0
 25171 0228 7A6D     		ldr	r2, [r7, #84]
 25172              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 25173 022a 14BA     		rev r4, r2
 25174              	@ 0 "" 2
 25175              		.thumb
 25176 022c 3C65     		str	r4, [r7, #80]
 25177              		.loc 7 353 0
 25178 022e 3A6D     		ldr	r2, [r7, #80]
 25179              	.LBE37:
 25180              	.LBE36:
 25181              		.loc 1 291 0
 25182 0230 1A60     		str	r2, [r3, #0]
 292:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 25183              		.loc 1 292 0
 25184 0232 BB6E     		ldr	r3, [r7, #104]
 25185 0234 03F10403 		add	r3, r3, #4
 25186 0238 BB66     		str	r3, [r7, #104]
 293:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[3]);
 25187              		.loc 1 293 0
 25188 023a BB6E     		ldr	r3, [r7, #104]
 25189 023c BA6A     		ldr	r2, [r7, #40]
 25190 023e FA64     		str	r2, [r7, #76]
 25191              	.LBB38:
 25192              	.LBB39:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 25193              		.loc 7 352 0
 25194 0240 FA6C     		ldr	r2, [r7, #76]
 25195              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 25196 0242 14BA     		rev r4, r2
 25197              	@ 0 "" 2
 25198              		.thumb
 25199 0244 BC64     		str	r4, [r7, #72]
 25200              		.loc 7 353 0
 25201 0246 BA6C     		ldr	r2, [r7, #72]
 25202              	.LBE39:
 25203              	.LBE38:
 25204              		.loc 1 293 0
 25205 0248 1A60     		str	r2, [r3, #0]
 294:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         outputaddr+=4;
 25206              		.loc 1 294 0
 25207 024a BB6E     		ldr	r3, [r7, #104]
 25208 024c 03F10403 		add	r3, r3, #4
 25209 0250 BB66     		str	r3, [r7, #104]
 295:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****         *(uint32_t*)(outputaddr)  = __REV(SHA1_MessageDigest.Data[4]);
 25210              		.loc 1 295 0
 25211 0252 BB6E     		ldr	r3, [r7, #104]
 25212 0254 FA6A     		ldr	r2, [r7, #44]
 25213 0256 7A64     		str	r2, [r7, #68]
 25214              	.LBB40:
 25215              	.LBB41:
 352:/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 25216              		.loc 7 352 0
 25217 0258 7A6C     		ldr	r2, [r7, #68]
 25218              	@ 352 "/home/kvv/workspace/k-car/autopilot/inc/CMSIS/core_cmInstr.h" 1
 25219 025a 14BA     		rev r4, r2
 25220              	@ 0 "" 2
 25221              		.thumb
 25222 025c 3C64     		str	r4, [r7, #64]
 25223              		.loc 7 353 0
 25224 025e 3A6C     		ldr	r2, [r7, #64]
 25225              	.LBE41:
 25226              	.LBE40:
 25227              		.loc 1 295 0
 25228 0260 1A60     		str	r2, [r3, #0]
 25229              	.L16:
 296:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****       }
 297:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****     }  
 298:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   }
 299:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c ****   return status;  
 25230              		.loc 1 299 0
 25231 0262 97F87B30 		ldrb	r3, [r7, #123]	@ zero_extendqisi2
 300:../inc/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_sha1.c **** }
 25232              		.loc 1 300 0
 25233 0266 1846     		mov	r0, r3
 25234 0268 07F18407 		add	r7, r7, #132
 25235 026c BD46     		mov	sp, r7
 25236 026e 90BD     		pop	{r4, r7, pc}
 25237              		.cfi_endproc
 25238              	.LFE111:
 25240              		.text
 25241              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hash_sha1.c
     /tmp/cc0WsoNw.s:24578  .text.HASH_SHA1:00000000 $t
     /tmp/cc0WsoNw.s:24583  .text.HASH_SHA1:00000000 HASH_SHA1
     /tmp/cc0WsoNw.s:24833  .text.HMAC_SHA1:00000000 $t
     /tmp/cc0WsoNw.s:24838  .text.HMAC_SHA1:00000000 HMAC_SHA1
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HASH_DeInit
HASH_Init
HASH_SetLastWordValidBitsNbr
HASH_DataIn
HASH_StartDigest
HASH_GetFlagStatus
HASH_GetDigest
