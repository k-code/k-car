   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"misc.c"
  23              	.Ltext0:
  24              		.file 1 "../inc/STM32F4xx_StdPeriph_Driver/src/misc.c"
 24578              		.align	2
 24579              		.global	NVIC_PriorityGroupConfig
 24580              		.thumb
 24581              		.thumb_func
 24583              	NVIC_PriorityGroupConfig:
 24584              	.LFB110:
   1:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
   2:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
   3:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @file    misc.c
   4:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @author  MCD Application Team
   5:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @version V1.0.0
   6:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @date    30-September-2011
   7:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          to CMSIS functions).
   9:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          
  10:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @verbatim   
  11:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                               
  12:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  13:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                        How to configure Interrupts using driver 
  14:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  15:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * 
  16:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            This section provide functions allowing to configure the NVIC interrupts (IRQ).
  17:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            The Cortex-M4 exceptions are managed by CMSIS functions.
  18:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  19:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            1. Configure the NVIC Priority Grouping using NVIC_PriorityGroupConfig()
  20:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                function according to the following table.
  21:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****  
  22:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  The table below gives the allowed values of the pre-emption priority and subpriority according
  23:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  to the Priority Grouping configuration performed by NVIC_PriorityGroupConfig function
  24:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  25:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *      NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  26:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  27:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_0  |                0                  |            0-15             | 0
  28:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 4
  29:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  30:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_1  |                0-1                |            0-7              | 1
  31:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 3
  32:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  33:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_2  |                0-3                |            0-3              | 2
  34:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 2
  35:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  36:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_3  |                0-7                |            0-1              | 3
  37:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 1
  38:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  39:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_4  |                0-15               |            0                | 4
  40:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 0
  41:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  42:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  43:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            2. Enable and Configure the priority of the selected IRQ Channels using NVIC_Init() 
  44:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  45:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
  46:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *        The pending IRQ priority will be managed only by the subpriority.
  47:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  48:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  IRQ priority order (sorted by highest to lowest priority):
  49:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest pre-emption priority
  50:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest subpriority
  51:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest hardware priority (IRQ number)
  52:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  53:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @endverbatim
  54:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  55:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  56:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @attention
  57:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  58:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  59:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  60:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  61:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  62:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  63:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  64:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  65:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  66:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  67:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  68:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  69:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Includes ------------------------------------------------------------------*/
  70:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** #include "misc.h"
  71:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  72:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  73:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  74:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  75:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  76:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC 
  77:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief MISC driver modules
  78:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  79:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  80:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  81:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private typedef -----------------------------------------------------------*/
  82:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private define ------------------------------------------------------------*/
  83:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  84:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  85:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private macro -------------------------------------------------------------*/
  86:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private variables ---------------------------------------------------------*/
  87:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private function prototypes -----------------------------------------------*/
  88:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private functions ---------------------------------------------------------*/
  89:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  90:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Functions
  91:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  92:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  93:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  94:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
  95:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  96:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  97:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
  98:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  99:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                4 bits for subpriority
 100:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
 101:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                3 bits for subpriority
 102:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
 103:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                2 bits for subpriority
 104:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
 105:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                1 bits for subpriority
 106:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
 107:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                0 bits for subpriority
 108:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 109:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 110:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 111:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 112:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
 113:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 24585              		.loc 1 113 0
 24586              		.cfi_startproc
 24587              		@ args = 0, pretend = 0, frame = 8
 24588              		@ frame_needed = 1, uses_anonymous_args = 0
 24589              		@ link register save eliminated.
 24590 0000 80B4     		push	{r7}
 24591              	.LCFI0:
 24592              		.cfi_def_cfa_offset 4
 24593 0002 83B0     		sub	sp, sp, #12
 24594              	.LCFI1:
 24595              		.cfi_def_cfa_offset 16
 24596 0004 00AF     		add	r7, sp, #0
 24597              		.cfi_offset 7, -4
 24598              	.LCFI2:
 24599              		.cfi_def_cfa_register 7
 24600 0006 7860     		str	r0, [r7, #4]
 114:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 115:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 116:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 117:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 118:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
 24601              		.loc 1 118 0
 24602 0008 054A     		ldr	r2, .L2
 24603 000a 7B68     		ldr	r3, [r7, #4]
 24604 000c 43F0BE63 		orr	r3, r3, #99614720
 24605 0010 43F42023 		orr	r3, r3, #655360
 24606 0014 D360     		str	r3, [r2, #12]
 119:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 24607              		.loc 1 119 0
 24608 0016 07F10C07 		add	r7, r7, #12
 24609 001a BD46     		mov	sp, r7
 24610 001c 80BC     		pop	{r7}
 24611 001e 7047     		bx	lr
 24612              	.L3:
 24613              		.align	2
 24614              	.L2:
 24615 0020 00ED00E0 		.word	-536810240
 24616              		.cfi_endproc
 24617              	.LFE110:
 24619              		.section	.text.NVIC_Init,"ax",%progbits
 24620              		.align	2
 24621              		.global	NVIC_Init
 24622              		.thumb
 24623              		.thumb_func
 24625              	NVIC_Init:
 24626              	.LFB111:
 120:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 121:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 122:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 123:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         parameters in the NVIC_InitStruct.
 124:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 125:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         function should be called before. 
 126:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 127:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 128:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 129:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 130:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 131:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 24627              		.loc 1 131 0
 24628              		.cfi_startproc
 24629              		@ args = 0, pretend = 0, frame = 16
 24630              		@ frame_needed = 1, uses_anonymous_args = 0
 24631              		@ link register save eliminated.
 24632 0000 80B4     		push	{r7}
 24633              	.LCFI3:
 24634              		.cfi_def_cfa_offset 4
 24635 0002 85B0     		sub	sp, sp, #20
 24636              	.LCFI4:
 24637              		.cfi_def_cfa_offset 24
 24638 0004 00AF     		add	r7, sp, #0
 24639              		.cfi_offset 7, -4
 24640              	.LCFI5:
 24641              		.cfi_def_cfa_register 7
 24642 0006 7860     		str	r0, [r7, #4]
 132:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
 24643              		.loc 1 132 0
 24644 0008 4FF00003 		mov	r3, #0
 24645 000c FB73     		strb	r3, [r7, #15]
 24646 000e 4FF00003 		mov	r3, #0
 24647 0012 BB73     		strb	r3, [r7, #14]
 24648 0014 4FF00F03 		mov	r3, #15
 24649 0018 7B73     		strb	r3, [r7, #13]
 133:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 134:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 135:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 136:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 137:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 138:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 139:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
 24650              		.loc 1 139 0
 24651 001a 7B68     		ldr	r3, [r7, #4]
 24652 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 24653 001e 002B     		cmp	r3, #0
 24654 0020 3ED0     		beq	.L5
 140:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 141:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 142:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
 24655              		.loc 1 142 0
 24656 0022 2B4B     		ldr	r3, .L7
 24657 0024 DB68     		ldr	r3, [r3, #12]
 24658 0026 6FEA0303 		mvn	r3, r3
 24659 002a 03F4E063 		and	r3, r3, #1792
 24660 002e 4FEA1323 		lsr	r3, r3, #8
 24661 0032 FB73     		strb	r3, [r7, #15]
 143:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppre = (0x4 - tmppriority);
 24662              		.loc 1 143 0
 24663 0034 FB7B     		ldrb	r3, [r7, #15]
 24664 0036 C3F10403 		rsb	r3, r3, #4
 24665 003a BB73     		strb	r3, [r7, #14]
 144:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
 24666              		.loc 1 144 0
 24667 003c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 24668 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24669 0040 42FA03F3 		asr	r3, r2, r3
 24670 0044 7B73     		strb	r3, [r7, #13]
 145:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 146:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 24671              		.loc 1 146 0
 24672 0046 7B68     		ldr	r3, [r7, #4]
 24673 0048 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 24674 004a 1A46     		mov	r2, r3
 24675 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 24676 004e 02FA03F3 		lsl	r3, r2, r3
 24677 0052 FB73     		strb	r3, [r7, #15]
 147:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
 24678              		.loc 1 147 0
 24679 0054 7B68     		ldr	r3, [r7, #4]
 24680 0056 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 24681 0058 7B7B     		ldrb	r3, [r7, #13]
 24682 005a 02EA0303 		and	r3, r2, r3
 24683 005e DAB2     		uxtb	r2, r3
 24684 0060 FB7B     		ldrb	r3, [r7, #15]
 24685 0062 42EA0303 		orr	r3, r2, r3
 24686 0066 FB73     		strb	r3, [r7, #15]
 148:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 149:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
 24687              		.loc 1 149 0
 24688 0068 FB7B     		ldrb	r3, [r7, #15]
 24689 006a 4FEA0313 		lsl	r3, r3, #4
 24690 006e FB73     		strb	r3, [r7, #15]
 150:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 151:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 24691              		.loc 1 151 0
 24692 0070 184A     		ldr	r2, .L7+4
 24693 0072 7B68     		ldr	r3, [r7, #4]
 24694 0074 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 24695 0076 D318     		adds	r3, r2, r3
 24696 0078 FA7B     		ldrb	r2, [r7, #15]
 24697 007a 83F80023 		strb	r2, [r3, #768]
 152:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 153:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 154:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 24698              		.loc 1 154 0
 24699 007e 154B     		ldr	r3, .L7+4
 24700 0080 7A68     		ldr	r2, [r7, #4]
 24701 0082 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 24702 0084 4FEA5212 		lsr	r2, r2, #5
 24703 0088 D2B2     		uxtb	r2, r2
 155:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 24704              		.loc 1 155 0
 24705 008a 7968     		ldr	r1, [r7, #4]
 24706 008c 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 24707 008e 01F01F01 		and	r1, r1, #31
 24708 0092 4FF00100 		mov	r0, #1
 24709 0096 00FA01F1 		lsl	r1, r0, r1
 154:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 24710              		.loc 1 154 0
 24711 009a 43F82210 		str	r1, [r3, r2, lsl #2]
 24712 009e 11E0     		b	.L4
 24713              	.L5:
 156:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 157:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 158:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 159:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 160:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 24714              		.loc 1 160 0
 24715 00a0 0C4B     		ldr	r3, .L7+4
 24716 00a2 7A68     		ldr	r2, [r7, #4]
 24717 00a4 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 24718 00a6 4FEA5212 		lsr	r2, r2, #5
 24719 00aa D2B2     		uxtb	r2, r2
 161:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 24720              		.loc 1 161 0
 24721 00ac 7968     		ldr	r1, [r7, #4]
 24722 00ae 0978     		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 24723 00b0 01F01F01 		and	r1, r1, #31
 24724 00b4 4FF00100 		mov	r0, #1
 24725 00b8 00FA01F1 		lsl	r1, r0, r1
 160:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 24726              		.loc 1 160 0
 24727 00bc 02F12002 		add	r2, r2, #32
 24728 00c0 43F82210 		str	r1, [r3, r2, lsl #2]
 24729              	.L4:
 162:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 163:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 24730              		.loc 1 163 0
 24731 00c4 07F11407 		add	r7, r7, #20
 24732 00c8 BD46     		mov	sp, r7
 24733 00ca 80BC     		pop	{r7}
 24734 00cc 7047     		bx	lr
 24735              	.L8:
 24736 00ce 00BF     		.align	2
 24737              	.L7:
 24738 00d0 00ED00E0 		.word	-536810240
 24739 00d4 00E100E0 		.word	-536813312
 24740              		.cfi_endproc
 24741              	.LFE111:
 24743              		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 24744              		.align	2
 24745              		.global	NVIC_SetVectorTable
 24746              		.thumb
 24747              		.thumb_func
 24749              	NVIC_SetVectorTable:
 24750              	.LFB112:
 164:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 165:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 166:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Sets the vector table location and Offset.
 167:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 168:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 169:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_RAM: Vector Table in internal SRAM.
 170:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_FLASH: Vector Table in internal FLASH.
 171:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x200.
 172:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 173:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 174:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 175:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** { 
 24751              		.loc 1 175 0
 24752              		.cfi_startproc
 24753              		@ args = 0, pretend = 0, frame = 8
 24754              		@ frame_needed = 1, uses_anonymous_args = 0
 24755              		@ link register save eliminated.
 24756 0000 80B4     		push	{r7}
 24757              	.LCFI6:
 24758              		.cfi_def_cfa_offset 4
 24759 0002 83B0     		sub	sp, sp, #12
 24760              	.LCFI7:
 24761              		.cfi_def_cfa_offset 16
 24762 0004 00AF     		add	r7, sp, #0
 24763              		.cfi_offset 7, -4
 24764              	.LCFI8:
 24765              		.cfi_def_cfa_register 7
 24766 0006 7860     		str	r0, [r7, #4]
 24767 0008 3960     		str	r1, [r7, #0]
 176:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 177:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 178:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 179:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****    
 180:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 24768              		.loc 1 180 0
 24769 000a 074A     		ldr	r2, .L10
 24770 000c 3B68     		ldr	r3, [r7, #0]
 24771 000e 23F06043 		bic	r3, r3, #-536870912
 24772 0012 23F07F03 		bic	r3, r3, #127
 24773 0016 7968     		ldr	r1, [r7, #4]
 24774 0018 0B43     		orrs	r3, r3, r1
 24775 001a 9360     		str	r3, [r2, #8]
 181:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 24776              		.loc 1 181 0
 24777 001c 07F10C07 		add	r7, r7, #12
 24778 0020 BD46     		mov	sp, r7
 24779 0022 80BC     		pop	{r7}
 24780 0024 7047     		bx	lr
 24781              	.L11:
 24782 0026 00BF     		.align	2
 24783              	.L10:
 24784 0028 00ED00E0 		.word	-536810240
 24785              		.cfi_endproc
 24786              	.LFE112:
 24788              		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 24789              		.align	2
 24790              		.global	NVIC_SystemLPConfig
 24791              		.thumb
 24792              		.thumb_func
 24794              	NVIC_SystemLPConfig:
 24795              	.LFB113:
 182:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 183:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 184:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 185:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 186:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 187:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SEVONPEND: Low Power SEV on Pend.
 188:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP: Low Power DEEPSLEEP request.
 189:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT: Low Power Sleep on Exit.
 190:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 191:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 192:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 193:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 194:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 24796              		.loc 1 194 0
 24797              		.cfi_startproc
 24798              		@ args = 0, pretend = 0, frame = 8
 24799              		@ frame_needed = 1, uses_anonymous_args = 0
 24800              		@ link register save eliminated.
 24801 0000 80B4     		push	{r7}
 24802              	.LCFI9:
 24803              		.cfi_def_cfa_offset 4
 24804 0002 83B0     		sub	sp, sp, #12
 24805              	.LCFI10:
 24806              		.cfi_def_cfa_offset 16
 24807 0004 00AF     		add	r7, sp, #0
 24808              		.cfi_offset 7, -4
 24809              	.LCFI11:
 24810              		.cfi_def_cfa_register 7
 24811 0006 0246     		mov	r2, r0
 24812 0008 0B46     		mov	r3, r1
 24813 000a FA71     		strb	r2, [r7, #7]
 24814 000c BB71     		strb	r3, [r7, #6]
 195:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 196:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 197:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 198:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 199:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 24815              		.loc 1 199 0
 24816 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 24817 0010 002B     		cmp	r3, #0
 24818 0012 07D0     		beq	.L13
 200:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 201:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR |= LowPowerMode;
 24819              		.loc 1 201 0
 24820 0014 0A4B     		ldr	r3, .L15
 24821 0016 0A4A     		ldr	r2, .L15
 24822 0018 1169     		ldr	r1, [r2, #16]
 24823 001a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24824 001c 41EA0202 		orr	r2, r1, r2
 24825 0020 1A61     		str	r2, [r3, #16]
 24826 0022 08E0     		b	.L12
 24827              	.L13:
 202:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 203:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 204:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 205:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 24828              		.loc 1 205 0
 24829 0024 064B     		ldr	r3, .L15
 24830 0026 064A     		ldr	r2, .L15
 24831 0028 1169     		ldr	r1, [r2, #16]
 24832 002a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 24833 002c 6FEA0202 		mvn	r2, r2
 24834 0030 01EA0202 		and	r2, r1, r2
 24835 0034 1A61     		str	r2, [r3, #16]
 24836              	.L12:
 206:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 207:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 24837              		.loc 1 207 0
 24838 0036 07F10C07 		add	r7, r7, #12
 24839 003a BD46     		mov	sp, r7
 24840 003c 80BC     		pop	{r7}
 24841 003e 7047     		bx	lr
 24842              	.L16:
 24843              		.align	2
 24844              	.L15:
 24845 0040 00ED00E0 		.word	-536810240
 24846              		.cfi_endproc
 24847              	.LFE113:
 24849              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 24850              		.align	2
 24851              		.global	SysTick_CLKSourceConfig
 24852              		.thumb
 24853              		.thumb_func
 24855              	SysTick_CLKSourceConfig:
 24856              	.LFB114:
 208:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 209:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 210:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the SysTick clock source.
 211:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 212:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 213:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 214:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 215:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 216:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 217:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 218:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 24857              		.loc 1 218 0
 24858              		.cfi_startproc
 24859              		@ args = 0, pretend = 0, frame = 8
 24860              		@ frame_needed = 1, uses_anonymous_args = 0
 24861              		@ link register save eliminated.
 24862 0000 80B4     		push	{r7}
 24863              	.LCFI12:
 24864              		.cfi_def_cfa_offset 4
 24865 0002 83B0     		sub	sp, sp, #12
 24866              	.LCFI13:
 24867              		.cfi_def_cfa_offset 16
 24868 0004 00AF     		add	r7, sp, #0
 24869              		.cfi_offset 7, -4
 24870              	.LCFI14:
 24871              		.cfi_def_cfa_register 7
 24872 0006 7860     		str	r0, [r7, #4]
 219:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 220:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 221:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 24873              		.loc 1 221 0
 24874 0008 7B68     		ldr	r3, [r7, #4]
 24875 000a 042B     		cmp	r3, #4
 24876 000c 06D1     		bne	.L18
 222:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 223:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 24877              		.loc 1 223 0
 24878 000e 094B     		ldr	r3, .L20
 24879 0010 084A     		ldr	r2, .L20
 24880 0012 1268     		ldr	r2, [r2, #0]
 24881 0014 42F00402 		orr	r2, r2, #4
 24882 0018 1A60     		str	r2, [r3, #0]
 24883 001a 05E0     		b	.L17
 24884              	.L18:
 224:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 225:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 226:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 227:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 24885              		.loc 1 227 0
 24886 001c 054B     		ldr	r3, .L20
 24887 001e 054A     		ldr	r2, .L20
 24888 0020 1268     		ldr	r2, [r2, #0]
 24889 0022 22F00402 		bic	r2, r2, #4
 24890 0026 1A60     		str	r2, [r3, #0]
 24891              	.L17:
 228:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 229:../inc/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 24892              		.loc 1 229 0
 24893 0028 07F10C07 		add	r7, r7, #12
 24894 002c BD46     		mov	sp, r7
 24895 002e 80BC     		pop	{r7}
 24896 0030 7047     		bx	lr
 24897              	.L21:
 24898 0032 00BF     		.align	2
 24899              	.L20:
 24900 0034 10E000E0 		.word	-536813552
 24901              		.cfi_endproc
 24902              	.LFE114:
 24904              		.text
 24905              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 misc.c
     /tmp/ccrwNyaS.s:24578  .text.NVIC_PriorityGroupConfig:00000000 $t
     /tmp/ccrwNyaS.s:24583  .text.NVIC_PriorityGroupConfig:00000000 NVIC_PriorityGroupConfig
     /tmp/ccrwNyaS.s:24615  .text.NVIC_PriorityGroupConfig:00000020 $d
     /tmp/ccrwNyaS.s:24620  .text.NVIC_Init:00000000 $t
     /tmp/ccrwNyaS.s:24625  .text.NVIC_Init:00000000 NVIC_Init
     /tmp/ccrwNyaS.s:24738  .text.NVIC_Init:000000d0 $d
     /tmp/ccrwNyaS.s:24744  .text.NVIC_SetVectorTable:00000000 $t
     /tmp/ccrwNyaS.s:24749  .text.NVIC_SetVectorTable:00000000 NVIC_SetVectorTable
     /tmp/ccrwNyaS.s:24784  .text.NVIC_SetVectorTable:00000028 $d
     /tmp/ccrwNyaS.s:24789  .text.NVIC_SystemLPConfig:00000000 $t
     /tmp/ccrwNyaS.s:24794  .text.NVIC_SystemLPConfig:00000000 NVIC_SystemLPConfig
     /tmp/ccrwNyaS.s:24845  .text.NVIC_SystemLPConfig:00000040 $d
     /tmp/ccrwNyaS.s:24850  .text.SysTick_CLKSourceConfig:00000000 $t
     /tmp/ccrwNyaS.s:24855  .text.SysTick_CLKSourceConfig:00000000 SysTick_CLKSourceConfig
     /tmp/ccrwNyaS.s:24900  .text.SysTick_CLKSourceConfig:00000034 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
